/*
 * Copyright (C) 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


import androidx.build.LibraryGroups
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static androidx.build.dependencies.DependenciesKt.*

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("kotlin-android")
    id("androidx.inspection")
}

dependencies {
    api("androidx.annotation:annotation:1.1.0")
    api(KOTLIN_STDLIB)
    compileOnly(project(":inspection:inspection"))
    compileOnly(project(':lifecycle:lifecycle-runtime'))
    compileOnly(project(':work:work-runtime'))
    compileOnly(project(':room:room-runtime'))

    androidTestImplementation(project(":inspection:inspection-testing"))
    androidTestImplementation(project(':work:work-runtime'))
    androidTestImplementation(project(':work:work-runtime-ktx'))
    androidTestImplementation(ANDROIDX_TEST_RUNNER)
    androidTestImplementation(ANDROIDX_TEST_EXT_JUNIT)
    androidTestImplementation(TRUTH)
    androidTestImplementation(KOTLIN_COROUTINES_ANDROID)
    androidTestImplementation(KOTLIN_COROUTINES_TEST)
}

androidx {
    name = "Android WorkManager Inspector"
    publish = Publish.NONE
    mavenGroup = LibraryGroups.WORK
    inceptionYear = "2020"
    toolingProject = true
    description = "The implementation of WorkManager Inspector."
}

android {
    defaultConfig {
        // studio pipeline works only starting with Android O
        minSdkVersion 26
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    }

    sourceSets {
        main.resources.srcDirs += "src/main/proto"
    }
}

// Allow usage of Kotlin's @OptIn.
tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
}
