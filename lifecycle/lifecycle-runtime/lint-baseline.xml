<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.2.0-alpha06" client="gradle" variant="debug" version="4.2.0-alpha06">

    <issue
        id="RestrictedApi"
        message="FastSafeIterableMap can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="            new FastSafeIterableMap&lt;>();"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.size can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        if (mObserverMap.size() == 0) {"
        errorLine2="                         ~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="153"
            column="26"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.eldest can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        State eldestObserverState = mObserverMap.eldest().getValue().mState;"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="156"
            column="50"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.newest can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        State newestObserverState = mObserverMap.newest().getValue().mState;"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="157"
            column="50"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="FastSafeIterableMap.ceil can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        Entry&lt;LifecycleObserver, ObserverWithState> previous = mObserverMap.ceil(observer);"
        errorLine2="                                                                            ~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="162"
            column="77"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="FastSafeIterableMap.putIfAbsent can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        ObserverWithState previous = mObserverMap.putIfAbsent(observer, statefulObserver);"
        errorLine2="                                                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="175"
            column="51"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="FastSafeIterableMap.contains can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="                &amp;&amp; mObserverMap.contains(observer))) {"
        errorLine2="                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="190"
            column="33"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="FastSafeIterableMap.remove can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        mObserverMap.remove(observer);"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="232"
            column="22"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.size can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="        return mObserverMap.size();"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="243"
            column="29"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.iteratorWithAdditions can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="                mObserverMap.iteratorWithAdditions();"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="254"
            column="30"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="FastSafeIterableMap.contains can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="                    &amp;&amp; mObserverMap.contains(entry.getKey()))) {"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="259"
            column="37"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.descendingIterator can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="                mObserverMap.descendingIterator();"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="273"
            column="30"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="FastSafeIterableMap.contains can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="                    &amp;&amp; mObserverMap.contains(entry.getKey()))) {"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="278"
            column="37"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.eldest can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="            if (mState.compareTo(mObserverMap.eldest().getValue().mState) &lt; 0) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="301"
            column="47"/>
    </issue>

    <issue
        id="RestrictedApi"
        message="SafeIterableMap.newest can only be called from within the same library group prefix (referenced groupId=`androidx.arch.core` with prefix androidx.arch from groupId=`androidx.lifecycle`)"
        errorLine1="            Entry&lt;LifecycleObserver, ObserverWithState> newest = mObserverMap.newest();"
        errorLine2="                                                                              ~~~~~~">
        <location
            file="src/main/java/androidx/lifecycle/LifecycleRegistry.java"
            line="304"
            column="79"/>
    </issue>

</issues>
