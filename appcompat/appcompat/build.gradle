import static androidx.build.dependencies.DependenciesKt.*
import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
import androidx.build.Publish

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("kotlin-android")
}

dependencies {
    api("androidx.annotation:annotation:1.1.0")

    api(project(":core:core"))
    implementation("androidx.collection:collection:1.0.0")
    api("androidx.cursoradapter:cursoradapter:1.0.0")
    api(project(":activity:activity"))
    // Activity 1.2 requires depending on Fragment 1.3, so we need project dependencies on both
    // despite only directly requiring new APIs in Activity 1.2
    api(project(":fragment:fragment"))
    api(project(":appcompat:appcompat-resources"))
    api("androidx.drawerlayout:drawerlayout:1.0.0")
    implementation(project(":lifecycle:lifecycle-runtime"))
    implementation(project(":lifecycle:lifecycle-viewmodel"))
    api(project(":savedstate:savedstate"))

    androidTestImplementation(KOTLIN_STDLIB)
    androidTestImplementation(ANDROIDX_TEST_EXT_JUNIT)
    androidTestImplementation(ANDROIDX_TEST_CORE)
    androidTestImplementation(ANDROIDX_TEST_RUNNER)
    androidTestImplementation(ANDROIDX_TEST_RULES)
    androidTestImplementation(TRUTH)
    androidTestImplementation(ESPRESSO_CORE, libs.exclude_for_espresso)
    androidTestImplementation(MOCKITO_CORE, libs.exclude_bytebuddy) // DexMaker has it's own MockMaker
    androidTestImplementation(DEXMAKER_MOCKITO, libs.exclude_bytebuddy) // DexMaker has it's own MockMaker
    androidTestImplementation project(':internal-testutils-appcompat'), {
        exclude group: 'androidx.appcompat', module: 'appcompat'
        exclude group: 'androidx.core', module: 'core'
    }
    androidTestImplementation(MULTIDEX)

    testImplementation(KOTLIN_STDLIB)
    testImplementation(ANDROIDX_TEST_CORE)
    testImplementation(JUNIT)
    testImplementation(ROBOLECTRIC)

    // Uncomment once we want to start publishing the lint rules.
    lintPublish project(":appcompat:appcompat-lint")
}

android {
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    }
    defaultConfig {
        // This disables the builds tools automatic vector -> PNG generation
        generatedDensities = []
        multiDexEnabled = true
    }

    sourceSets {
        main.res.srcDirs += 'src/main/res-public'
    }

    aaptOptions {
        additionalParameters "--no-version-vectors"
        noCompress 'ttf'
    }

    testOptions {
        animationsDisabled = true

        unitTests {
            includeAndroidResources = true
        }
    }

    buildTypes.all {
        consumerProguardFiles("proguard-rules.pro")
    }

    useLibrary 'android.test.runner'
    useLibrary 'android.test.base'
    useLibrary 'android.test.mock'
}

androidx {
    name = "Android AppCompat Library"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenVersion = LibraryVersions.APPCOMPAT
    mavenGroup = LibraryGroups.APPCOMPAT
    inceptionYear = "2011"
    description = "The Support Library is a static library that you can add to your Android application in order to use APIs that are either not available for older platform versions or utility APIs that aren\'t a part of the framework APIs. Compatible on devices running API 14 or later."
    failOnDeprecationWarnings = false
}
