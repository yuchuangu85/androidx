<?xml version="1.0" encoding="UTF-8"?>
<issues format="5" by="lint 4.2.0-alpha06" client="gradle" variant="debug" version="4.2.0-alpha06">

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    /**"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/core/widget/ContentLoadingProgressBar.java"
            line="92"
            column="5"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    /**"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/core/widget/ContentLoadingProgressBar.java"
            line="118"
            column="5"/>
    </issue>

    <issue
        id="BanSynchronizedMethods"
        message="Use of synchronized methods is not recommended"
        errorLine1="    private synchronized static File createFilesDir(File file) {"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="589"
            column="5"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="/**"
        errorLine2="^">
        <location
            file="src/main/java/androidx/core/app/AppLaunchChecker.java"
            line="29"
            column="1"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="/**"
        errorLine2="^">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="147"
            column="1"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="/**"
        errorLine2="^">
        <location
            file="src/main/java/androidx/core/view/inputmethod/EditorInfoCompat.java"
            line="45"
            column="1"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="/**"
        errorLine2="^">
        <location
            file="src/main/java/androidx/core/view/inputmethod/InputConnectionCompat.java"
            line="33"
            column="1"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="    // Inner class required to avoid VFY errors during class init."
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/core/content/LocusIdCompat.java"
            line="146"
            column="5"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="/**"
        errorLine2="^">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="80"
            column="1"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="    @RequiresApi(25)"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="757"
            column="5"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="    @RequiresApi(16)"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/core/view/WindowCompat.java"
            line="122"
            column="5"/>
    </issue>

    <issue
        id="PrivateConstructorForUtilityClass"
        message="Utility class with non private constructor"
        errorLine1="    @RequiresApi(30)"
        errorLine2="    ^">
        <location
            file="src/main/java/androidx/core/view/WindowCompat.java"
            line="138"
            column="5"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.AccessibilityDelegateCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            Object provider = mOriginalDelegate.getAccessibilityNodeProvider(host);"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="320"
            column="49"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.AccessibilityDelegateCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            success = mOriginalDelegate.performAccessibilityAction(host, action, args);"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="355"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityEventCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            event.setContentChangeTypes(changeTypes);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="323"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityEventCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return event.getContentChangeTypes();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="344"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityEventCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            event.setMovementGranularity(granularity);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="359"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityEventCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return event.getMovementGranularity();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="370"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityEventCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            event.setAction(action);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="395"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityEventCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return event.getAction();"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="406"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityManagerCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return manager.addTouchExplorationStateChangeListener("
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="172"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityManagerCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return manager.removeTouchExplorationStateChangeListener("
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="191"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                mAction = new AccessibilityNodeInfo.AccessibilityAction(id, label);"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="641"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return ((AccessibilityNodeInfo.AccessibilityAction) mAction).getId();"
        errorLine2="                                                                             ~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="655"
            column="78"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.AccessibilityActionCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return ((AccessibilityNodeInfo.AccessibilityAction) mAction).getLabel();"
        errorLine2="                                                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="669"
            column="78"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return new CollectionInfoCompat(AccessibilityNodeInfo.CollectionInfo.obtain("
        errorLine2="                                                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="780"
            column="86"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return new CollectionInfoCompat(AccessibilityNodeInfo.CollectionInfo.obtain("
        errorLine2="                                                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="783"
            column="86"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return new CollectionInfoCompat(AccessibilityNodeInfo.CollectionInfo.obtain("
        errorLine2="                                                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="802"
            column="86"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionInfo) mInfo).getColumnCount();"
        errorLine2="                                                                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="820"
            column="71"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionInfo) mInfo).getRowCount();"
        errorLine2="                                                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="833"
            column="71"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionInfo) mInfo).isHierarchical();"
        errorLine2="                                                                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="846"
            column="71"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionInfo) mInfo).getSelectionMode();"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="864"
            column="71"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return new CollectionItemInfoCompat(AccessibilityNodeInfo.CollectionItemInfo.obtain("
        errorLine2="                                                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="901"
            column="94"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return new CollectionItemInfoCompat(AccessibilityNodeInfo.CollectionItemInfo.obtain("
        errorLine2="                                                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="904"
            column="94"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return new CollectionItemInfoCompat(AccessibilityNodeInfo.CollectionItemInfo.obtain("
        errorLine2="                                                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="926"
            column="94"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionItemInfo) mInfo).getColumnIndex();"
        errorLine2="                                                                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="944"
            column="75"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionItemInfo) mInfo).getColumnSpan();"
        errorLine2="                                                                          ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="957"
            column="75"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionItemInfo) mInfo).getRowIndex();"
        errorLine2="                                                                          ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="970"
            column="75"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionItemInfo) mInfo).getRowSpan();"
        errorLine2="                                                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="983"
            column="75"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionItemInfo) mInfo).isHeading();"
        errorLine2="                                                                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1000"
            column="75"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.CollectionItemInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return ((AccessibilityNodeInfo.CollectionItemInfo) mInfo).isSelected();"
        errorLine2="                                                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1013"
            column="75"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                        AccessibilityNodeInfo.RangeInfo.obtain(type, min, max, current));"
        errorLine2="                                                        ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1043"
            column="57"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.RangeInfo) mInfo).getCurrent();"
        errorLine2="                                                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1062"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.RangeInfo) mInfo).getMax();"
        errorLine2="                                                                 ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1075"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.RangeInfo) mInfo).getMin();"
        errorLine2="                                                                 ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1088"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.RangeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                return ((AccessibilityNodeInfo.RangeInfo) mInfo).getType();"
        errorLine2="                                                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1105"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.TouchDelegateInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                mInfo = new TouchDelegateInfo(targetMap);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1125"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.TouchDelegateInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                return mInfo.getRegionCount();"
        errorLine2="                             ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1147"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.TouchDelegateInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                return mInfo.getRegionAt(index);"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1166"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat.TouchDelegateInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                AccessibilityNodeInfo info = mInfo.getTargetForRegion(region);"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1194"
            column="52"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    AccessibilityNodeInfo.obtain(root, virtualDescendantId));"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1755"
            column="43"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            mInfo.setSource(root, virtualDescendantId);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1817"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return AccessibilityNodeInfoCompat.wrapNonNullInstance(mInfo.findFocus(focus));"
        errorLine2="                                                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1834"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return AccessibilityNodeInfoCompat.wrapNonNullInstance(mInfo.focusSearch(direction));"
        errorLine2="                                                                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1856"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            mInfo.addChild(root, virtualDescendantId);"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1928"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return mInfo.removeChild(child);"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1948"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return mInfo.removeChild(root, virtualDescendantId);"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1966"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="        ArrayList&lt;Integer> list = mInfo.getExtras()"
        errorLine2="                                        ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2004"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().putIntegerArrayList(key, list);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2008"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mInfo.addAction((AccessibilityNodeInfo.AccessibilityAction) action.mAction);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2031"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return mInfo.removeAction((AccessibilityNodeInfo.AccessibilityAction) action.mAction);"
        errorLine2="                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2056"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return mInfo.performAction(action, arguments);"
        errorLine2="                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2093"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            mInfo.setMovementGranularities(granularities);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2113"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return mInfo.getMovementGranularities();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2124"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            mInfo.setParent(root, virtualDescendantId);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2210"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return mInfo.isVisibleToUser();"
        errorLine2="                         ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2380"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            mInfo.setVisibleToUser(visibleToUser);"
        errorLine2="                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2400"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return mInfo.isAccessibilityFocused();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2411"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            mInfo.setAccessibilityFocused(focused);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2431"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return mInfo.isImportantForAccessibility();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2589"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            mInfo.setImportantForAccessibility(important);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2608"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().remove(SPANS_START_KEY);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2767"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().remove(SPANS_END_KEY);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2768"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().remove(SPANS_FLAGS_KEY);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2769"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().remove(SPANS_ID_KEY);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2770"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.getExtras().getCharSequence(STATE_DESCRIPTION_KEY);"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2815"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().putCharSequence(STATE_DESCRIPTION_KEY, stateDescription);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2850"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            mInfo.setViewIdResourceName(viewId);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2878"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return mInfo.getViewIdResourceName();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2896"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.getLiveRegion();"
        errorLine2="                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2922"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setLiveRegion(mode);"
        errorLine2="                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2942"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return mInfo.getDrawingOrder();"
        errorLine2="                         ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2959"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            mInfo.setDrawingOrder(drawingOrderInParent);"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2978"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            AccessibilityNodeInfo.CollectionInfo info = mInfo.getCollectionInfo();"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2990"
            column="63"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setCollectionInfo((collectionInfo == null) ? null"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3000"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setCollectionItemInfo((collectionItemInfo == null) ? null"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3009"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            AccessibilityNodeInfo.CollectionItemInfo info = mInfo.getCollectionItemInfo();"
        errorLine2="                                                                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3023"
            column="67"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            AccessibilityNodeInfo.RangeInfo info = mInfo.getRangeInfo();"
        errorLine2="                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3038"
            column="58"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setRangeInfo((AccessibilityNodeInfo.RangeInfo) rangeInfo.mInfo);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3058"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            actions = (List&lt;Object>) (List&lt;?>) mInfo.getActionList();"
        errorLine2="                                                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3076"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setContentInvalid(contentInvalid);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3104"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.isContentInvalid();"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3116"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return mInfo.isContextClickable();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3129"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            mInfo.setContextClickable(contextClickable);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3148"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return mInfo.getHintText();"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3159"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.getExtras().getCharSequence(HINT_TEXT_KEY);"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3161"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mInfo.setHintText(hintText);"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3181"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().putCharSequence(HINT_TEXT_KEY, hintText);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3183"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mInfo.setError(error);"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3202"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return mInfo.getError();"
        errorLine2="                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3213"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            mInfo.setLabelFor(labeled);"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3227"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            mInfo.setLabelFor(root, virtualDescendantId);"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3247"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return AccessibilityNodeInfoCompat.wrapNonNullInstance(mInfo.getLabelFor());"
        errorLine2="                                                                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3264"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            mInfo.setLabeledBy(label);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3278"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            mInfo.setLabeledBy(root, virtualDescendantId);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3303"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return AccessibilityNodeInfoCompat.wrapNonNullInstance(mInfo.getLabeledBy());"
        errorLine2="                                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3320"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.canOpenPopup();"
        errorLine2="                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3333"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setCanOpenPopup(opensPopup);"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3351"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            List&lt;AccessibilityNodeInfo> nodes = mInfo.findAccessibilityNodeInfosByViewId(viewId);"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3379"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.getExtras();"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3405"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.getInputType();"
        errorLine2="                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3418"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setInputType(inputType);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3439"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mInfo.setMaxTextLength(max);"
        errorLine2="                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3460"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return mInfo.getMaxTextLength();"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3472"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            mInfo.setTextSelection(start, end);"
        errorLine2="                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3493"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return mInfo.getTextSelectionStart();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3504"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return mInfo.getTextSelectionEnd();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3517"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            return AccessibilityNodeInfoCompat.wrapNonNullInstance(mInfo.getTraversalBefore());"
        errorLine2="                                                                         ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3534"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            mInfo.setTraversalBefore(view);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3556"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            mInfo.setTraversalBefore(root, virtualDescendantId);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3583"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            return AccessibilityNodeInfoCompat.wrapNonNullInstance(mInfo.getTraversalAfter());"
        errorLine2="                                                                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3599"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            mInfo.setTraversalAfter(view);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3621"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            mInfo.setTraversalAfter(root, virtualDescendantId);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3647"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return AccessibilityWindowInfoCompat.wrapNonNullInstance(mInfo.getWindow());"
        errorLine2="                                                                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3660"
            column="76"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.isDismissable();"
        errorLine2="                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3673"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setDismissable(dismissable);"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3691"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return mInfo.isEditable();"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3702"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            mInfo.setEditable(editable);"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3722"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.isMultiLine();"
        errorLine2="                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3733"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.setMultiLine(multiLine);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3751"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return mInfo.getTooltipText();"
        errorLine2="                         ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3763"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.getExtras().getCharSequence(TOOLTIP_TEXT_KEY);"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3765"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mInfo.setTooltipText(tooltipText);"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3785"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().putCharSequence(TOOLTIP_TEXT_KEY, tooltipText);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3787"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mInfo.setPaneTitle(paneTitle);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3805"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().putCharSequence(PANE_TITLE_KEY, paneTitle);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3807"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return mInfo.getPaneTitle();"
        errorLine2="                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3819"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.getExtras().getCharSequence(PANE_TITLE_KEY);"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3821"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return mInfo.isScreenReaderFocusable();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3838"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mInfo.setScreenReaderFocusable(screenReaderFocusable);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3857"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return mInfo.isShowingHintText();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3872"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mInfo.setShowingHintText(showingHintText);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3892"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return mInfo.isHeading();"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3909"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mInfo.setHeading(isHeading);"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3929"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return mInfo.isTextEntryKey();"
        errorLine2="                         ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3942"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            mInfo.setTextEntryKey(isTextEntryKey);"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3960"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return mInfo.refresh();"
        errorLine2="                         ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3977"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return mInfo.getExtras().getCharSequence(ROLE_DESCRIPTION_KEY);"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3989"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mInfo.getExtras().putCharSequence(ROLE_DESCRIPTION_KEY, roleDescription);"
        errorLine2="                  ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="4021"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            TouchDelegateInfo delegateInfo = mInfo.getTouchDelegateInfo();"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="4043"
            column="52"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.accessibility.AccessibilityNodeInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            mInfo.setTouchDelegateInfo(delegatedInfo.mInfo);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="4070"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.accessibility.AccessibilityRecordCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            record.setSource(root, virtualDescendantId);"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="140"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.view.accessibility.AccessibilityRecordCompat is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="            return record.getMaxScrollX();"
        errorLine2="                          ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="483"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.view.accessibility.AccessibilityRecordCompat is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="            record.setMaxScrollX(maxScrollX);"
        errorLine2="                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="509"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.view.accessibility.AccessibilityRecordCompat is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="            return record.getMaxScrollY();"
        errorLine2="                          ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="533"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.view.accessibility.AccessibilityRecordCompat is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="            record.setMaxScrollY(maxScrollY);"
        errorLine2="                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="559"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.accessibilityservice.AccessibilityServiceInfoCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return info.loadDescription(packageManager);"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/accessibilityservice/AccessibilityServiceInfoCompat.java"
            line="199"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.accessibilityservice.AccessibilityServiceInfoCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return info.getCapabilities();"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/accessibilityservice/AccessibilityServiceInfoCompat.java"
            line="288"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return ((AccessibilityWindowInfo) mInfo).getType();"
        errorLine2="                                                     ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="100"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return ((AccessibilityWindowInfo) mInfo).getLayer();"
        errorLine2="                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="114"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    ((AccessibilityWindowInfo) mInfo).getRoot());"
        errorLine2="                                                      ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="128"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return wrapNonNullInstance(((AccessibilityWindowInfo) mInfo).getParent());"
        errorLine2="                                                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="141"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return ((AccessibilityWindowInfo) mInfo).getId();"
        errorLine2="                                                     ~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="154"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            ((AccessibilityWindowInfo) mInfo).getBoundsInScreen(outBounds);"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="167"
            column="47"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return ((AccessibilityWindowInfo) mInfo).isActive();"
        errorLine2="                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="180"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return ((AccessibilityWindowInfo) mInfo).isFocused();"
        errorLine2="                                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="193"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return ((AccessibilityWindowInfo) mInfo).isAccessibilityFocused();"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="206"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return ((AccessibilityWindowInfo) mInfo).getChildCount();"
        errorLine2="                                                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="219"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return wrapNonNullInstance(((AccessibilityWindowInfo) mInfo).getChild(index));"
        errorLine2="                                                                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="233"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return ((AccessibilityWindowInfo) mInfo).getTitle();"
        errorLine2="                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="247"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    ((AccessibilityWindowInfo) mInfo).getAnchor());"
        errorLine2="                                                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="261"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return wrapNonNullInstance(AccessibilityWindowInfo.obtain());"
        errorLine2="                                                               ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="275"
            column="64"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                            AccessibilityWindowInfo.obtain((AccessibilityWindowInfo) info.mInfo));"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="294"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.accessibility.AccessibilityWindowInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            ((AccessibilityWindowInfo) mInfo).recycle();"
        errorLine2="                                              ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="310"
            column="47"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            activity.startActivityForResult(intent, requestCode, options);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="237"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            activity.startIntentSenderForResult(intent, requestCode, fillInIntent, flagsMask,"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="274"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            activity.finishAffinity();"
        errorLine2="                     ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="291"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            activity.finishAfterTransition();"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="308"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            return activity.getReferrer();"
        errorLine2="                            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="333"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return activity.requireViewById(id);"
        errorLine2="                            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="366"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            activity.setEnterSharedElementCallback(frameworkCallback);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="390"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            activity.setExitSharedElementCallback(frameworkCallback);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="409"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            activity.postponeEnterTransition();"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="415"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            activity.startPostponedEnterTransition();"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="421"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            activity.requestPermissions(permissions, requestCode);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="516"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.ActivityCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return activity.shouldShowRequestPermissionRationale(permission);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="553"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class null is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                            listener.onSharedElementsReady();"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="680"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.app.ActivityManagerCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return activityManager.isLowRamDevice();"
        errorLine2="                                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityManagerCompat.java"
            line="41"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.ActivityOptionsCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return new ActivityOptionsCompatImpl(ActivityOptions.makeCustomAnimation(context,"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="69"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.ActivityOptionsCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return new ActivityOptionsCompatImpl(ActivityOptions.makeScaleUpAnimation("
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="99"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.ActivityOptionsCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return new ActivityOptionsCompatImpl(ActivityOptions.makeClipRevealAnimation("
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="123"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.ActivityOptionsCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return new ActivityOptionsCompatImpl(ActivityOptions.makeThumbnailScaleUpAnimation("
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="152"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.ActivityOptionsCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return new ActivityOptionsCompatImpl(ActivityOptions.makeSceneTransitionAnimation("
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="180"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.ActivityOptionsCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    ActivityOptions.makeSceneTransitionAnimation(activity, pairs));"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="217"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.ActivityOptionsCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return new ActivityOptionsCompatImpl(ActivityOptions.makeTaskLaunchBehind());"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="235"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.ActivityOptionsCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return new ActivityOptionsCompatImpl(ActivityOptions.makeBasic());"
        errorLine2="                                                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="247"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.ActivityOptionsCompat.ActivityOptionsCompatImpl is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                mActivityOptions.requestUsageTimeReport(receiver);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="277"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.ActivityOptionsCompat.ActivityOptionsCompatImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    mActivityOptions.setLaunchBounds(screenSpacePixelRect));"
        errorLine2="                                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="288"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.ActivityOptionsCompat.ActivityOptionsCompatImpl is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return mActivityOptions.getLaunchBounds();"
        errorLine2="                                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="296"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.AlarmManagerCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            alarmManager.setAlarmClock(new AlarmManager.AlarmClockInfo(triggerTime, showIntent),"
        errorLine2="                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AlarmManagerCompat.java"
            line="60"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.AlarmManagerCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            alarmManager.setAlarmClock(new AlarmManager.AlarmClockInfo(triggerTime, showIntent),"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AlarmManagerCompat.java"
            line="60"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.AlarmManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            alarmManager.setAndAllowWhileIdle(type, triggerAtMillis, operation);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AlarmManagerCompat.java"
            line="118"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.app.AlarmManagerCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            alarmManager.setExact(type, triggerAtMillis, operation);"
        errorLine2="                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AlarmManagerCompat.java"
            line="163"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.AlarmManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            alarmManager.setExactAndAllowWhileIdle(type, triggerAtMillis, operation);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AlarmManagerCompat.java"
            line="223"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.AppOpsManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return AppOpsManager.permissionToOp(permission);"
        errorLine2="                                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AppOpsManagerCompat.java"
            line="76"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.app.AppOpsManagerCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return appOpsManager.noteOp(op, uid, packageName);"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AppOpsManagerCompat.java"
            line="107"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.app.AppOpsManagerCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return appOpsManager.noteOpNoThrow(op, uid, packageName);"
        errorLine2="                                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AppOpsManagerCompat.java"
            line="127"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.AppOpsManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            AppOpsManager appOpsManager = context.getSystemService(AppOpsManager.class);"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AppOpsManagerCompat.java"
            line="157"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.AppOpsManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return appOpsManager.noteProxyOp(op, proxiedPackageName);"
        errorLine2="                                 ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AppOpsManagerCompat.java"
            line="158"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.AppOpsManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            AppOpsManager appOpsManager = context.getSystemService(AppOpsManager.class);"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AppOpsManagerCompat.java"
            line="176"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.AppOpsManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return appOpsManager.noteProxyOpNoThrow(op, proxiedPackageName);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/AppOpsManagerCompat.java"
            line="177"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.graphics.BitmapCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return bitmap.hasMipMap();"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/BitmapCompat.java"
            line="29"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.graphics.BitmapCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            bitmap.setHasMipMap(hasMipMap);"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/BitmapCompat.java"
            line="36"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.BitmapCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return bitmap.getAllocationByteCount();"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/BitmapCompat.java"
            line="49"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.graphics.BlendModeColorFilterCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                    ? new BlendModeColorFilter(color, blendMode) : null;"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/BlendModeColorFilterCompat.java"
            line="45"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.app.BundleCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return bundle.getBinder(key);"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/BundleCompat.java"
            line="106"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.app.BundleCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            bundle.putBinder(key, binder);"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/BundleCompat.java"
            line="122"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.os.CancellationSignal is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                ((android.os.CancellationSignal) obj).cancel();"
        errorLine2="                                                      ~~~~~~">
        <location
            file="src/main/java/androidx/core/os/CancellationSignal.java"
            line="84"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.os.CancellationSignal is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                mCancellationSignalObj = new android.os.CancellationSignal();"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/CancellationSignal.java"
            line="143"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.os.CancellationSignal is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    ((android.os.CancellationSignal) mCancellationSignalObj).cancel();"
        errorLine2="                                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/core/os/CancellationSignal.java"
            line="145"
            column="78"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="        if (!Objects.equals(foreground.getModel(), background.getModel())) {"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="92"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        if (!Objects.equals(foreground.getModel(), background.getModel())) {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="92"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        if (!Objects.equals(foreground.getModel(), background.getModel())) {"
        errorLine2="                                                              ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="92"
            column="63"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                    &quot;Color models must match (&quot; + foreground.getModel() + &quot; vs. &quot;"
        errorLine2="                                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="94"
            column="62"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                            + background.getModel() + &quot;)&quot;);"
        errorLine2="                                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="95"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="        Color s = Objects.equals(background.getColorSpace(), foreground.getColorSpace())"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="98"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        Color s = Objects.equals(background.getColorSpace(), foreground.getColorSpace())"
        errorLine2="                                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="98"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        Color s = Objects.equals(background.getColorSpace(), foreground.getColorSpace())"
        errorLine2="                                                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="98"
            column="73"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                : foreground.convert(background.getColorSpace());"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="100"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                : foreground.convert(background.getColorSpace());"
        errorLine2="                                                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="100"
            column="49"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        float[] src = s.getComponents();"
        errorLine2="                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="102"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        float[] dst = background.getComponents();"
        errorLine2="                                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="103"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        float sa = s.alpha();"
        errorLine2="                     ~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="105"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        float da = background.alpha() * (1.0f - sa);"
        errorLine2="                              ~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="107"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        int ai = background.getComponentCount() - 1;"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="111"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        return Color.valueOf(dst, background.getColorSpace());"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="127"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.ColorUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        return Color.valueOf(dst, background.getColorSpace());"
        errorLine2="                                             ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/ColorUtils.java"
            line="127"
            column="46"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.CompoundButtonCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            button.setButtonTintList(tint);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/CompoundButtonCompat.java"
            line="58"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.CompoundButtonCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return button.getButtonTintList();"
        errorLine2="                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/CompoundButtonCompat.java"
            line="72"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.CompoundButtonCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            button.setButtonTintMode(tintMode);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/CompoundButtonCompat.java"
            line="94"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.CompoundButtonCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return button.getButtonTintMode();"
        errorLine2="                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/CompoundButtonCompat.java"
            line="108"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.CompoundButtonCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return button.getButtonDrawable();"
        errorLine2="                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/CompoundButtonCompat.java"
            line="124"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.os.ConfigurationCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return LocaleListCompat.wrap(configuration.getLocales());"
        errorLine2="                                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/ConfigurationCompat.java"
            line="42"
            column="56"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.net.ConnectivityManagerCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return cm.isActiveNetworkMetered();"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/net/ConnectivityManagerCompat.java"
            line="101"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.net.ConnectivityManagerCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return cm.getRestrictBackgroundStatus();"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/net/ConnectivityManagerCompat.java"
            line="160"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.content.ContentResolverCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                return resolver.query(uri, projection, selection, selectionArgs, sortOrder,"
        errorLine2="                                ~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="81"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            context.startActivities(intents, options);"
        errorLine2="                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="224"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            context.startActivity(intent, options);"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="251"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return context.getDataDir();"
        errorLine2="                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="275"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return context.getObbDirs();"
        errorLine2="                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="328"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return context.getExternalFilesDirs(type);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="381"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return context.getExternalCacheDirs();"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="434"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return context.getDrawable(id);"
        errorLine2="                           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="455"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getColorStateList(id);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="494"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getColor(id);"
        errorLine2="                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="517"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return context.getNoBackupFilesDir();"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="558"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return context.getCodeCacheDir();"
        errorLine2="                           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="582"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return context.createDeviceProtectedStorageContext();"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="637"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return context.isDeviceProtectedStorage();"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="651"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return context.getMainExecutor();"
        errorLine2="                           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="664"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            context.startForegroundService(intent);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="696"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(serviceClass);"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="716"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.ContextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemServiceName(serviceClass);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="736"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.database.CursorWindowCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return new CursorWindow(name, windowSizeBytes);"
        errorLine2="                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/database/CursorWindowCompat.java"
            line="43"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.database.CursorWindowCompat is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="            return new CursorWindow(name);"
        errorLine2="                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/database/CursorWindowCompat.java"
            line="45"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.DialogCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return dialog.requireViewById(id);"
        errorLine2="                          ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/DialogCompat.java"
            line="56"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            Display.Mode[] supportedModes = display.getSupportedModes();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="68"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        return (mode.getPhysicalWidth() == size.x &amp;&amp; mode.getPhysicalHeight() == size.y)"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="143"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        return (mode.getPhysicalWidth() == size.x &amp;&amp; mode.getPhysicalHeight() == size.y)"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="143"
            column="59"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                || (mode.getPhysicalWidth() == size.y &amp;&amp; mode.getPhysicalHeight() == size.x);"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="144"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                || (mode.getPhysicalWidth() == size.y &amp;&amp; mode.getPhysicalHeight() == size.x);"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="144"
            column="63"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                Display.Mode mode = display.getMode();"
        errorLine2="                                            ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="215"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                displaySize.x = mode.getPhysicalWidth();"
        errorLine2="                                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="216"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                displaySize.y = mode.getPhysicalHeight();"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="217"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.DisplayCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                display.getRealSize(displaySize);"
        errorLine2="                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="219"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat.ModeCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            mPhysicalDisplaySize = new Point(mode.getPhysicalWidth(), mode.getPhysicalHeight());"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="276"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.DisplayCompat.ModeCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            mPhysicalDisplaySize = new Point(mode.getPhysicalWidth(), mode.getPhysicalHeight());"
        errorLine2="                                                                           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCompat.java"
            line="276"
            column="76"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.DisplayCutoutCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="        this(SDK_INT >= 28 ? new DisplayCutout(safeInsets, boundingRects) : null);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="56"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.DisplayCutoutCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return new DisplayCutout(safeInsets.toPlatformInsets(), boundLeft,"
        errorLine2="                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="88"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.DisplayCutoutCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return new DisplayCutout(safeInsetRect, boundingRects);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="106"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.DisplayCutoutCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return ((DisplayCutout) mDisplayCutout).getSafeInsetTop();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="119"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.DisplayCutoutCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return ((DisplayCutout) mDisplayCutout).getSafeInsetBottom();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="128"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.DisplayCutoutCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return ((DisplayCutout) mDisplayCutout).getSafeInsetLeft();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="137"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.DisplayCutoutCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return ((DisplayCutout) mDisplayCutout).getSafeInsetRight();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="146"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.DisplayCutoutCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return ((DisplayCutout) mDisplayCutout).getBoundingRects();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="164"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.hardware.display.DisplayManagerCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                    .getDisplay(displayId);"
        errorLine2="                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/display/DisplayManagerCompat.java"
            line="86"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.hardware.display.DisplayManagerCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                    .getDisplays();"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/display/DisplayManagerCompat.java"
            line="106"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.hardware.display.DisplayManagerCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                    .getDisplays(category);"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/display/DisplayManagerCompat.java"
            line="135"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.DragAndDropPermissionsCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    activity.requestDragAndDropPermissions(dragEvent);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DragAndDropPermissionsCompat.java"
            line="52"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.DragAndDropPermissionsCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            ((DragAndDropPermissions) mDragAndDropPermissions).release();"
        errorLine2="                                                               ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DragAndDropPermissionsCompat.java"
            line="65"
            column="64"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            drawable.setAutoMirrored(mirrored);"
        errorLine2="                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="79"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return drawable.isAutoMirrored();"
        errorLine2="                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="96"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            drawable.setHotspot(x, y);"
        errorLine2="                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="111"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            drawable.setHotspotBounds(left, top, right, bottom);"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="124"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            drawable.setTint(tint);"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="136"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            drawable.setTintList(tint);"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="150"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            drawable.setTintMode(tintMode);"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="164"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return drawable.getAlpha();"
        errorLine2="                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="178"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            drawable.applyTheme(theme);"
        errorLine2="                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="189"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return drawable.canApplyTheme();"
        errorLine2="                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="198"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return drawable.getColorFilter();"
        errorLine2="                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="211"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                clearColorFilter(((InsetDrawable) drawable).getDrawable());"
        errorLine2="                                                            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="232"
            column="61"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                        child = state.getChild(i);"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="242"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            drawable.inflate(res, parser, attrs, theme);"
        errorLine2="                     ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="269"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return drawable.setLayoutDirection(layoutDirection);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="355"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.DrawableCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return drawable.getLayoutDirection();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="392"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.EdgeEffectCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            edgeEffect.onPull(deltaDistance, displacement);"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/EdgeEffectCompat.java"
            line="153"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.os.EnvironmentCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return Environment.getExternalStorageState(path);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/EnvironmentCompat.java"
            line="60"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.os.EnvironmentCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return Environment.getStorageState(path);"
        errorLine2="                               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/EnvironmentCompat.java"
            line="62"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.FileProvider is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    File[] externalMediaDirs = context.getExternalMediaDirs();"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/FileProvider.java"
            line="646"
            column="56"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return (fp != null) &amp;&amp; fp.hasEnrolledFingerprints();"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="68"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return (fp != null) &amp;&amp; fp.isHardwareDetected();"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="83"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                fp.authenticate("
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="113"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(FingerprintManager.class);"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="127"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(FingerprintManager.class);"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="130"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return new FingerprintManager.CryptoObject(cryptoObject.getCipher());"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="141"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return new FingerprintManager.CryptoObject(cryptoObject.getSignature());"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="143"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return new FingerprintManager.CryptoObject(cryptoObject.getMac());"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="145"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        } else if (cryptoObject.getCipher() != null) {"
        errorLine2="                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="155"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return new CryptoObject(cryptoObject.getCipher());"
        errorLine2="                                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="156"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        } else if (cryptoObject.getSignature() != null) {"
        errorLine2="                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="157"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return new CryptoObject(cryptoObject.getSignature());"
        errorLine2="                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="158"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        } else if (cryptoObject.getMac() != null) {"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="159"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.hardware.fingerprint.FingerprintManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return new CryptoObject(cryptoObject.getMac());"
        errorLine2="                                                 ~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="160"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class null is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                        unwrapCryptoObject(result.getCryptoObject())));"
        errorLine2="                                                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="183"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.res.FontResourcesParserCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return typedArray.getType(index);"
        errorLine2="                              ~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/FontResourcesParserCompat.java"
            line="231"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.provider.FontsContractCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                cursor = context.getContentResolver().query(uri, new String[] {"
        errorLine2="                                                      ~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="836"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric(android.view.FrameMetrics.TOTAL_DURATION));"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="355"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric("
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="359"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric("
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="364"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric(android.view.FrameMetrics.DRAW_DURATION));"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="369"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric(android.view.FrameMetrics.SYNC_DURATION));"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="373"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric("
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="377"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric("
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="382"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric("
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="387"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class null is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                            frameMetrics.getMetric("
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/FrameMetricsAggregator.java"
            line="392"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.location.GnssStatusWrapper is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return mWrapped.hasCarrierFrequencyHz(satelliteIndex);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/location/GnssStatusWrapper.java"
            line="89"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.location.GnssStatusWrapper is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return mWrapped.getCarrierFrequencyHz(satelliteIndex);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/location/GnssStatusWrapper.java"
            line="98"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.GravityCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            Gravity.apply(gravity, w, h, container, outRect, layoutDirection);"
        errorLine2="                    ~~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="65"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.GravityCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            Gravity.apply(gravity, w, h, container, xAdj, yAdj, outRect, layoutDirection);"
        errorLine2="                    ~~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="99"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.GravityCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            Gravity.applyDisplay(gravity, display, inoutObj, layoutDirection);"
        errorLine2="                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="127"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.os.HandlerCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return Handler.createAsync(looper);"
        errorLine2="                           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/HandlerCompat.java"
            line="53"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.os.HandlerCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return Handler.createAsync(looper, callback);"
        errorLine2="                           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/HandlerCompat.java"
            line="94"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.os.HandlerCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return handler.postDelayed(r, token, delayMillis);"
        errorLine2="                           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/HandlerCompat.java"
            line="145"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.HtmlCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return Html.fromHtml(source, flags);"
        errorLine2="                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/HtmlCompat.java"
            line="148"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.HtmlCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return Html.fromHtml(source, flags, imageGetter, tagHandler);"
        errorLine2="                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/HtmlCompat.java"
            line="163"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.HtmlCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return Html.toHtml(text, options);"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/HtmlCompat.java"
            line="176"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.ICUCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            ULocale uLocale = ULocale.addLikelySubtags(ULocale.forLocale(locale));"
        errorLine2="                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/ICUCompat.java"
            line="90"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.ICUCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            ULocale uLocale = ULocale.addLikelySubtags(ULocale.forLocale(locale));"
        errorLine2="                                                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/ICUCompat.java"
            line="90"
            column="64"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.ICUCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return uLocale.getScript();"
        errorLine2="                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/ICUCompat.java"
            line="91"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.ICUCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return ((Locale) sAddLikelySubtagsMethod.invoke(null, args)).getScript();"
        errorLine2="                                                                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/ICUCompat.java"
            line="95"
            column="78"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.ICUCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return locale.getScript();"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/ICUCompat.java"
            line="101"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                icon = Icon.createWithBitmap((Bitmap) mObj1);"
        errorLine2="                            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="533"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                    icon = Icon.createWithAdaptiveBitmap((Bitmap) mObj1);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="537"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                    icon = Icon.createWithBitmap("
        errorLine2="                                ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="539"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                icon = Icon.createWithResource(getResPackage(), mInt1);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="544"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                icon = Icon.createWithData((byte[]) mObj1, mInt1, mInt2);"
        errorLine2="                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="547"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                icon = Icon.createWithContentUri((String) mObj1);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="550"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                    icon = Icon.createWithAdaptiveBitmap(BitmapFactory.decodeStream(is));"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="567"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                    icon = Icon.createWithBitmap(createLegacyIconFromAdaptiveIcon("
        errorLine2="                                ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="569"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            icon.setTintList(mTintList);"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="577"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            icon.setTintMode(mTintMode);"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="580"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return toIcon(context).loadDrawable(context);"
        errorLine2="                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="628"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                        return new AdaptiveIconDrawable(null,"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="681"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return icon.getType();"
        errorLine2="                        ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="1088"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return icon.getResPackage();"
        errorLine2="                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="1116"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return icon.getResId();"
        errorLine2="                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="1145"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.graphics.drawable.IconCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return icon.getUri();"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="1173"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.ImageViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.getImageTintList();"
        errorLine2="                        ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ImageViewCompat.java"
            line="38"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.ImageViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setImageTintList(tintList);"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ImageViewCompat.java"
            line="51"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.ImageViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if ((imageViewDrawable != null) &amp;&amp; (view.getImageTintList() != null)) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ImageViewCompat.java"
            line="57"
            column="58"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.ImageViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.getImageTintMode();"
        errorLine2="                        ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ImageViewCompat.java"
            line="75"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.ImageViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setImageTintMode(mode);"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ImageViewCompat.java"
            line="89"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.ImageViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if ((imageViewDrawable != null) &amp;&amp; (view.getImageTintList() != null)) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ImageViewCompat.java"
            line="95"
            column="58"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.view.inputmethod.InputConnectionCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            return inputConnection.commitContent("
        errorLine2="                                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/inputmethod/InputConnectionCompat.java"
            line="145"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.graphics.Insets is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="        return android.graphics.Insets.of(left, top, right, bottom);"
        errorLine2="                                       ~~">
        <location
            file="src/main/java/androidx/core/graphics/Insets.java"
            line="196"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.content.IntentCompat is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="            return Intent.makeMainSelectorActivity(selectorAction, selectorCategory);"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/IntentCompat.java"
            line="108"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.JobIntentService.JobServiceEngineImpl.WrapperWorkItem is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                return mJobWork.getIntent();"
        errorLine2="                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/JobIntentService.java"
            line="260"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.JobIntentService.JobServiceEngineImpl.WrapperWorkItem is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                        mParams.completeWork(mJobWork);"
        errorLine2="                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/JobIntentService.java"
            line="267"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.util.LinkifyCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            Linkify.addLinks(text, pattern, defaultScheme, schemes, matchFilter, transformFilter);"
        errorLine2="                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/util/LinkifyCompat.java"
            line="260"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.util.LinkifyCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return Linkify.addLinks(spannable, pattern, defaultScheme, schemes, matchFilter,"
        errorLine2="                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/util/LinkifyCompat.java"
            line="336"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.widget.ListPopupWindowCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return listPopupWindow.createDragToOpenListener(src);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ListPopupWindowCompat.java"
            line="98"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.widget.ListViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            listView.scrollListBy(y);"
        errorLine2="                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ListViewCompat.java"
            line="39"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.widget.ListViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return listView.canScrollList(direction);"
        errorLine2="                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ListViewCompat.java"
            line="69"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.os.LocaleListCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return wrap(new LocaleList(localeList));"
        errorLine2="                        ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompat.java"
            line="74"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.os.LocaleListCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        ? Locale.forLanguageTag(tags[i])"
        errorLine2="                                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompat.java"
            line="165"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.os.LocaleListCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return LocaleListCompat.wrap(LocaleList.getAdjustedDefault());"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompat.java"
            line="206"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.os.LocaleListCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return LocaleListCompat.wrap(LocaleList.getDefault());"
        errorLine2="                                                    ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompat.java"
            line="226"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.os.LocaleListCompatWrapper is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            final String script = locale.getScript();"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompatWrapper.java"
            line="161"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.location.LocationManagerCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return locationManager.isLocationEnabled();"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/location/LocationManagerCompat.java"
            line="60"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.location.LocationManagerCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                if (locationManager.registerGnssStatusCallback(transport, baseHandler)) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/location/LocationManagerCompat.java"
            line="158"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.location.LocationManagerCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    locationManager.unregisterGnssStatusCallback(transport);"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/location/LocationManagerCompat.java"
            line="223"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.location.LocationManagerCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    locationManager.unregisterGnssStatusCallback(transport);"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/location/LocationManagerCompat.java"
            line="232"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.MarginLayoutParamsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return lp.getMarginStart();"
        errorLine2="                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="43"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.MarginLayoutParamsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return lp.getMarginEnd();"
        errorLine2="                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="62"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.MarginLayoutParamsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            lp.setMarginStart(marginStart);"
        errorLine2="               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="81"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.MarginLayoutParamsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            lp.setMarginEnd(marginEnd);"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="100"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.MarginLayoutParamsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return lp.isMarginRelative();"
        errorLine2="                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="113"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.MarginLayoutParamsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            result = lp.getLayoutDirection();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="128"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.MarginLayoutParamsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            lp.setLayoutDirection(layoutDirection);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="151"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.MarginLayoutParamsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            lp.resolveLayoutDirection(layoutDirection);"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="162"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.telephony.mbms.MbmsHelper is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="        LocaleList localeList = context.getResources().getConfiguration().getLocales();"
        errorLine2="                                                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/telephony/mbms/MbmsHelper.java"
            line="60"
            column="75"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.telephony.mbms.MbmsHelper is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="        int numLanguagesSupportedByService = serviceInfo.getNamedContentLocales().size();"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/telephony/mbms/MbmsHelper.java"
            line="62"
            column="58"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.telephony.mbms.MbmsHelper is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="        for (Locale l : serviceInfo.getNamedContentLocales()) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/telephony/mbms/MbmsHelper.java"
            line="69"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.telephony.mbms.MbmsHelper is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            supportedLanguages[i] = l.toLanguageTag();"
        errorLine2="                                      ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/telephony/mbms/MbmsHelper.java"
            line="70"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.telephony.mbms.MbmsHelper is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="        Locale bestLocale = localeList.getFirstMatch(supportedLanguages);"
        errorLine2="                                       ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/telephony/mbms/MbmsHelper.java"
            line="74"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.telephony.mbms.MbmsHelper is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="        return bestLocale == null ? null : serviceInfo.getNameForLocale(bestLocale);"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/telephony/mbms/MbmsHelper.java"
            line="75"
            column="56"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.MenuCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            menu.setGroupDividerEnabled(enabled);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuCompat.java"
            line="51"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            item.setContentDescription(contentDescription);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="325"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return item.getContentDescription();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="339"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            item.setTooltipText(tooltipText);"
        errorLine2="                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="354"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return item.getTooltipText();"
        errorLine2="                        ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="368"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            item.setShortcut(numericChar, alphaChar, numericModifiers, alphaModifiers);"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="401"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            item.setNumericShortcut(numericChar, numericModifiers);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="421"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return item.getNumericModifiers();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="440"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            item.setAlphabeticShortcut(alphaChar, alphaModifiers);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="466"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return item.getAlphabeticModifiers();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="485"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            item.setIconTintList(tint);"
        errorLine2="                 ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="506"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return item.getIconTintList();"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="519"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            item.setIconTintMode(tintMode);"
        errorLine2="                 ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="537"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.MenuItemCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return item.getIconTintMode();"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="552"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.os.MessageCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            message.setAsynchronous(async);"
        errorLine2="                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/MessageCompat.java"
            line="72"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.os.MessageCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="                message.setAsynchronous(async);"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/MessageCompat.java"
            line="79"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.os.MessageCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="            return message.isAsynchronous();"
        errorLine2="                           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/MessageCompat.java"
            line="98"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.os.MessageCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="                return message.isAsynchronous();"
        errorLine2="                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/MessageCompat.java"
            line="104"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NavUtils is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return sourceActivity.shouldUpRecreateTask(targetIntent);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NavUtils.java"
            line="61"
            column="35"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NavUtils is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            sourceActivity.navigateUpTo(upIntent);"
        errorLine2="                           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NavUtils.java"
            line="109"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NavUtils is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            Intent result = sourceActivity.getParentActivityIntent();"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NavUtils.java"
            line="132"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.NestedScrollView is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.LOLLIPOP || getClipToPadding()) {"
        errorLine2="                                                                            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="2007"
            column="77"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.NestedScrollView is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP &amp;&amp; getClipToPadding()) {"
        errorLine2="                                                                             ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="2011"
            column="78"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.NestedScrollView is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if (Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.LOLLIPOP || getClipToPadding()) {"
        errorLine2="                                                                            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="2028"
            column="77"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.widget.NestedScrollView is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP &amp;&amp; getClipToPadding()) {"
        errorLine2="                                                                             ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="2032"
            column="78"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        this(channel.getId(), channel.getImportance());"
        errorLine2="                     ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="284"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        this(channel.getId(), channel.getImportance());"
        errorLine2="                                      ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="284"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mName = channel.getName();"
        errorLine2="                        ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="286"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mDescription = channel.getDescription();"
        errorLine2="                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="287"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mGroupId = channel.getGroup();"
        errorLine2="                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="288"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mShowBadge = channel.canShowBadge();"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="289"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mSound = channel.getSound();"
        errorLine2="                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="290"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mAudioAttributes = channel.getAudioAttributes();"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="291"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mLights = channel.shouldShowLights();"
        errorLine2="                          ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="292"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mLightColor = channel.getLightColor();"
        errorLine2="                              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="293"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mVibrationEnabled = channel.shouldVibrate();"
        errorLine2="                                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="294"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mVibrationPattern = channel.getVibrationPattern();"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="295"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mBypassDnd = channel.canBypassDnd();"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="301"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mLockscreenVisibility = channel.getLockscreenVisibility();"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="302"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            mCanBubble = channel.canBubble();"
        errorLine2="                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="304"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        NotificationChannel channel = new NotificationChannel(mId, mName, mImportance);"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="320"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        channel.setDescription(mDescription);"
        errorLine2="                ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="321"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        channel.setGroup(mGroupId);"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="322"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        channel.setShowBadge(mShowBadge);"
        errorLine2="                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="323"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        channel.setSound(mSound, mAudioAttributes);"
        errorLine2="                ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="324"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        channel.enableLights(mLights);"
        errorLine2="                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="325"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        channel.setLightColor(mLightColor);"
        errorLine2="                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="326"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        channel.setVibrationPattern(mVibrationPattern);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="327"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        channel.enableVibration(mVibrationEnabled);"
        errorLine2="                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelCompat.java"
            line="328"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelGroupCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        this(group.getId());"
        errorLine2="                   ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelGroupCompat.java"
            line="115"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelGroupCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        mName = group.getName();"
        errorLine2="                      ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelGroupCompat.java"
            line="117"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationChannelGroupCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mDescription = group.getDescription();"
        errorLine2="                                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelGroupCompat.java"
            line="119"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationChannelGroupCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mBlocked = group.isBlocked();"
        errorLine2="                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelGroupCompat.java"
            line="123"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelGroupCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mChannels = getChannelsCompat(group.getChannels());"
        errorLine2="                                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelGroupCompat.java"
            line="124"
            column="49"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelGroupCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            if (mId.equals(channel.getGroup())) {"
        errorLine2="                                   ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelGroupCompat.java"
            line="136"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationChannelGroupCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        NotificationChannelGroup group = new NotificationChannelGroup(mId, mName);"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelGroupCompat.java"
            line="152"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationChannelGroupCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            group.setDescription(mDescription);"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationChannelGroupCompat.java"
            line="154"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                this.mSmallIcon = notification.getSmallIcon();"
        errorLine2="                                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="940"
            column="48"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                mNotification.audioAttributes = new AudioAttributes.Builder()"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="1447"
            column="49"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION)"
        errorLine2="                         ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="1448"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        .setUsage(AudioAttributes.USAGE_NOTIFICATION)"
        errorLine2="                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="1449"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        .build();"
        errorLine2="                         ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="1450"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                mNotification.audioAttributes = new AudioAttributes.Builder()"
        errorLine2="                                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="1476"
            column="49"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        .setContentType(AudioAttributes.CONTENT_TYPE_SONIFICATION)"
        errorLine2="                         ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="1477"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        .setLegacyStreamType(streamType)"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="1478"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        .build();"
        errorLine2="                         ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="1479"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                return Notification.Builder.recoverBuilder(mContext, notification)"
        errorLine2="                                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2029"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                        .createContentView();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2030"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                return Notification.Builder.recoverBuilder(mContext, notification)"
        errorLine2="                                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2063"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                        .createBigContentView();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2064"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                        Notification.Builder.recoverBuilder(mContext, notification);"
        errorLine2="                                             ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2098"
            column="46"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.Builder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                return platformBuilder.createHeadsUpContentView();"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2099"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.Style is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    contentView.setTextViewTextSize(R.id.text, TypedValue.COMPLEX_UNIT_PX,"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2737"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.Style is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                contentView.setViewPadding(R.id.line1, 0, 0, 0, 0);"
        errorLine2="                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2741"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.Style is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                        contentView.setChronometerCountDown(R.id.chronometer,"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2752"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.Style is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                outerView.setViewPadding(R.id.notification_main_column_container,"
        errorLine2="                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2833"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigPictureStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                        new Notification.BigPictureStyle(builder.getBuilder())"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2938"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigPictureStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                                .setBigContentTitle(mBigContentTitle)"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2939"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigPictureStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                                .bigPicture(mPicture);"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2940"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigPictureStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    style.bigLargeIcon(mBigLargeIcon);"
        errorLine2="                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2942"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigPictureStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    style.setSummaryText(mSummaryText);"
        errorLine2="                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2945"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigTextStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                        new Notification.BigTextStyle(builder.getBuilder())"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3058"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigTextStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                                .setBigContentTitle(mBigContentTitle)"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3059"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigTextStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                                .bigText(mBigText);"
        errorLine2="                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3060"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.BigTextStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    style.setSummaryText(mSummaryText);"
        errorLine2="                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3062"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                    frameworkStyle = new Notification.MessagingStyle(mUser.toAndroidPerson());"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3391"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    frameworkStyle = new Notification.MessagingStyle(mUser.getName());"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3393"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    frameworkStyle.addMessage(message.toAndroidMessage());"
        errorLine2="                                   ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3397"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                        frameworkStyle.addHistoricMessage(historicMessage.toAndroidMessage());"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3402"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    frameworkStyle.setConversationTitle(mConversationTitle);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3414"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                    frameworkStyle.setGroupConversation(mIsGroupConversation);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3420"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                frameworkStyle.setBuilder(builder.getBuilder());"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3422"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    new Notification.BigTextStyle(builder.getBuilder())"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3455"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                            .setBigContentTitle(null)"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3456"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.MessagingStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                            .bigText(completeMessage);"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3457"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationCompat.MessagingStyle.Message is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                    frameworkMessage = new Notification.MessagingStyle.Message("
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3843"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.MessagingStyle.Message is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    frameworkMessage = new Notification.MessagingStyle.Message("
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3847"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.MessagingStyle.Message is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    frameworkMessage.setData(getDataMimeType(), getDataUri());"
        errorLine2="                                     ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3853"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.InboxStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                        new Notification.InboxStyle(builder.getBuilder())"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3931"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.InboxStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                                .setBigContentTitle(mBigContentTitle);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3932"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.InboxStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    style.setSummaryText(mSummaryText);"
        errorLine2="                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3934"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.InboxStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    style.addLine(text);"
        errorLine2="                          ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3937"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompat.DecoratedCustomViewStyle is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                builder.getBuilder().setStyle(new Notification.DecoratedCustomViewStyle());"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4030"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.DecoratedCustomViewStyle is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                builder.getBuilder().setStyle(new Notification.DecoratedCustomViewStyle());"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4030"
            column="47"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.app.NotificationCompat.DecoratedCustomViewStyle is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="                button.setContentDescription(R.id.action_container, action.title);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4148"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompat.Action.Builder is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                if (Build.VERSION.SDK_INT >= 23 &amp;&amp; action.getIcon() != null) {"
        errorLine2="                                                          ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4432"
            column="59"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompat.Action.Builder is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                    IconCompat iconCompat = IconCompat.createFromIcon(action.getIcon());"
        errorLine2="                                                                             ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4433"
            column="78"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.Action.Builder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    android.app.RemoteInput[] remoteInputs = action.getRemoteInputs();"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4441"
            column="69"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.Action.Builder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    builder.mAllowGeneratedReplies = action.getAllowGeneratedReplies();"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4449"
            column="61"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationCompat.Action.Builder is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                    builder.setSemanticAction(action.getSemanticAction());"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4452"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.Action.Builder is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                    builder.setContextual(action.isContextual());"
        errorLine2="                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4455"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompat.WearableExtender is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                actionBuilder = new Notification.Action.Builder("
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="5290"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.WearableExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                actionBuilder = new Notification.Action.Builder("
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="5299"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat.WearableExtender is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                actionBuilder.setAllowGeneratedReplies(actionCompat.getAllowGeneratedReplies());"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="5311"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.WearableExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            actionBuilder.addExtras(actionExtras);"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="5313"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.WearableExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    actionBuilder.addRemoteInput(remoteInput);"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="5318"
            column="35"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.WearableExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            return actionBuilder.build();"
        errorLine2="                                 ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="5321"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    ? new RemoteInput(remoteInput.getResultKey(),"
        errorLine2="                                                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6067"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    remoteInput.getLabel(),"
        errorLine2="                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6068"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    remoteInput.getChoices(),"
        errorLine2="                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6069"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    remoteInput.getAllowFreeFormInput(),"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6070"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                            ? remoteInput.getEditChoicesBeforeSending()"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6072"
            column="43"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    remoteInput.getExtras(),"
        errorLine2="                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6074"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        new android.app.RemoteInput.Builder(remoteInputCompat.getResultKey())"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6100"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                                .setLabel(remoteInputCompat.getLabel())"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6101"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                                .setChoices(remoteInputCompat.getChoices())"
        errorLine2="                                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6102"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                                .setAllowFreeFormInput(remoteInputCompat.getAllowFreeFormInput())"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6103"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                                .addExtras(remoteInputCompat.getExtras())"
        errorLine2="                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6104"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat.CarExtender is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                                .build();"
        errorLine2="                                 ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6105"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                    new android.app.Notification.BubbleMetadata.Builder()"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6533"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                            .setAutoExpandBubble(compatMetadata.getAutoExpandBubble())"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6534"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                            .setDeleteIntent(compatMetadata.getDeleteIntent())"
        errorLine2="                             ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6535"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                            .setIcon(compatMetadata.getIcon().toIcon())"
        errorLine2="                             ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6536"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                            .setIntent(compatMetadata.getIntent())"
        errorLine2="                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6537"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                            .setSuppressNotification("
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6538"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                platformMetadataBuilder.setDesiredHeight(compatMetadata.getDesiredHeight());"
        errorLine2="                                        ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6542"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                platformMetadataBuilder.setDesiredHeightResId("
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6546"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return platformMetadataBuilder.build();"
        errorLine2="                                           ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6550"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                    .setAutoExpandBubble(platformMetadata.getAutoExpandBubble())"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6569"
            column="59"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                    .setDeleteIntent(platformMetadata.getDeleteIntent())"
        errorLine2="                                                      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6570"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                    .setIcon(IconCompat.createFromIcon(platformMetadata.getIcon()))"
        errorLine2="                                                                        ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6571"
            column="73"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                    .setIntent(platformMetadata.getIntent())"
        errorLine2="                                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6572"
            column="49"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                            platformMetadata.isNotificationSuppressed());"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6574"
            column="46"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            if (platformMetadata.getDesiredHeight() != 0) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6576"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                compatBuilder.setDesiredHeight(platformMetadata.getDesiredHeight());"
        errorLine2="                                                                ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6577"
            column="65"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            if (platformMetadata.getDesiredHeightResId() != 0) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6580"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat.BubbleMetadata is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                compatBuilder.setDesiredHeightResId(platformMetadata.getDesiredHeightResId());"
        errorLine2="                                                                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6581"
            column="70"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return BubbleMetadata.fromPlatform(notification.getBubbleMetadata());"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6842"
            column="61"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="        final android.app.RemoteInput[] srcArray = action.getRemoteInputs();"
        errorLine2="                                                          ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6852"
            column="59"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        src.getResultKey(),"
        errorLine2="                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6860"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        src.getLabel(),"
        errorLine2="                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6861"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        src.getChoices(),"
        errorLine2="                            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6862"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        src.getAllowFreeFormInput(),"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6863"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                                ? src.getEditChoicesBeforeSending()"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6865"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        src.getExtras(),"
        errorLine2="                            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6867"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            allowGeneratedReplies = action.getExtras().getBoolean("
        errorLine2="                                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6874"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    || action.getAllowGeneratedReplies();"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6876"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            allowGeneratedReplies = action.getExtras().getBoolean("
        errorLine2="                                           ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6878"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                action.getExtras().getBoolean(Action.EXTRA_SHOWS_USER_INTERFACE, true);"
        errorLine2="                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6883"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            semanticAction = action.getSemanticAction();"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6887"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            semanticAction = action.getExtras().getInt("
        errorLine2="                                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6889"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="        final boolean isContextual = Build.VERSION.SDK_INT >= 29 ? action.isContextual() : false;"
        errorLine2="                                                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6893"
            column="75"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            if (action.getIcon() == null &amp;&amp; action.icon != 0) {"
        errorLine2="                       ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6896"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        action.getExtras(), remoteInputs, null, allowGeneratedReplies,"
        errorLine2="                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6898"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            IconCompat icon = action.getIcon() == null"
        errorLine2="                                     ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6901"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                    ? null : IconCompat.createFromIconOrNullIfZeroResId(action.getIcon());"
        errorLine2="                                                                               ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6902"
            column="80"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            return new Action(icon, action.title, action.actionIntent, action.getExtras(),"
        errorLine2="                                                                              ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6903"
            column="79"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            return new Action(action.icon, action.title, action.actionIntent, action.getExtras(),"
        errorLine2="                                                                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="6907"
            column="86"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            return notification.getGroup();"
        errorLine2="                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7023"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            return notification.getSortKey();"
        errorLine2="                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7131"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return notification.getChannelId();"
        errorLine2="                                ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7147"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return notification.getTimeoutAfter();"
        errorLine2="                                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7159"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return notification.getBadgeIconType();"
        errorLine2="                                ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7172"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return notification.getShortcutId();"
        errorLine2="                                ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7184"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return notification.getSettingsText();"
        errorLine2="                                ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7195"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            LocusId locusId = notification.getLocusId();"
        errorLine2="                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7211"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return notification.getGroupAlertBehavior();"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7226"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return notification.getAllowSystemGeneratedContextualActions();"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="7239"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mBuilder = new Notification.Builder(b.mContext, b.mChannelId);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="69"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            mBuilder.setSubText(b.mSubText)"
        errorLine2="                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="98"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    .setUsesChronometer(b.mUseChronometer)"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="99"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    .setPriority(b.mPriority);"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="100"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            mBuilder.setShowWhen(b.mShowWhen);"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="130"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            mBuilder.setLocalOnly(b.mLocalOnly)"
        errorLine2="                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="142"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    .setGroup(b.mGroupKey)"
        errorLine2="                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="143"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    .setGroupSummary(b.mGroupSummary)"
        errorLine2="                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="144"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    .setSortKey(b.mSortKey);"
        errorLine2="                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="145"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mBuilder.setCategory(b.mCategory)"
        errorLine2="                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="150"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    .setColor(b.mColor)"
        errorLine2="                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="151"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    .setVisibility(b.mVisibility)"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="152"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    .setPublicVersion(b.mPublicVersion)"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="153"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    .setSound(n.sound, n.audioAttributes);"
        errorLine2="                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="154"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    mBuilder.addPerson(person);"
        errorLine2="                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="165"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                mBuilder.setSmallIcon(b.mSmallIcon);"
        errorLine2="                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="199"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mBuilder.setExtras(b.mExtras)"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="203"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                    .setRemoteInputHistory(b.mRemoteInputHistory);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="204"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                mBuilder.setCustomContentView(b.mContentView);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="206"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                mBuilder.setCustomBigContentView(b.mBigContentView);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="209"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                mBuilder.setCustomHeadsUpContentView(b.mHeadsUpContentView);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="212"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mBuilder.setBadgeIconType(b.mBadgeIcon)"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="216"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                    .setSettingsText(b.mSettingsText)"
        errorLine2="                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="217"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                    .setShortcutId(b.mShortcutId)"
        errorLine2="                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="218"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                    .setTimeoutAfter(b.mTimeout)"
        errorLine2="                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="219"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                    .setGroupAlertBehavior(b.mGroupAlertBehavior);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="220"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                mBuilder.setColorized(b.mColorized);"
        errorLine2="                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="222"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                mBuilder.addPerson(p.toAndroidPerson());"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="234"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            mBuilder.setAllowSystemGeneratedContextualActions("
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="238"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            mBuilder.setBubbleMetadata("
        errorLine2="                     ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="241"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                mBuilder.setLocusId(b.mLocusId.toLocusId());"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="244"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    mBuilder.setGroup(NotificationCompat.GROUP_KEY_SILENT);"
        errorLine2="                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="263"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                mBuilder.setGroupAlertBehavior(mGroupAlertBehavior);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="265"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                actionBuilder = new Notification.Action.Builder("
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="346"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                actionBuilder = new Notification.Action.Builder("
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="351"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                    actionBuilder.addRemoteInput(remoteInput);"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="359"
            column="35"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                actionBuilder.setAllowGeneratedReplies(action.getAllowGeneratedReplies());"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="371"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                actionBuilder.setSemanticAction(action.getSemanticAction());"
        errorLine2="                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="377"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                actionBuilder.setContextual(action.isContextual());"
        errorLine2="                              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="381"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            actionBuilder.addExtras(actionExtras);"
        errorLine2="                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="386"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            mBuilder.addAction(actionBuilder.build());"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="387"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            mBuilder.addAction(actionBuilder.build());"
        errorLine2="                                             ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="387"
            column="46"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return mBuilder.build();"
        errorLine2="                            ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="397"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            Notification notification =  mBuilder.build();"
        errorLine2="                                                  ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="399"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                if (notification.getGroup() != null"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="403"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                if (notification.getGroup() != null"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="409"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mBuilder.setExtras(mExtras);"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="418"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            Notification notification = mBuilder.build();"
        errorLine2="                                                 ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="419"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                if (notification.getGroup() != null"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="432"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                if (notification.getGroup() != null"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="438"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mBuilder.setExtras(mExtras);"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="446"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            Notification notification = mBuilder.build();"
        errorLine2="                                                 ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="447"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                if (notification.getGroup() != null"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="457"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                if (notification.getGroup() != null"
        errorLine2="                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="463"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            mBuilder.setExtras(mExtras);"
        errorLine2="                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="479"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            Notification notification = mBuilder.build();"
        errorLine2="                                                 ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="480"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.NotificationCompatBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            Notification notification = mBuilder.build();"
        errorLine2="                                                 ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatBuilder.java"
            line="489"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return mNotificationManager.areNotificationsEnabled();"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="232"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return mNotificationManager.getImportance();"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="263"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mNotificationManager.createNotificationChannel(channel);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="291"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mNotificationManager.createNotificationChannelGroup(group);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="330"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mNotificationManager.createNotificationChannels(channels);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="357"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mNotificationManager.createNotificationChannels(platformChannels);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="376"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mNotificationManager.createNotificationChannelGroups(groups);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="390"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mNotificationManager.createNotificationChannelGroups(platformGroups);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="409"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mNotificationManager.deleteNotificationChannel(channelId);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="424"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            mNotificationManager.deleteNotificationChannelGroup(groupId);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="436"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            for (NotificationChannel channel : mNotificationManager.getNotificationChannels()) {"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="451"
            column="69"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                if (channelIds.contains(channel.getId())) {"
        errorLine2="                                                ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="452"
            column="49"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                mNotificationManager.deleteNotificationChannel(channel.getId());"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="459"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                mNotificationManager.deleteNotificationChannel(channel.getId());"
        errorLine2="                                                                       ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="459"
            column="72"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return mNotificationManager.getNotificationChannel(channelId);"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="472"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return mNotificationManager.getNotificationChannelGroup(channelGroupId);"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="538"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                if (group.getId().equals(channelGroupId)) return group;"
        errorLine2="                          ~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="542"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return mNotificationManager.getNotificationChannels();"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="580"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.NotificationManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return mNotificationManager.getNotificationChannelGroups();"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationManagerCompat.java"
            line="611"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.util.ObjectsCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return Objects.equals(a, b);"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/core/util/ObjectsCompat.java"
            line="51"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.util.ObjectsCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return Objects.hash(values);"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/core/util/ObjectsCompat.java"
            line="93"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.content.pm.PackageInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return info.getLongVersionCode();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/PackageInfoCompat.java"
            line="36"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.graphics.PaintCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return paint.hasGlyph(string);"
        errorLine2="                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PaintCompat.java"
            line="52"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.graphics.PaintCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            paint.setBlendMode(blendMode != null ? obtainBlendModeFromCompat(blendMode) : null);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PaintCompat.java"
            line="127"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.animation.PathInterpolatorCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return new PathInterpolator(path);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/animation/PathInterpolatorCompat.java"
            line="49"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.animation.PathInterpolatorCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return new PathInterpolator(controlX, controlY);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/animation/PathInterpolatorCompat.java"
            line="64"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.animation.PathInterpolatorCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return new PathInterpolator(controlX1, controlY1, controlX2, controlY2);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/animation/PathInterpolatorCompat.java"
            line="82"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.graphics.PathUtils is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        float[] pathData = path.approximate(error);"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathUtils.java"
            line="60"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.content.pm.PermissionInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return permissionInfo.getProtection();"
        errorLine2="                                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/PermissionInfoCompat.java"
            line="75"
            column="35"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.content.pm.PermissionInfoCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return permissionInfo.getProtectionFlags();"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/PermissionInfoCompat.java"
            line="89"
            column="35"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                .setName(bundle.getString(NAME_KEY))"
        errorLine2="                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="71"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                .setUri(bundle.getString(URI_KEY))"
        errorLine2="                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="72"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                .setKey(bundle.getString(KEY_KEY))"
        errorLine2="                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="73"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="                .setBot(bundle.getBoolean(IS_BOT_KEY))"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="74"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="                .setImportant(bundle.getBoolean(IS_IMPORTANT_KEY))"
        errorLine2="                                     ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="75"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setName(person.getName())"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="89"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                        (person.getIcon() != null)"
        errorLine2="                                ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="91"
            column="33"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                                ? IconCompat.createFromIcon(person.getIcon())"
        errorLine2="                                                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="92"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setUri(person.getUri())"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="94"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setKey(person.getKey())"
        errorLine2="                               ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="95"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setBot(person.isBot())"
        errorLine2="                               ~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="96"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setImportant(person.isImportant())"
        errorLine2="                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="97"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        PersistableBundle result = new PersistableBundle();"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="151"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        result.putString(NAME_KEY, mName != null ? mName.toString() : null);"
        errorLine2="               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="152"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        result.putString(URI_KEY, mUri);"
        errorLine2="               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="153"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        result.putString(KEY_KEY, mKey);"
        errorLine2="               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="154"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="        result.putBoolean(IS_BOT_KEY, mIsBot);"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="155"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="        result.putBoolean(IS_IMPORTANT_KEY, mIsImportant);"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="156"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="        return new android.app.Person.Builder()"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="175"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setName(getName())"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="176"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setIcon((getIcon() != null) ? getIcon().toIcon() : null)"
        errorLine2="                 ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="177"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setUri(getUri())"
        errorLine2="                 ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="178"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setKey(getKey())"
        errorLine2="                 ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="179"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setBot(isBot())"
        errorLine2="                 ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="180"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .setImportant(isImportant())"
        errorLine2="                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="181"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.Person is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                .build();"
        errorLine2="                 ~~~~~">
        <location
            file="src/main/java/androidx/core/app/Person.java"
            line="182"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.PointerIconCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return new PointerIconCompat(PointerIcon.getSystemIcon(context, style));"
        errorLine2="                                                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="131"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.PointerIconCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return new PointerIconCompat(PointerIcon.create(bitmap, hotSpotX, hotSpotY));"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="152"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.PointerIconCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return new PointerIconCompat(PointerIcon.load(resources, resourceId));"
        errorLine2="                                                     ~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="181"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.widget.PopupMenuCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return ((PopupMenu) popupMenu).getDragToOpenListener();"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/PopupMenuCompat.java"
            line="56"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.widget.PopupWindowCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            popup.showAsDropDown(anchor, xoff, yoff, gravity);"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/PopupWindowCompat.java"
            line="69"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.PopupWindowCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            popupWindow.setOverlapAnchor(overlapAnchor);"
        errorLine2="                        ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/PopupWindowCompat.java"
            line="91"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.PopupWindowCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return popupWindow.getOverlapAnchor();"
        errorLine2="                               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/PopupWindowCompat.java"
            line="120"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.PopupWindowCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            popupWindow.setWindowLayoutType(layoutType);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/PopupWindowCompat.java"
            line="154"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.PopupWindowCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return popupWindow.getWindowLayoutType();"
        errorLine2="                               ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/PopupWindowCompat.java"
            line="184"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                mWrapped = new PrecomputedText.Params.Builder(paint)"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="199"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                        .setBreakStrategy(strategy)"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="200"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                        .setHyphenationFrequency(frequency)"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="201"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                        .setTextDirection(textDir)"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="202"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                        .build();"
        errorLine2="                         ~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="203"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mPaint = wrapped.getTextPaint();"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="215"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mTextDir = wrapped.getTextDirection();"
        errorLine2="                               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="216"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mBreakStrategy = wrapped.getBreakStrategy();"
        errorLine2="                                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="217"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            mHyphenationFrequency = wrapped.getHyphenationFrequency();"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="218"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if (mPaint.getLetterSpacing() != other.getTextPaint().getLetterSpacing()) {"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="294"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if (mPaint.getLetterSpacing() != other.getTextPaint().getLetterSpacing()) {"
        errorLine2="                                                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="294"
            column="71"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                if (!TextUtils.equals(mPaint.getFontFeatureSettings(),"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="297"
            column="46"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        other.getTextPaint().getFontFeatureSettings())) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="298"
            column="46"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                if (!mPaint.getTextLocales().equals(other.getTextPaint().getTextLocales())) {"
        errorLine2="                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="306"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                if (!mPaint.getTextLocales().equals(other.getTextPaint().getTextLocales())) {"
        errorLine2="                                                                         ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="306"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                if (!mPaint.getTextLocale().equals(other.getTextPaint().getTextLocale())) {"
        errorLine2="                            ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="310"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                if (!mPaint.getTextLocale().equals(other.getTextPaint().getTextLocale())) {"
        errorLine2="                                                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="310"
            column="73"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        mPaint.getTextSkewX(), mPaint.getLetterSpacing(), mPaint.getFlags(),"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="354"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        mPaint.getTextLocales(), mPaint.getTypeface(), mPaint.isElegantTextHeight(),"
        errorLine2="                                                                              ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="355"
            column="79"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                        mPaint.getTextLocales(), mPaint.getTypeface(), mPaint.isElegantTextHeight(),"
        errorLine2="                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="355"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        mPaint.getTextSkewX(), mPaint.getLetterSpacing(), mPaint.getFlags(),"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="359"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                        mPaint.getTextLocale(), mPaint.getTypeface(), mPaint.isElegantTextHeight(),"
        errorLine2="                               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="360"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        mPaint.getTextLocale(), mPaint.getTypeface(), mPaint.isElegantTextHeight(),"
        errorLine2="                                                                             ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="360"
            column="78"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                        mPaint.getTextSkewX(), mPaint.getFlags(), mPaint.getTextLocale(),"
        errorLine2="                                                                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="364"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                        mPaint.getTextSkewX(), mPaint.getFlags(), mPaint.getTextLocale(),"
        errorLine2="                                                                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="368"
            column="74"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                sb.append(&quot;, letterSpacing=&quot; + mPaint.getLetterSpacing());"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="384"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                sb.append(&quot;, elegantTextHeight=&quot; + mPaint.isElegantTextHeight());"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="385"
            column="59"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                sb.append(&quot;, textLocale=&quot; + mPaint.getTextLocales());"
        errorLine2="                                                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="388"
            column="52"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                sb.append(&quot;, textLocale=&quot; + mPaint.getTextLocale());"
        errorLine2="                                                   ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="390"
            column="52"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.text.PrecomputedTextCompat.Params is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                sb.append(&quot;, variationSettings=&quot; + mPaint.getFontVariationSettings());"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="394"
            column="59"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                        PrecomputedText.create(text, params.mWrapped), params);"
        errorLine2="                                        ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="440"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                StaticLayout.Builder.obtain(text, 0, text.length(), params.getTextPaint(),"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="468"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                        .setBreakStrategy(params.getBreakStrategy())"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="470"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                        .setHyphenationFrequency(params.getHyphenationFrequency())"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="471"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                        .setTextDirection(params.getTextDirection())"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="472"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                        .build();"
        errorLine2="                         ~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="473"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return mWrapped.getParagraphCount();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="532"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return mWrapped.getParagraphStart(paraIndex);"
        errorLine2="                            ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="545"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.text.PrecomputedTextCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return mWrapped.getParagraphEnd(paraIndex);"
        errorLine2="                            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="558"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                IconCompat.createFromIcon(remoteAction.getIcon()), remoteAction.getTitle(),"
        errorLine2="                                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="117"
            column="56"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                IconCompat.createFromIcon(remoteAction.getIcon()), remoteAction.getTitle(),"
        errorLine2="                                                                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="117"
            column="81"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                remoteAction.getContentDescription(), remoteAction.getActionIntent());"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="118"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                remoteAction.getContentDescription(), remoteAction.getActionIntent());"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="118"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        action.setEnabled(remoteAction.isEnabled());"
        errorLine2="                                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="119"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            action.setShouldShowIcon(remoteAction.shouldShowIcon());"
        errorLine2="                                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="121"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        RemoteAction action = new RemoteAction(mIcon.toIcon(), mTitle, mContentDescription,"
        errorLine2="                              ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="190"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="        action.setEnabled(isEnabled());"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="192"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.RemoteActionCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            action.setShouldShowIcon(shouldShowIcon());"
        errorLine2="                   ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="194"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return android.app.RemoteInput.getDataResultsFromIntent(intent, remoteInputResultKey);"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="339"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            return android.app.RemoteInput.getResultsFromIntent(intent);"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="377"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            android.app.RemoteInput.addResultsToIntent(fromCompat(remoteInputs), intent, results);"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="403"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                android.app.RemoteInput.addResultsToIntent("
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="426"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            intent.setClipData(ClipData.newIntent(RemoteInput.RESULTS_CLIP_LABEL, clipDataIntent));"
        errorLine2="                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="452"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            android.app.RemoteInput.addDataResultToIntent(fromCompat(remoteInput), intent, results);"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="467"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            intent.setClipData(ClipData.newIntent(RemoteInput.RESULTS_CLIP_LABEL, clipDataIntent));"
        errorLine2="                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="487"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            android.app.RemoteInput.setResultsSource(intent, source);"
        errorLine2="                                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="506"
            column="37"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            intent.setClipData(ClipData.newIntent(RESULTS_CLIP_LABEL, clipDataIntent));"
        errorLine2="                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="513"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return android.app.RemoteInput.getResultsSource(intent);"
        errorLine2="                                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="531"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                new android.app.RemoteInput.Builder(src.getResultKey())"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="562"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        .setLabel(src.getLabel())"
        errorLine2="                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="563"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        .setChoices(src.getChoices())"
        errorLine2="                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="564"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        .setAllowFreeFormInput(src.getAllowFreeFormInput())"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="565"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        .addExtras(src.getExtras());"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="566"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            builder.setEditChoicesBeforeSending(src.getEditChoicesBeforeSending());"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="568"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="        return builder.build();"
        errorLine2="                       ~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="570"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                new RemoteInput.Builder(src.getResultKey())"
        errorLine2="                                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="576"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        .setLabel(src.getLabel())"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="577"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        .setChoices(src.getChoices())"
        errorLine2="                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="578"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        .setAllowFreeFormInput(src.getAllowFreeFormInput())"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="579"
            column="52"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                        .addExtras(src.getExtras());"
        errorLine2="                                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="580"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            builder.setEditChoicesBeforeSending(src.getEditChoicesBeforeSending());"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="582"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.RemoteInput is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="        ClipData clipData = intent.getClipData();"
        errorLine2="                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="589"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.res.ResourcesCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return res.getDrawable(id, theme);"
        errorLine2="                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ResourcesCompat.java"
            line="94"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.res.ResourcesCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return res.getDrawableForDensity(id, density, theme);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ResourcesCompat.java"
            line="127"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.content.res.ResourcesCompat is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="            return res.getDrawableForDensity(id, density);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ResourcesCompat.java"
            line="129"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.res.ResourcesCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return res.getColor(id, theme);"
        errorLine2="                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ResourcesCompat.java"
            line="157"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.res.ResourcesCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return res.getColorStateList(id, theme);"
        errorLine2="                       ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ResourcesCompat.java"
            line="187"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.database.sqlite.SQLiteCursorCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            cursor.setFillWindowForwardOnly(fillWindowForwardOnly);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/database/sqlite/SQLiteCursorCompat.java"
            line="46"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ScaleGestureDetectorCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            scaleGestureDetector.setQuickScaleEnabled(enabled);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ScaleGestureDetectorCompat.java"
            line="54"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ScaleGestureDetectorCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return scaleGestureDetector.isQuickScaleEnabled();"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ScaleGestureDetectorCompat.java"
            line="79"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.app.ServiceCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            service.stopForeground(flags);"
        errorLine2="                    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ServiceCompat.java"
            line="99"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.ShareCompat.IntentReader is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                        result = Html.escapeHtml(text);"
        errorLine2="                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ShareCompat.java"
            line="828"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="        ShortcutInfo.Builder builder = new ShortcutInfo.Builder(mContext, mId)"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="101"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                .setShortLabel(mLabel)"
        errorLine2="                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="102"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                .setIntents(mIntents);"
        errorLine2="                 ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="103"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            builder.setIcon(mIcon.toIcon(mContext));"
        errorLine2="                    ~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="105"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            builder.setLongLabel(mLongLabel);"
        errorLine2="                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="108"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            builder.setDisabledMessage(mDisabledMessage);"
        errorLine2="                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="111"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            builder.setActivity(mActivity);"
        errorLine2="                    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="114"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            builder.setCategories(mCategories);"
        errorLine2="                    ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="117"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="        builder.setRank(mRank);"
        errorLine2="                ~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="119"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            builder.setExtras(mExtras);"
        errorLine2="                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="121"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                builder.setPersons(persons);"
        errorLine2="                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="129"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="                builder.setLocusId(mLocusId.toLocusId());"
        errorLine2="                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="132"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            builder.setLongLived(mIsLongLived);"
        errorLine2="                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="134"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            builder.setExtras(buildLegacyExtrasBundle());"
        errorLine2="                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="139"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="        return builder.build();"
        errorLine2="                       ~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="141"
            column="24"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mExtras = new PersistableBundle();"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="151"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mExtras.putInt(EXTRA_PERSON_COUNT, mPersons.length);"
        errorLine2="                    ~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="154"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                mExtras.putPersistableBundle(EXTRA_PERSON_ + (i + 1),"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="156"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            mExtras.putString(EXTRA_LOCUS_ID, mLocusId.getId());"
        errorLine2="                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="161"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="        mExtras.putBoolean(EXTRA_LONG_LIVED, mIsLongLived);"
        errorLine2="                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="163"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        if (bundle == null || !bundle.containsKey(EXTRA_PERSON_COUNT)) {"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="330"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        int personsLength = bundle.getInt(EXTRA_PERSON_COUNT);"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="334"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    bundle.getPersistableBundle(EXTRA_PERSON_ + (i + 1)));"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="338"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        if (bundle == null || !bundle.containsKey(EXTRA_LONG_LIVED)) {"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="350"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 22, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 22. Either annotate the containing class with at least @RequiresApi(22) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(22)."
        errorLine1="        return bundle.getBoolean(EXTRA_LONG_LIVED);"
        errorLine2="                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="353"
            column="23"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            if (shortcutInfo.getLocusId() == null) return null;"
        errorLine2="                             ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="467"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return LocusIdCompat.toLocusIdCompat(shortcutInfo.getLocusId());"
        errorLine2="                                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="468"
            column="63"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            return getLocusIdFromExtra(shortcutInfo.getExtras());"
        errorLine2="                                                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="470"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.content.pm.ShortcutInfoCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="        final String locusId = bundle.getString(EXTRA_LOCUS_ID);"
        errorLine2="                                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="482"
            column="39"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mId = shortcutInfo.getId();"
        errorLine2="                                     ~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="548"
            column="38"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mPackageName = shortcutInfo.getPackage();"
        errorLine2="                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="549"
            column="47"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            Intent[] intents = shortcutInfo.getIntents();"
        errorLine2="                                            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="550"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mActivity = shortcutInfo.getActivity();"
        errorLine2="                                           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="552"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mLabel = shortcutInfo.getShortLabel();"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="553"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mLongLabel = shortcutInfo.getLongLabel();"
        errorLine2="                                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="554"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mDisabledMessage = shortcutInfo.getDisabledMessage();"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="555"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                mInfo.mDisabledReason = shortcutInfo.getDisabledReason();"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="557"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                mInfo.mDisabledReason = shortcutInfo.isEnabled()"
        errorLine2="                                                     ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="559"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mCategories = shortcutInfo.getCategories();"
        errorLine2="                                             ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="563"
            column="46"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mPersons = ShortcutInfoCompat.getPersonsFromExtra(shortcutInfo.getExtras());"
        errorLine2="                                                                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="564"
            column="82"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mUser = shortcutInfo.getUserHandle();"
        errorLine2="                                       ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="565"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mLastChangedTimestamp = shortcutInfo.getLastChangedTimestamp();"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="566"
            column="56"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mIsDynamic = shortcutInfo.isDynamic();"
        errorLine2="                                            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="570"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mIsPinned = shortcutInfo.isPinned();"
        errorLine2="                                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="571"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mIsDeclaredInManifest = shortcutInfo.isDeclaredInManifest();"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="572"
            column="56"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mIsImmutable = shortcutInfo.isImmutable();"
        errorLine2="                                              ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="573"
            column="47"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mIsEnabled = shortcutInfo.isEnabled();"
        errorLine2="                                            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="574"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mHasKeyFieldsOnly = shortcutInfo.hasKeyFieldsOnly();"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="575"
            column="52"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mRank = shortcutInfo.getRank();"
        errorLine2="                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="577"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutInfoCompat.Builder is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            mInfo.mExtras = shortcutInfo.getExtras();"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="578"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).isRequestPinShortcutSupported();"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="137"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).isRequestPinShortcutSupported();"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="137"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).requestPinShortcut("
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="174"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).requestPinShortcut("
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="174"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            result = context.getSystemService(ShortcutManager.class)"
        errorLine2="                             ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="218"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="                    .createShortcutResultIntent(shortcut.toShortcutInfo());"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="219"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                    context.getSystemService(ShortcutManager.class).getShortcuts(matchFlags);"
        errorLine2="                            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="259"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            final ShortcutManager manager = context.getSystemService(ShortcutManager.class);"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="262"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                shortcuts.addAll(manager.getManifestShortcuts());"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="265"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                shortcuts.addAll(manager.getDynamicShortcuts());"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="268"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                shortcuts.addAll(manager.getPinnedShortcuts());"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="271"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            if (!context.getSystemService(ShortcutManager.class).addDynamicShortcuts(shortcuts)) {"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="307"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            if (!context.getSystemService(ShortcutManager.class).addDynamicShortcuts(shortcuts)) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="307"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).getMaxShortcutCountPerActivity();"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="323"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).getMaxShortcutCountPerActivity();"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="323"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).isRateLimitingActive();"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="340"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).isRateLimitingActive();"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="340"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).getIconMaxWidth();"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="360"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).getIconMaxWidth();"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="360"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).getIconMaxHeight();"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="371"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            return context.getSystemService(ShortcutManager.class).getIconMaxHeight();"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="371"
            column="68"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            context.getSystemService(ShortcutManager.class).reportShortcutUsed(shortcutId);"
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="398"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            context.getSystemService(ShortcutManager.class).reportShortcutUsed(shortcutId);"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="398"
            column="61"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            if (!context.getSystemService(ShortcutManager.class).setDynamicShortcuts(shortcuts)) {"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="432"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            if (!context.getSystemService(ShortcutManager.class).setDynamicShortcuts(shortcuts)) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="432"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            List&lt;ShortcutInfo> shortcuts = context.getSystemService("
        errorLine2="                                                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="451"
            column="52"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                    ShortcutManager.class).getDynamicShortcuts();"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="452"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            if (!context.getSystemService(ShortcutManager.class).updateShortcuts(shortcuts)) {"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="490"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            if (!context.getSystemService(ShortcutManager.class).updateShortcuts(shortcuts)) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="490"
            column="66"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            context.getSystemService(ShortcutManager.class)"
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="550"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                    .disableShortcuts(shortcutIds, disabledMessage);"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="551"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            context.getSystemService(ShortcutManager.class).enableShortcuts(shortcutIds);"
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="578"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            context.getSystemService(ShortcutManager.class).enableShortcuts(shortcutIds);"
        errorLine2="                                                            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="578"
            column="61"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            context.getSystemService(ShortcutManager.class).removeDynamicShortcuts(shortcutIds);"
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="590"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            context.getSystemService(ShortcutManager.class).removeDynamicShortcuts(shortcutIds);"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="590"
            column="61"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            context.getSystemService(ShortcutManager.class).removeAllDynamicShortcuts();"
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="601"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            context.getSystemService(ShortcutManager.class).removeAllDynamicShortcuts();"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="601"
            column="61"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="        context.getSystemService(ShortcutManager.class).removeLongLivedShortcuts(shortcutIds);"
        errorLine2="                ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="625"
            column="17"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            context.getSystemService(ShortcutManager.class).pushDynamicShortcut("
        errorLine2="                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="675"
            column="21"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            final ShortcutManager sm = context.getSystemService(ShortcutManager.class);"
        errorLine2="                                               ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="678"
            column="48"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            if (sm.isRateLimitingActive()) {"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="679"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            final List&lt;ShortcutInfo> shortcuts = sm.getDynamicShortcuts();"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="682"
            column="53"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="                sm.removeDynamicShortcuts(Arrays.asList("
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="684"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 25, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 25. Either annotate the containing class with at least @RequiresApi(25) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(25)."
        errorLine1="            sm.addDynamicShortcuts(Arrays.asList(shortcut.toShortcutInfo()));"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="687"
            column="16"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.content.pm.ShortcutManagerCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                Build.VERSION.SDK_INT &lt; 19 || am == null || am.isLowRamDevice();"
        errorLine2="                                                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutManagerCompat.java"
            line="727"
            column="64"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.app.TaskStackBuilder is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return PendingIntent.getActivities(mSourceContext, requestCode, intents, flags,"
        errorLine2="                                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/TaskStackBuilder.java"
            line="341"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.text.TextUtilsCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return TextUtils.getLayoutDirectionFromLocale(locale);"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/TextUtilsCompat.java"
            line="91"
            column="30"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            textView.setCompoundDrawablesRelative(start, top, end, bottom);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="152"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            boolean rtl = textView.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="154"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            textView.setCompoundDrawablesRelativeWithIntrinsicBounds(start, top, end, bottom);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="179"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            boolean rtl = textView.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="181"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            textView.setCompoundDrawablesRelativeWithIntrinsicBounds(start, top, end, bottom);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="211"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            boolean rtl = textView.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="213"
            column="36"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return textView.getMaxLines();"
        errorLine2="                            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="227"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return textView.getMinLines();"
        errorLine2="                            ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="253"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            textView.setTextAppearance(resId);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="284"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return textView.getCompoundDrawablesRelative();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="296"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            final boolean rtl = textView.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL;"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="299"
            column="42"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            textView.setAutoSizeTextTypeWithDefaults(autoSizeTextType);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="327"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            textView.setAutoSizeTextTypeUniformWithConfiguration("
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="362"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            textView.setAutoSizeTextTypeUniformWithPresetSizes(presetSizes, unit);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="388"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return textView.getAutoSizeTextType();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="407"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return textView.getAutoSizeStepGranularity();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="423"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return textView.getAutoSizeMinTextSize();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="440"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return textView.getAutoSizeMaxTextSize();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="457"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return textView.getAutoSizeTextAvailableSizes();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="474"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            textView.setFirstBaselineToTopHeight(firstBaselineToTopHeight);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="695"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                || textView.getIncludeFontPadding()) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="704"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                || textView.getIncludeFontPadding()) {"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="745"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return new PrecomputedTextCompat.Params(textView.getTextMetricsParams());"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="816"
            column="62"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                builder.setBreakStrategy(textView.getBreakStrategy());"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="821"
            column="51"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="                builder.setHyphenationFrequency(textView.getHyphenationFrequency());"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="822"
            column="58"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            textView.setTextDirection(getTextDirection(params.getTextDirection()));"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="843"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            textView.setBreakStrategy(params.getBreakStrategy());"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="866"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            textView.setHyphenationFrequency(params.getHyphenationFrequency());"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="867"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="                        DecimalFormatSymbols.getInstance(textView.getTextLocale());"
        errorLine2="                                                                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="919"
            column="67"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="                        DecimalFormatSymbols.getInstance(textView.getTextLocale());"
        errorLine2="                                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="919"
            column="46"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                final String zero = symbols.getDigitStrings()[0];"
        errorLine2="                                            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="920"
            column="45"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="        final boolean defaultIsRtl = (textView.getLayoutDirection() == View.LAYOUT_DIRECTION_RTL);"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="935"
            column="48"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="        switch (textView.getTextDirection()) {"
        errorLine2="                         ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="938"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            textView.setCompoundDrawableTintList(tint);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="995"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return textView.getCompoundDrawableTintList();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="1011"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            textView.setCompoundDrawableTintMode(tintMode);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="1029"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.widget.TextViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return textView.getCompoundDrawableTintMode();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewCompat.java"
            line="1046"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.widget.TextViewRichContentReceiverCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    paste = clip.getItemAt(i).coerceToStyledText(context);"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/TextViewRichContentReceiverCompat.java"
            line="82"
            column="47"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.os.TraceCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return Trace.isEnabled();"
        errorLine2="                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/TraceCompat.java"
            line="78"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.os.TraceCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            Trace.beginSection(sectionName);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/TraceCompat.java"
            line="104"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.os.TraceCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            Trace.endSection();"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/TraceCompat.java"
            line="117"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.os.TraceCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            Trace.beginAsyncSection(methodName, cookie);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/TraceCompat.java"
            line="133"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.os.TraceCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            Trace.endAsyncSection(methodName, cookie);"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/TraceCompat.java"
            line="153"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.os.TraceCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            Trace.setCounter(counterName, counterValue);"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/TraceCompat.java"
            line="172"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.net.TrafficStatsCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            TrafficStats.tagDatagramSocket(socket);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/net/TrafficStatsCompat.java"
            line="138"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.net.TrafficStatsCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            TrafficStats.untagDatagramSocket(socket);"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/net/TrafficStatsCompat.java"
            line="155"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.TypefaceCompatUtil is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="        try (ParcelFileDescriptor pfd = resolver.openFileDescriptor(uri, &quot;r&quot;, cancellationSignal)) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="104"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.os.UserManagerCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return context.getSystemService(UserManager.class).isUserUnlocked();"
        errorLine2="                           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/UserManagerCompat.java"
            line="42"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.os.UserManagerCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return context.getSystemService(UserManager.class).isUserUnlocked();"
        errorLine2="                                                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/UserManagerCompat.java"
            line="42"
            column="64"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            v.setAutofillHints(autofillHints);"
        errorLine2="              ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="753"
            column="15"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return v.getImportantForAutofill();"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="774"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            v.setImportantForAutofill(mode);"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="818"
            column="15"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return v.isImportantForAutofill();"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="887"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return v.getAccessibilityDelegate();"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="937"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return view.hasTransientState();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="980"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.setHasTransientState(hasTransientState);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="994"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.postInvalidateOnAnimation();"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1009"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.postInvalidateOnAnimation(left, top, right, bottom);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1031"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.postOnAnimation(action);"
        errorLine2="                 ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1049"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.postOnAnimationDelayed(action, delayMillis);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1071"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return view.getImportantForAccessibility();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1093"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.setImportantForAccessibility(mode);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1120"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.setImportantForAccessibility(mode);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1129"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.isImportantForAccessibility();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1171"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return view.performAccessibilityAction(action, arguments);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1193"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            AccessibilityNodeProvider provider = view.getAccessibilityNodeProvider();"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1428"
            column="55"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return view.getLabelFor();"
        errorLine2="                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1523"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            view.setLabelFor(labeledId);"
        errorLine2="                 ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1537"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            view.setLayerPaint(paint);"
        errorLine2="                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1573"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return view.getLayoutDirection();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1596"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            view.setLayoutDirection(layoutDirection);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1620"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return view.getParentForAccessibility();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1634"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return view.requireViewById(id);"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1657"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return view.getAccessibilityLiveRegion();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1774"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            view.setAccessibilityLiveRegion(mode);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1810"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return view.getPaddingStart();"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1825"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return view.getPaddingEnd();"
        errorLine2="                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1841"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            view.setPaddingRelative(start, top, end, bottom);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1862"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            view.dispatchStartTemporaryDetach();"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1885"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            view.dispatchFinishTemporaryDetach();"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1908"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return view.getMinimumWidth();"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1985"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return view.getMinimumHeight();"
        errorLine2="                        ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2019"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setElevation(elevation);"
        errorLine2="                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2326"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.getElevation();"
        errorLine2="                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2337"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setTranslationZ(translationZ);"
        errorLine2="                 ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2347"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.getTranslationZ();"
        errorLine2="                        ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2358"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setTransitionName(transitionName);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2372"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.getTransitionName();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2394"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return view.getWindowSystemUiVisibility();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2407"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            view.requestApplyInsets();"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2418"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.requestFitSystemWindows();"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2420"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return v.getFitsSystemWindows();"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2463"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                v.setOnApplyWindowInsetsListener(null);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2503"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="            v.setOnApplyWindowInsetsListener(new View.OnApplyWindowInsetsListener() {"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2507"
            column="15"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                WindowInsets result = view.onApplyWindowInsets(unwrapped);"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2537"
            column="44"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 20, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 20. Either annotate the containing class with at least @RequiresApi(20) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(20)."
        errorLine1="                final WindowInsets result = view.dispatchApplyWindowInsets(unwrapped);"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2565"
            column="50"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            view.setSystemGestureExclusionRects(rects);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2589"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 29, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 29. Either annotate the containing class with at least @RequiresApi(29) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(29)."
        errorLine1="            return view.getSystemGestureExclusionRects();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2604"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            return view.hasOverlappingRendering();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2691"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return view.isPaddingRelative();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2704"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.setBackground(background);"
        errorLine2="                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2717"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.getBackgroundTintList();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2731"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setBackgroundTintList(tintList);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2747"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                boolean hasTint = (view.getBackgroundTintList() != null)"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2753"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        || (view.getBackgroundTintMode() != null);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2754"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    view.setBackground(background);"
        errorLine2="                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2759"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.getBackgroundTintMode();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2776"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setBackgroundTintMode(mode);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2794"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                boolean hasTint = (view.getBackgroundTintList() != null)"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2800"
            column="41"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        || (view.getBackgroundTintMode() != null);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2801"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                    view.setBackground(background);"
        errorLine2="                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2806"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setNestedScrollingEnabled(enabled);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2832"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.isNestedScrollingEnabled();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2855"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.startNestedScroll(axes);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2877"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.stopNestedScroll();"
        errorLine2="                 ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2896"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.hasNestedScrollingParent();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2913"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.dispatchNestedScroll(dxConsumed, dyConsumed, dxUnconsumed, dyUnconsumed,"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2942"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.dispatchNestedPreScroll(dx, dy, consumed, offsetInWindow);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2973"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.dispatchNestedFling(velocityX, velocityY, consumed);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3197"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.dispatchNestedPreFling(velocityX, velocityY);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3240"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return view.isInLayout();"
        errorLine2="                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3262"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return view.isLaidOut();"
        errorLine2="                        ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3273"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return view.isLayoutDirectionResolved();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3290"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return view.getZ();"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3304"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            view.setZ(z);"
        errorLine2="                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3323"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            view.setClipBounds(clipBounds);"
        errorLine2="                 ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3442"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return view.getClipBounds();"
        errorLine2="                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3457"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            return view.isAttachedToWindow();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3467"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 15, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 15. Either annotate the containing class with at least @RequiresApi(15) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(15)."
        errorLine1="            return view.hasOnClickListeners();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3479"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            view.setScrollIndicators(indicators);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3497"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            view.setScrollIndicators(indicators, mask);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3531"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 23, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 23. Either annotate the containing class with at least @RequiresApi(23) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(23)."
        errorLine1="            return view.getScrollIndicators();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3549"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            view.setPointerIcon((PointerIcon) (pointerIcon != null"
        errorLine2="                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3560"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return view.getDisplay();"
        errorLine2="                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3579"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            view.setTooltipText(tooltipText);"
        errorLine2="                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3599"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            return v.startDragAndDrop(data, shadowBuilder, localState, flags);"
        errorLine2="                     ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3609"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            v.cancelDragAndDrop();"
        errorLine2="              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3620"
            column="15"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 24, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 24. Either annotate the containing class with at least @RequiresApi(24) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(24)."
        errorLine1="            v.updateDragShadow(shadowBuilder);"
        errorLine2="              ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3629"
            column="15"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return view.getNextClusterForwardId();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3641"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            view.setNextClusterForwardId(nextClusterForwardId);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3655"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return view.isKeyboardNavigationCluster();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3667"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            view.setKeyboardNavigationCluster(isCluster);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3681"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return view.isFocusedByDefault();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3696"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            view.setFocusedByDefault(isFocusedByDefault);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3715"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return view.keyboardNavigationClusterSearch(currentCluster, direction);"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3733"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            view.addKeyboardNavigationClusters(views, direction);"
        errorLine2="                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3749"
            column="18"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return view.restoreDefaultFocus();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3763"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return view.hasExplicitFocusable();"
        errorLine2="                        ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3785"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 17, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 17. Either annotate the containing class with at least @RequiresApi(17) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(17)."
        errorLine1="            return View.generateViewId();"
        errorLine2="                        ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3798"
            column="25"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class null is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                return view.isScreenReaderFocusable();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3990"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class null is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                view.setScreenReaderFocusable(value);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3996"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class null is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                return view.getAccessibilityPaneTitle();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4062"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class null is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                view.setAccessibilityPaneTitle(value);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4068"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class null is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                return view.isAccessibilityHeading();"
        errorLine2="                            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4142"
            column="29"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class null is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="                view.setAccessibilityHeading(value);"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4148"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            event.setContentChangeTypes(changeType);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4243"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            event.setContentChangeTypes(changeType);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4253"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                view.getParent().notifySubtreeAccessibilityStateChanged(view, view, changeType);"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4260"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewCompat.AccessibilityPaneVisibilityManager is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            if (pane.isAttachedToWindow()) {"
        errorLine2="                     ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4320"
            column="22"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewCompat.AccessibilityPaneVisibilityManager is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="            view.getViewTreeObserver().removeOnGlobalLayoutListener(this);"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4351"
            column="40"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewConfigurationCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return config.getScaledHorizontalScrollFactor();"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewConfigurationCompat.java"
            line="82"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 26, the call containing class androidx.core.view.ViewConfigurationCompat is not annotated with @RequiresApi(x) where x is at least 26. Either annotate the containing class with at least @RequiresApi(26) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(26)."
        errorLine1="            return config.getScaledVerticalScrollFactor();"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewConfigurationCompat.java"
            line="99"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.ViewConfigurationCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return config.getScaledHoverSlop();"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewConfigurationCompat.java"
            line="129"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.ViewConfigurationCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return config.shouldShowMenuShortcutsWhenKeyboardPresent();"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewConfigurationCompat.java"
            line="142"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.ViewGroupCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            return group.getLayoutMode();"
        errorLine2="                         ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="115"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.ViewGroupCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="            group.setLayoutMode(mode);"
        errorLine2="                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="131"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewGroupCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            group.setTransitionGroup(isTransitionGroup);"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="145"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewGroupCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return group.isTransitionGroup();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="158"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewGroupCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="            return group.getNestedScrollAxes();"
        errorLine2="                         ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="182"
            column="26"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewParentCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    return parent.onStartNestedScroll(child, target, nestedScrollAxes);"
        errorLine2="                                  ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="215"
            column="35"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewParentCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    parent.onNestedScrollAccepted(child, target, nestedScrollAxes);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="256"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewParentCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    parent.onStopNestedScroll(target);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="289"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewParentCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                        parent.onNestedScroll(target, dxConsumed, dyConsumed, dxUnconsumed,"
        errorLine2="                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="346"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewParentCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                    parent.onNestedPreScroll(target, dx, dy, consumed);"
        errorLine2="                           ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="391"
            column="28"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewParentCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return parent.onNestedFling(target, velocityX, velocityY, consumed);"
        errorLine2="                              ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="426"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewParentCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                return parent.onNestedPreFling(target, velocityX, velocityY);"
        errorLine2="                              ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="463"
            column="31"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewParentCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="            parent.notifySubtreeAccessibilityStateChanged(child, source, changeType);"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="493"
            column="20"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                view.animate().withEndAction(runnable);"
        errorLine2="                               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="218"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 18, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 18. Either annotate the containing class with at least @RequiresApi(18) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(18)."
        errorLine1="                return (Interpolator) view.animate().getInterpolator();"
        errorLine2="                                                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="269"
            column="54"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                view.animate().translationZBy(value);"
        errorLine2="                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="572"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                view.animate().translationZ(value);"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="591"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                view.animate().z(value);"
        errorLine2="                               ~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="610"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 21, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 21. Either annotate the containing class with at least @RequiresApi(21) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(21)."
        errorLine1="                view.animate().zBy(value);"
        errorLine2="                               ~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="629"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                view.animate().withLayer();"
        errorLine2="                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="682"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 16, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 16. Either annotate the containing class with at least @RequiresApi(16) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(16)."
        errorLine1="                view.animate().withStartAction(runnable);"
        errorLine2="                               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="710"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.ViewPropertyAnimatorCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="                view.animate().setUpdateListener(wrapped);"
        errorLine2="                               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="787"
            column="32"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 28, the call containing class androidx.core.view.WindowCompat is not annotated with @RequiresApi(x) where x is at least 28. Either annotate the containing class with at least @RequiresApi(28) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(28)."
        errorLine1="            return window.requireViewById(id);"
        errorLine2="                          ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/WindowCompat.java"
            line="87"
            column="27"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.view.WindowInsetsCompat is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="        if (view != null &amp;&amp; view.isAttachedToWindow()) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/WindowInsetsCompat.java"
            line="177"
            column="34"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.drawable.WrappedDrawableApi14 is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="        mDrawable.setAutoMirrored(mirrored);"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/WrappedDrawableApi14.java"
            line="198"
            column="19"/>
    </issue>

    <issue
        id="UnsafeNewApiCall"
        message="This call is to a method from API 19, the call containing class androidx.core.graphics.drawable.WrappedDrawableApi14 is not annotated with @RequiresApi(x) where x is at least 19. Either annotate the containing class with at least @RequiresApi(19) or move the call to a static method in a wrapper class annotated with at least @RequiresApi(19)."
        errorLine1="        return mDrawable.isAutoMirrored();"
        errorLine2="                         ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/WrappedDrawableApi14.java"
            line="204"
            column="26"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`AccessibilityNodeInfoCompat`) and setter parameter type (`View`) getter and setter methods for property `parent` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public AccessibilityNodeInfoCompat getParent() {"
        errorLine2="                                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2164"
            column="40"/>
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2179"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`CollectionInfoCompat`) and setter parameter type (`Object`) getter and setter methods for property `collectionInfo` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public CollectionInfoCompat getCollectionInfo() {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2988"
            column="33"/>
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2998"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`CollectionItemInfoCompat`) and setter parameter type (`Object`) getter and setter methods for property `collectionItemInfo` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public CollectionItemInfoCompat getCollectionItemInfo() {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3021"
            column="37"/>
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3007"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`AccessibilityNodeInfoCompat`) and setter parameter type (`View`) getter and setter methods for property `labelFor` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public AccessibilityNodeInfoCompat getLabelFor() {"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3262"
            column="40"/>
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3225"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`AccessibilityNodeInfoCompat`) and setter parameter type (`View`) getter and setter methods for property `labeledBy` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public AccessibilityNodeInfoCompat getLabeledBy() {"
        errorLine2="                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3318"
            column="40"/>
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3276"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getCanOpenPopup` such that `canOpenPopup` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean canOpenPopup() {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3331"
            column="20"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`AccessibilityNodeInfoCompat`) and setter parameter type (`View`) getter and setter methods for property `traversalBefore` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public AccessibilityNodeInfoCompat getTraversalBefore() {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3532"
            column="40"/>
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3554"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`AccessibilityNodeInfoCompat`) and setter parameter type (`View`) getter and setter methods for property `traversalAfter` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public AccessibilityNodeInfoCompat getTraversalAfter() {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3597"
            column="40"/>
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3619"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="The getter return type (`AccessibilityNodeInfoCompat`) and setter parameter type (`View`) getter and setter methods for property `source` should have exactly the same type to allow be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public AccessibilityNodeInfoCompat getSource() {"
        errorLine2="                                       ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="159"
            column="40"/>
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="97"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `setLongpressEnabled` such that (along with the `isLongpressEnabled` getter) Kotlin code can access it as a property (`longpressEnabled`); see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public void setIsLongpressEnabled(boolean enabled) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GestureDetectorCompat.java"
            line="556"
            column="17"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getShouldShowIcon` such that `shouldShowIcon` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean shouldShowIcon() {"
        errorLine2="                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="150"
            column="20"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getMipMap` such that `mipMap` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean hasMipMap() {"
        errorLine2="                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/RoundedBitmapDrawable.java"
            line="181"
            column="20"/>
    </issue>

    <issue
        id="KotlinPropertyAccess"
        message="This method should be called `getAntiAlias` such that `antiAlias` can be accessed as a property from Kotlin; see https://android.github.io/kotlin-guides/interop.html#property-prefixes"
        errorLine1="    public boolean hasAntiAlias() {"
        errorLine2="                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/RoundedBitmapDrawable.java"
            line="205"
            column="20"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 2, &quot;r&quot;, in androidx.core.os.HandlerCompat.postDelayed) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @Nullable Object token, long delayMillis) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/HandlerCompat.java"
            line="143"
            column="37"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;component&quot;, in androidx.core.view.KeyEventDispatcher.dispatchKeyEvent) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            @Nullable View root, @Nullable Window.Callback callback, @NonNull KeyEvent event) {"
        errorLine2="                                                                     ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/KeyEventDispatcher.java"
            line="79"
            column="70"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 1, &quot;callable&quot;, in androidx.core.provider.SelfDestructiveThread.postAndWait) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="    public &lt;T> T postAndWait(final Callable&lt;T> callable, int timeoutMillis)"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/SelfDestructiveThread.java"
            line="165"
            column="58"/>
    </issue>

    <issue
        id="LambdaLast"
        message="Functional interface parameters (such as parameter 2, &quot;action&quot;, in androidx.core.view.ViewCompat.postOnAnimationDelayed) should be last to improve Kotlin interoperability; see https://kotlinlang.org/docs/reference/java-interop.html#sam-conversions"
        errorLine1="            long delayMillis) {"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1069"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            AccessibilityNodeInfoCompat nodeInfoCompat, int clickableSpanActionId) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityClickableSpanCompat.java"
            line="55"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityDelegateCompat(AccessibilityDelegate originalDelegate) {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="147"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void sendAccessibilityEvent(View host, int eventType) {"
        errorLine2="                                       ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="173"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void sendAccessibilityEventUnchecked(View host, AccessibilityEvent event) {"
        errorLine2="                                                ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="195"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void sendAccessibilityEventUnchecked(View host, AccessibilityEvent event) {"
        errorLine2="                                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="195"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchPopulateAccessibilityEvent(View host, AccessibilityEvent event) {"
        errorLine2="                                                      ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="216"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchPopulateAccessibilityEvent(View host, AccessibilityEvent event) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="216"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onPopulateAccessibilityEvent(View host, AccessibilityEvent event) {"
        errorLine2="                                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="236"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onPopulateAccessibilityEvent(View host, AccessibilityEvent event) {"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="236"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityEvent(View host, AccessibilityEvent event) {"
        errorLine2="                                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="256"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityEvent(View host, AccessibilityEvent event) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="256"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="                                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="275"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info) {"
        errorLine2="                                                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="275"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onRequestSendAccessibilityEvent(ViewGroup host, View child,"
        errorLine2="                                                   ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="299"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onRequestSendAccessibilityEvent(ViewGroup host, View child,"
        errorLine2="                                                                   ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="299"
            column="68"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            AccessibilityEvent event) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="300"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(View host) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="318"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeProviderCompat getAccessibilityNodeProvider(View host) {"
        errorLine2="                                                                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="318"
            column="73"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean performAccessibilityAction(View host, int action, Bundle args) {"
        errorLine2="                                              ~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="344"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean performAccessibilityAction(View host, int action, Bundle args) {"
        errorLine2="                                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/AccessibilityDelegateCompat.java"
            line="344"
            column="70"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getRecordCount(AccessibilityEvent event) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="257"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void appendRecord(AccessibilityEvent event, AccessibilityRecordCompat record) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="273"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void appendRecord(AccessibilityEvent event, AccessibilityRecordCompat record) {"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="273"
            column="63"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityRecordCompat getRecord(AccessibilityEvent event, int index) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="287"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityRecordCompat getRecord(AccessibilityEvent event, int index) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="287"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityRecordCompat asRecord(AccessibilityEvent event) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="308"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityRecordCompat asRecord(AccessibilityEvent event) {"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="308"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setContentChangeTypes(AccessibilityEvent event,"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="320"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getContentChangeTypes(AccessibilityEvent event) {"
        errorLine2="                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="342"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setMovementGranularity(AccessibilityEvent event, int granularity) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="357"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getMovementGranularity(AccessibilityEvent event) {"
        errorLine2="                                             ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="368"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setAction(AccessibilityEvent event, int action) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="393"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getAction(AccessibilityEvent event) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityEventCompat.java"
            line="404"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean addAccessibilityStateChangeListener(AccessibilityManager manager,"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="45"
            column="63"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            AccessibilityStateChangeListener listener) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="46"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean removeAccessibilityStateChangeListener(AccessibilityManager manager,"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="66"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            AccessibilityStateChangeListener listener) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="67"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static List&lt;AccessibilityServiceInfo> getInstalledAccessibilityServiceList("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="118"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            AccessibilityManager manager) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="119"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static List&lt;AccessibilityServiceInfo> getEnabledAccessibilityServiceList("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="141"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            AccessibilityManager manager, int feedbackTypeFlags) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="142"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isTouchExplorationEnabled(AccessibilityManager manager) {"
        errorLine2="                                                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="155"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean addTouchExplorationStateChangeListener(AccessibilityManager manager,"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="166"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            TouchExplorationStateChangeListener listener) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="167"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean removeTouchExplorationStateChangeListener(AccessibilityManager manager,"
        errorLine2="                                                                    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="185"
            column="69"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            TouchExplorationStateChangeListener listener) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityManagerCompat.java"
            line="186"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public AccessibilityActionCompat(int actionId, CharSequence label) {"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="608"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public AccessibilityActionCompat(int actionId, CharSequence label,"
        errorLine2="                                                       ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="621"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="                AccessibilityViewCommand command) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="622"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public CharSequence getLabel() {"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="667"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean perform(View view, Bundle arguments) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="683"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public boolean perform(View view, Bundle arguments) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="683"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public AccessibilityActionCompat createReplacementAction(CharSequence label,"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="707"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public AccessibilityActionCompat createReplacementAction(CharSequence label,"
        errorLine2="                                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="707"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="                AccessibilityViewCommand command) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="708"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static CollectionInfoCompat obtain(int rowCount, int columnCount,"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="777"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static CollectionInfoCompat obtain(int rowCount, int columnCount,"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="799"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static CollectionItemInfoCompat obtain(int rowIndex, int rowSpan,"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="898"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static CollectionItemInfoCompat obtain(int rowIndex, int rowSpan,"
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="923"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static RangeInfoCompat obtain(int type, float min, float max, float current) {"
        errorLine2="                      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1040"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat(Object info) {"
        errorLine2="                                       ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1696"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeInfoCompat wrap(@NonNull AccessibilityNodeInfo info) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1710"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfo unwrap() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1717"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Object getInfo() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1727"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeInfoCompat obtain(View source) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1738"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeInfoCompat obtain(View source) {"
        errorLine2="                                                     ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1738"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeInfoCompat obtain(View root, int virtualDescendantId) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1752"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeInfoCompat obtain(View root, int virtualDescendantId) {"
        errorLine2="                                                     ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1752"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeInfoCompat obtain() {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1766"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeInfoCompat obtain(AccessibilityNodeInfoCompat info) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1777"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeInfoCompat obtain(AccessibilityNodeInfoCompat info) {"
        errorLine2="                                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1777"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSource(View source) {"
        errorLine2="                          ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1786"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSource(View root, int virtualDescendantId) {"
        errorLine2="                          ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1812"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat findFocus(int focus) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1832"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat focusSearch(int direction) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1854"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getChild(int index) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1893"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addChild(View child) {"
        errorLine2="                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1908"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addChild(View root, int virtualDescendantId) {"
        errorLine2="                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1926"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean removeChild(View child) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1946"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean removeChild(View root, int virtualDescendantId) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="1964"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addAction(AccessibilityActionCompat action) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2029"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean removeAction(AccessibilityActionCompat action) {"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2054"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean performAction(int action, Bundle arguments) {"
        errorLine2="                                             ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2091"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(String text) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2143"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(String text) {"
        errorLine2="                                                                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2143"
            column="79"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getParent() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2164"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setParent(View parent) {"
        errorLine2="                          ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2179"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setParent(View root, int virtualDescendantId) {"
        errorLine2="                          ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2205"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getBoundsInParent(Rect outBounds) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2226"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setBoundsInParent(Rect bounds) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2249"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getBoundsInScreen(Rect outBounds) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2258"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setBoundsInScreen(Rect bounds) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2273"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getPackageName() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2617"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setPackageName(CharSequence packageName) {"
        errorLine2="                               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2632"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getClassName() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2641"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setClassName(CharSequence className) {"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2656"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getText() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2665"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setText(CharSequence text) {"
        errorLine2="                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2695"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addSpansToExtras(CharSequence text, View view) {"
        errorLine2="                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2703"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addSpansToExtras(CharSequence text, View view) {"
        errorLine2="                                                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2703"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ClickableSpan[] getClickableSpans(CharSequence text) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2740"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ClickableSpan[] getClickableSpans(CharSequence text) {"
        errorLine2="                                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2740"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getContentDescription() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2801"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setContentDescription(CharSequence contentDescription) {"
        errorLine2="                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2831"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setViewIdResourceName(String viewId) {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2876"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String getViewIdResourceName() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2894"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CollectionInfoCompat getCollectionInfo() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2988"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setCollectionInfo(Object collectionInfo) {"
        errorLine2="                                  ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="2998"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setCollectionItemInfo(Object collectionItemInfo) {"
        errorLine2="                                      ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3007"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CollectionItemInfoCompat getCollectionItemInfo() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3021"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public RangeInfoCompat getRangeInfo() {"
        errorLine2="           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3036"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setRangeInfo(RangeInfoCompat rangeInfo) {"
        errorLine2="                             ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3056"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;AccessibilityActionCompat> getActionList() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3073"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setError(CharSequence error) {"
        errorLine2="                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3200"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getError() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3211"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLabelFor(View labeled) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3225"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLabelFor(View root, int virtualDescendantId) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3245"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getLabelFor() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3262"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLabeledBy(View label) {"
        errorLine2="                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3276"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setLabeledBy(View root, int virtualDescendantId) {"
        errorLine2="                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3301"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getLabeledBy() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3318"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByViewId(String viewId) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3377"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByViewId(String viewId) {"
        errorLine2="                                                                                ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3377"
            column="81"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Bundle getExtras() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3403"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getTraversalBefore() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3532"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setTraversalBefore(View view) {"
        errorLine2="                                   ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3554"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setTraversalBefore(View root, int virtualDescendantId) {"
        errorLine2="                                   ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3581"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getTraversalAfter() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3597"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setTraversalAfter(View view) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3619"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setTraversalAfter(View root, int virtualDescendantId) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3645"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityWindowInfoCompat getWindow() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeInfoCompat.java"
            line="3658"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeProviderCompat(Object provider) {"
        errorLine2="                                           ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeProviderCompat.java"
            line="137"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Object getProvider() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeProviderCompat.java"
            line="144"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean performAction(int virtualViewId, int action, Bundle arguments) {"
        errorLine2="                                                                ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeProviderCompat.java"
            line="188"
            column="65"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;AccessibilityNodeInfoCompat> findAccessibilityNodeInfosByText(String text,"
        errorLine2="                                                                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityNodeProviderCompat.java"
            line="207"
            column="79"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityRecordCompat(Object record) {"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="43"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Object getImpl() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="54"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityRecordCompat obtain(AccessibilityRecordCompat record) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="69"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityRecordCompat obtain(AccessibilityRecordCompat record) {"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="69"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityRecordCompat obtain() {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="83"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSource(View source) {"
        errorLine2="                          ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="97"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSource(View root, int virtualDescendantId) {"
        errorLine2="                          ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="118"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setSource(@NonNull AccessibilityRecord record, View root,"
        errorLine2="                                                                      ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="137"
            column="71"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getSource() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="159"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getMaxScrollX(AccessibilityRecord record) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="481"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setMaxScrollX(AccessibilityRecord record, int maxScrollX) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="507"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getMaxScrollY(AccessibilityRecord record) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="531"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setMaxScrollY(AccessibilityRecord record, int maxScrollY) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="557"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getClassName() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="623"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setClassName(CharSequence className) {"
        errorLine2="                             ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="637"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;CharSequence> getText() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="650"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getBeforeText() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="662"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setBeforeText(CharSequence beforeText) {"
        errorLine2="                              ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="676"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getContentDescription() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="688"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setContentDescription(CharSequence contentDescription) {"
        errorLine2="                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="702"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Parcelable getParcelableData() {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="714"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setParcelableData(Parcelable parcelableData) {"
        errorLine2="                                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityRecordCompat.java"
            line="728"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void setBundle(Bundle bundle) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityViewCommand.java"
            line="53"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public String getHTMLElement() {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityViewCommand.java"
            line="103"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public CharSequence getText() {"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityViewCommand.java"
            line="138"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getRoot() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="125"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityWindowInfoCompat getParent() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="139"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getBoundsInScreen(Rect outBounds) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="165"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityWindowInfoCompat getChild(int index) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="231"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getTitle() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="245"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AccessibilityNodeInfoCompat getAnchor() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="258"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityWindowInfoCompat obtain() {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="273"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityWindowInfoCompat obtain(AccessibilityWindowInfoCompat info) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="289"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityWindowInfoCompat obtain(AccessibilityWindowInfoCompat info) {"
        errorLine2="                                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/accessibility/AccessibilityWindowInfoCompat.java"
            line="289"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ActionProvider(Context context) {"
        errorLine2="                          ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ActionProvider.java"
            line="133"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Context getContext() {"
        errorLine2="           ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ActionProvider.java"
            line="140"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract View onCreateActionView();"
        errorLine2="                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/ActionProvider.java"
            line="149"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onCreateActionView(MenuItem forItem) {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/core/view/ActionProvider.java"
            line="163"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onCreateActionView(MenuItem forItem) {"
        errorLine2="                                   ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ActionProvider.java"
            line="163"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onPrepareSubMenu(SubMenu subMenu) {"
        errorLine2="                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ActionProvider.java"
            line="262"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSubUiVisibilityListener(SubUiVisibilityListener listener) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ActionProvider.java"
            line="282"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setVisibilityListener(VisibilityListener listener) {"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ActionProvider.java"
            line="292"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PermissionCompatDelegate getPermissionCompatDelegate() {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="171"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean invalidateOptionsMenu(Activity activity) {"
        errorLine2="                                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="209"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static DragAndDropPermissionsCompat requestDragAndDropPermissions(Activity activity,"
        errorLine2="                                                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="567"
            column="78"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            DragEvent dragEvent) {"
        errorLine2="            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityCompat.java"
            line="568"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Pair&lt;View, String>... sharedElements) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ActivityOptionsCompat.java"
            line="206"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AutoScrollHelper setEnabled(boolean enabled) {"
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/AutoScrollHelper.java"
            line="235"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public AutoScrollHelper setExclusive(boolean exclusive) {"
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/AutoScrollHelper.java"
            line="263"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/core/widget/AutoScrollHelper.java"
            line="465"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/AutoScrollHelper.java"
            line="465"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    int[] getAutoSizeTextAvailableSizes();"
        errorLine2="    ~~~~~">
        <location
            file="src/main/java/androidx/core/widget/AutoSizeableTextView.java"
            line="146"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder(Locale locale) {"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="157"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder stereoReset(boolean stereoReset) {"
        errorLine2="               ~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="176"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder setTextDirectionHeuristic(TextDirectionHeuristicCompat heuristic) {"
        errorLine2="               ~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="192"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder setTextDirectionHeuristic(TextDirectionHeuristicCompat heuristic) {"
        errorLine2="                                                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="192"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public BidiFormatter build() {"
        errorLine2="               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="204"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static BidiFormatter getInstance() {"
        errorLine2="                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="235"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static BidiFormatter getInstance(boolean rtlContext) {"
        errorLine2="                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="244"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static BidiFormatter getInstance(Locale locale) {"
        errorLine2="                  ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="253"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static BidiFormatter getInstance(Locale locale) {"
        errorLine2="                                            ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="253"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean isRtl(String str) {"
        errorLine2="                         ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="346"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean isRtl(CharSequence str) {"
        errorLine2="                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="357"
            column="26"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str, TextDirectionHeuristicCompat heuristic, boolean isolate) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="390"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str, TextDirectionHeuristicCompat heuristic, boolean isolate) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="390"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str, TextDirectionHeuristicCompat heuristic, boolean isolate) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="390"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str, TextDirectionHeuristicCompat heuristic,"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="409"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str, TextDirectionHeuristicCompat heuristic,"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="409"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str, TextDirectionHeuristicCompat heuristic,"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="409"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str, TextDirectionHeuristicCompat heuristic) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="440"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str, TextDirectionHeuristicCompat heuristic) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="440"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str, TextDirectionHeuristicCompat heuristic) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="440"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str, TextDirectionHeuristicCompat heuristic) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="455"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str, TextDirectionHeuristicCompat heuristic) {"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="455"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str, TextDirectionHeuristicCompat heuristic) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="455"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str, boolean isolate) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="468"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str, boolean isolate) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="468"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str, boolean isolate) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="482"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str, boolean isolate) {"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="482"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="493"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String unicodeWrap(String str) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="493"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="505"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence unicodeWrap(CharSequence str) {"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/BidiFormatter.java"
            line="505"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onStateChanged(int[] stateSet) {"
        errorLine2="                                  ~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ComplexColorCompat.java"
            line="107"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void putExtraData(ExtraData extraData) {"
        errorLine2="                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ComponentActivity.java"
            line="78"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public &lt;T extends ExtraData> T getExtraData(Class&lt;T> extraDataClass) {"
        errorLine2="                                 ~">
        <location
            file="src/main/java/androidx/core/app/ComponentActivity.java"
            line="106"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public &lt;T extends ExtraData> T getExtraData(Class&lt;T> extraDataClass) {"
        errorLine2="                                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ComponentActivity.java"
            line="106"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean superDispatchKeyEvent(KeyEvent event) {"
        errorLine2="                                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ComponentActivity.java"
            line="121"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchKeyShortcutEvent(KeyEvent event) {"
        errorLine2="                                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ComponentActivity.java"
            line="126"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchKeyEvent(KeyEvent event) {"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/ComponentActivity.java"
            line="135"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void accept(T t);"
        errorLine2="                ~">
        <location
            file="src/main/java/androidx/core/util/Consumer.java"
            line="30"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Cursor query(ContentResolver resolver,"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="71"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Cursor query(ContentResolver resolver,"
        errorLine2="                               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="71"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Uri uri, String[] projection, String selection, String[] selectionArgs,"
        errorLine2="            ~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="72"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Uri uri, String[] projection, String selection, String[] selectionArgs,"
        errorLine2="                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="72"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Uri uri, String[] projection, String selection, String[] selectionArgs,"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="72"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Uri uri, String[] projection, String selection, String[] selectionArgs,"
        errorLine2="                                                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="72"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            String sortOrder, CancellationSignal cancellationSignal) {"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="73"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            String sortOrder, CancellationSignal cancellationSignal) {"
        errorLine2="                              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContentResolverCompat.java"
            line="73"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static File getCodeCacheDir(@NonNull Context context) {"
        errorLine2="                  ~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="580"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Executor getMainExecutor(Context context) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="662"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Executor getMainExecutor(Context context) {"
        errorLine2="                                           ~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/ContextCompat.java"
            line="662"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        Object getWrapper();"
        errorLine2="        ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/CoreComponentFactory.java"
            line="118"
            column="9"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String concatenateWhere(String a, String b) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/core/database/DatabaseUtilsCompat.java"
            line="40"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String concatenateWhere(String a, String b) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/database/DatabaseUtilsCompat.java"
            line="40"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String concatenateWhere(String a, String b) {"
        errorLine2="                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/core/database/DatabaseUtilsCompat.java"
            line="40"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String[] appendSelectionArgs(String[] originalValues, String[] newValues) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/database/DatabaseUtilsCompat.java"
            line="59"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String[] appendSelectionArgs(String[] originalValues, String[] newValues) {"
        errorLine2="                                               ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/database/DatabaseUtilsCompat.java"
            line="59"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String[] appendSelectionArgs(String[] originalValues, String[] newValues) {"
        errorLine2="                                                                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/database/DatabaseUtilsCompat.java"
            line="59"
            column="73"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void buildShortClassTag(Object cls, StringBuilder out) {"
        errorLine2="                                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/util/DebugUtils.java"
            line="31"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void buildShortClassTag(Object cls, StringBuilder out) {"
        errorLine2="                                                      ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/util/DebugUtils.java"
            line="31"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public DisplayCutoutCompat(Rect safeInsets, List&lt;Rect> boundingRects) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="55"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public DisplayCutoutCompat(Rect safeInsets, List&lt;Rect> boundingRects) {"
        errorLine2="                                                ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DisplayCutoutCompat.java"
            line="55"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static DragAndDropPermissionsCompat request(Activity activity, DragEvent dragEvent) {"
        errorLine2="                                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DragAndDropPermissionsCompat.java"
            line="49"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static DragAndDropPermissionsCompat request(Activity activity, DragEvent dragEvent) {"
        errorLine2="                                                                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DragAndDropPermissionsCompat.java"
            line="49"
            column="75"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean onDragStart(View v, DragStartHelper helper);"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/DragStartHelper.java"
            line="87"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean onDragStart(View v, DragStartHelper helper);"
        errorLine2="                                    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DragStartHelper.java"
            line="87"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public DragStartHelper(View view, OnDragStartListener listener) {"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/core/view/DragStartHelper.java"
            line="96"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public DragStartHelper(View view, OnDragStartListener listener) {"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DragStartHelper.java"
            line="96"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/core/view/DragStartHelper.java"
            line="128"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouch(View v, MotionEvent event) {"
        errorLine2="                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/DragStartHelper.java"
            line="128"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onLongClick(View v) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/DragStartHelper.java"
            line="169"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void getTouchPosition(Point point) {"
        errorLine2="                                 ~~~~~">
        <location
            file="src/main/java/androidx/core/view/DragStartHelper.java"
            line="177"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ColorFilter getColorFilter(@NonNull Drawable drawable) {"
        errorLine2="                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="209"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Drawable wrap(@NonNull Drawable drawable) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="306"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static &lt;T extends Drawable> T unwrap(@NonNull Drawable drawable) {"
        errorLine2="                                       ~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/DrawableCompat.java"
            line="333"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public EdgeEffectCompat(Context context) {"
        errorLine2="                            ~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/EdgeEffectCompat.java"
            line="47"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean draw(Canvas canvas) {"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/EdgeEffectCompat.java"
            line="207"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String[] getContentMimeTypes(EditorInfo editorInfo) {"
        errorLine2="                                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/inputmethod/EditorInfoCompat.java"
            line="179"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Uri getUriForFile(@NonNull Context context, @NonNull String authority,"
        errorLine2="                  ~~~">
        <location
            file="src/main/java/androidx/core/content/FileProvider.java"
            line="415"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Cursor query(@NonNull Uri uri, @Nullable String[] projection, @Nullable String selection,"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/content/FileProvider.java"
            line="450"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String getType(@NonNull Uri uri) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/content/FileProvider.java"
            line="491"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Uri insert(@NonNull Uri uri, ContentValues values) {"
        errorLine2="           ~~~">
        <location
            file="src/main/java/androidx/core/content/FileProvider.java"
            line="512"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Uri insert(@NonNull Uri uri, ContentValues values) {"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/FileProvider.java"
            line="512"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int update(@NonNull Uri uri, ContentValues values, @Nullable String selection,"
        errorLine2="                                        ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/FileProvider.java"
            line="521"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ParcelFileDescriptor openFile(@NonNull Uri uri, @NonNull String mode)"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/FileProvider.java"
            line="561"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public AuthenticationResult(CryptoObject crypto) {"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="251"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public CryptoObject getCryptoObject() { return mCryptoObject; }"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="260"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onAuthenticationError(int errMsgId, CharSequence errString) { }"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="277"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onAuthenticationHelp(int helpMsgId, CharSequence helpString) { }"
        errorLine2="                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="286"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onAuthenticationSucceeded(AuthenticationResult result) { }"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/hardware/fingerprint/FingerprintManagerCompat.java"
            line="292"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String getIdentifier() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontRequest.java"
            line="142"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static @Nullable FamilyResourceEntry parse(XmlPullParser parser, Resources resources)"
        errorLine2="                                                      ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/FontResourcesParserCompat.java"
            line="165"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static @Nullable FamilyResourceEntry parse(XmlPullParser parser, Resources resources)"
        errorLine2="                                                                            ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/FontResourcesParserCompat.java"
            line="165"
            column="77"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static List&lt;List&lt;byte[]&gt;> readCerts(Resources resources, @ArrayRes int certsId) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/FontResourcesParserCompat.java"
            line="245"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static List&lt;List&lt;byte[]&gt;> readCerts(Resources resources, @ArrayRes int certsId) {"
        errorLine2="                                               ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/FontResourcesParserCompat.java"
            line="245"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Typeface getFontSync(final Context context, final FontRequest request,"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="228"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Typeface getFontSync(final Context context, final FontRequest request,"
        errorLine2="                                             ~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="228"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Typeface getFontSync(final Context context, final FontRequest request,"
        errorLine2="                                                                    ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="228"
            column="69"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public FontInfo[] getFonts() {"
        errorLine2="               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="436"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void onTypefaceRetrieved(Typeface typeface) {}"
        errorLine2="                                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="501"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Map&lt;Uri, ByteBuffer> prepareFontData(Context context, FontInfo[] fonts,"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="688"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Map&lt;Uri, ByteBuffer> prepareFontData(Context context, FontInfo[] fonts,"
        errorLine2="                                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="688"
            column="56"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Map&lt;Uri, ByteBuffer> prepareFontData(Context context, FontInfo[] fonts,"
        errorLine2="                                                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="688"
            column="73"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            CancellationSignal cancellationSignal) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/FontsContractCompat.java"
            line="689"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GestureDetectorCompat(Context context, OnGestureListener listener) {"
        errorLine2="                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GestureDetectorCompat.java"
            line="506"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GestureDetectorCompat(Context context, OnGestureListener listener) {"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GestureDetectorCompat.java"
            line="506"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GestureDetectorCompat(Context context, OnGestureListener listener, Handler handler) {"
        errorLine2="                                 ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GestureDetectorCompat.java"
            line="520"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GestureDetectorCompat(Context context, OnGestureListener listener, Handler handler) {"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GestureDetectorCompat.java"
            line="520"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public GestureDetectorCompat(Context context, OnGestureListener listener, Handler handler) {"
        errorLine2="                                                                              ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GestureDetectorCompat.java"
            line="520"
            column="79"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouchEvent(MotionEvent event) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GestureDetectorCompat.java"
            line="543"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setOnDoubleTapListener(OnDoubleTapListener listener) {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/GestureDetectorCompat.java"
            line="567"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void apply(int gravity, int w, int h, Rect container,"
        errorLine2="                                                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="62"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Rect outRect, int layoutDirection) {"
        errorLine2="            ~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="63"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void apply(int gravity, int w, int h, Rect container,"
        errorLine2="                                                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="96"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int xAdj, int yAdj, Rect outRect, int layoutDirection) {"
        errorLine2="                                ~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="97"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void applyDisplay(int gravity, Rect display, Rect inoutObj, int layoutDirection) {"
        errorLine2="                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="125"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void applyDisplay(int gravity, Rect display, Rect inoutObj, int layoutDirection) {"
        errorLine2="                                                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/GravityCompat.java"
            line="125"
            column="64"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static String maximizeAndGetScript(Locale locale) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/ICUCompat.java"
            line="88"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public byte[]          mData = null;"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="169"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Parcelable      mParcelable = null;"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="175"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ColorStateList  mTintList = null;"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="199"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String mTintModeStr = null;"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="209"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String mString1;"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="216"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithResource(Context context, @DrawableRes int resId) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="225"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithResource(Context context, @DrawableRes int resId) {"
        errorLine2="                                                ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="225"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithResource(Resources r, String pkg, @DrawableRes int resId) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="236"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithResource(Resources r, String pkg, @DrawableRes int resId) {"
        errorLine2="                                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="236"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithResource(Resources r, String pkg, @DrawableRes int resId) {"
        errorLine2="                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="236"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithBitmap(Bitmap bits) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="263"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithBitmap(Bitmap bits) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="263"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithAdaptiveBitmap(Bitmap bits) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="278"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithAdaptiveBitmap(Bitmap bits) {"
        errorLine2="                                                      ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="278"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithData(byte[] data, int offset, int length) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="296"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithData(byte[] data, int offset, int length) {"
        errorLine2="                                            ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="296"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithContentUri(String uri) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="313"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithContentUri(String uri) {"
        errorLine2="                                                  ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="313"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithContentUri(Uri uri) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="328"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static IconCompat createWithContentUri(Uri uri) {"
        errorLine2="                                                  ~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="328"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IconCompat setTint(@ColorInt int tint) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="483"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IconCompat setTintList(ColorStateList tintList) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="493"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IconCompat setTintList(ColorStateList tintList) {"
        errorLine2="                                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="493"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IconCompat setTintMode(PorterDuff.Mode mode) {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="504"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IconCompat setTintMode(PorterDuff.Mode mode) {"
        errorLine2="                                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/IconCompat.java"
            line="504"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean onCommitContent(InputContentInfoCompat inputContentInfo, int flags, Bundle opts);"
        errorLine2="                                ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/inputmethod/InputConnectionCompat.java"
            line="235"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean onCommitContent(InputContentInfoCompat inputContentInfo, int flags, Bundle opts);"
        errorLine2="                                                                                    ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/inputmethod/InputConnectionCompat.java"
            line="235"
            column="85"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IBinder onBind(@NonNull Intent intent) {"
        errorLine2="           ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/JobIntentService.java"
            line="463"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean superDispatchKeyEvent(KeyEvent event);"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/KeyEventDispatcher.java"
            line="191"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static LayoutInflaterFactory getFactory(LayoutInflater inflater) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/LayoutInflaterCompat.java"
            line="169"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static LayoutInflaterFactory getFactory(LayoutInflater inflater) {"
        errorLine2="                                                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/LayoutInflaterCompat.java"
            line="169"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    View onCreateView(View parent, String name, Context context, AttributeSet attrs);"
        errorLine2="    ~~~~">
        <location
            file="src/main/java/androidx/core/view/LayoutInflaterFactory.java"
            line="46"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    View onCreateView(View parent, String name, Context context, AttributeSet attrs);"
        errorLine2="                      ~~~~">
        <location
            file="src/main/java/androidx/core/view/LayoutInflaterFactory.java"
            line="46"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    View onCreateView(View parent, String name, Context context, AttributeSet attrs);"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/LayoutInflaterFactory.java"
            line="46"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    View onCreateView(View parent, String name, Context context, AttributeSet attrs);"
        errorLine2="                                                ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/LayoutInflaterFactory.java"
            line="46"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    View onCreateView(View parent, String name, Context context, AttributeSet attrs);"
        errorLine2="                                                                 ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/LayoutInflaterFactory.java"
            line="46"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static OnTouchListener createDragToOpenListener(Object listPopupWindow, View src) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ListPopupWindowCompat.java"
            line="64"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static OnTouchListener createDragToOpenListener(Object listPopupWindow, View src) {"
        errorLine2="                                                           ~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ListPopupWindowCompat.java"
            line="64"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static OnTouchListener createDragToOpenListener(Object listPopupWindow, View src) {"
        errorLine2="                                                                                   ~~~~">
        <location
            file="src/main/java/androidx/core/widget/ListPopupWindowCompat.java"
            line="64"
            column="84"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static LocaleListCompat wrap(Object localeList) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompat.java"
            line="45"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static LocaleListCompat wrap(Object localeList) {"
        errorLine2="                                        ~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompat.java"
            line="45"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Locale get(int index) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompat.java"
            line="85"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int indexOf(Locale locale) {"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/core/os/LocaleListCompat.java"
            line="116"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public LogWriter(String tag) {"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/util/LogWriter.java"
            line="43"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    @Override public void write(char[] buf, int offset, int count) {"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/core/util/LogWriter.java"
            line="55"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getMarginStart(ViewGroup.MarginLayoutParams lp) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="41"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getMarginEnd(ViewGroup.MarginLayoutParams lp) {"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="60"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setMarginStart(ViewGroup.MarginLayoutParams lp, int marginStart) {"
        errorLine2="                                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="79"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setMarginEnd(ViewGroup.MarginLayoutParams lp, int marginEnd) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="98"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isMarginRelative(ViewGroup.MarginLayoutParams lp) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="111"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getLayoutDirection(ViewGroup.MarginLayoutParams lp) {"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="125"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setLayoutDirection(ViewGroup.MarginLayoutParams lp, int layoutDirection) {"
        errorLine2="                                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="149"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void resolveLayoutDirection(ViewGroup.MarginLayoutParams lp,"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MarginLayoutParamsCompat.java"
            line="159"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setShowAsAction(MenuItem item, int actionEnum) {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuCompat.java"
            line="36"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setGroupDividerEnabled(Menu menu, boolean enabled) {"
        errorLine2="                                              ~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuCompat.java"
            line="47"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean onMenuItemActionExpand(MenuItem item);"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="109"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean onMenuItemActionCollapse(MenuItem item);"
        errorLine2="                                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="118"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setShowAsAction(MenuItem item, int actionEnum) {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="134"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setActionView(MenuItem item, View view) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="152"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setActionView(MenuItem item, View view) {"
        errorLine2="                                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="152"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setActionView(MenuItem item, View view) {"
        errorLine2="                                                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="152"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setActionView(MenuItem item, int resId) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="174"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setActionView(MenuItem item, int resId) {"
        errorLine2="                                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="174"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static View getActionView(MenuItem item) {"
        errorLine2="                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="187"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static View getActionView(MenuItem item) {"
        errorLine2="                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="187"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setActionProvider(MenuItem item, ActionProvider provider) {"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="206"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setActionProvider(MenuItem item, ActionProvider provider) {"
        errorLine2="                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="206"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setActionProvider(MenuItem item, ActionProvider provider) {"
        errorLine2="                                                            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="206"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ActionProvider getActionProvider(MenuItem item) {"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="223"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ActionProvider getActionProvider(MenuItem item) {"
        errorLine2="                                                   ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="223"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean expandActionView(MenuItem item) {"
        errorLine2="                                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="248"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean collapseActionView(MenuItem item) {"
        errorLine2="                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="267"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isActionViewExpanded(MenuItem item) {"
        errorLine2="                                               ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="283"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setOnActionExpandListener(MenuItem item,"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="300"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static MenuItem setOnActionExpandListener(MenuItem item,"
        errorLine2="                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="300"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            final OnActionExpandListener listener) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="301"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setContentDescription(MenuItem item, CharSequence contentDescription) {"
        errorLine2="                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="321"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setContentDescription(MenuItem item, CharSequence contentDescription) {"
        errorLine2="                                                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="321"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CharSequence getContentDescription(MenuItem item) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="334"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CharSequence getContentDescription(MenuItem item) {"
        errorLine2="                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="334"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setTooltipText(MenuItem item, CharSequence tooltipText) {"
        errorLine2="                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="350"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setTooltipText(MenuItem item, CharSequence tooltipText) {"
        errorLine2="                                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="350"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CharSequence getTooltipText(MenuItem item) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="363"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CharSequence getTooltipText(MenuItem item) {"
        errorLine2="                                              ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="363"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setShortcut(MenuItem item, char numericChar, char alphaChar,"
        errorLine2="                                   ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="395"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setNumericShortcut(MenuItem item, char numericChar, int numericModifiers) {"
        errorLine2="                                          ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="417"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getNumericModifiers(MenuItem item) {"
        errorLine2="                                          ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="435"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setAlphabeticShortcut(MenuItem item, char alphaChar, int alphaModifiers) {"
        errorLine2="                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="462"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getAlphabeticModifiers(MenuItem item) {"
        errorLine2="                                             ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="480"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setIconTintList(MenuItem item, ColorStateList tint) {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="502"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setIconTintList(MenuItem item, ColorStateList tint) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="502"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ColorStateList getIconTintList(MenuItem item) {"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="514"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ColorStateList getIconTintList(MenuItem item) {"
        errorLine2="                                                 ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="514"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setIconTintMode(MenuItem item, PorterDuff.Mode tintMode) {"
        errorLine2="                                       ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="533"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setIconTintMode(MenuItem item, PorterDuff.Mode tintMode) {"
        errorLine2="                                                      ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="533"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PorterDuff.Mode getIconTintMode(MenuItem item) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="547"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PorterDuff.Mode getIconTintMode(MenuItem item) {"
        errorLine2="                                                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MenuItemCompat.java"
            line="547"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getActionMasked(MotionEvent event) {"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="464"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getActionIndex(MotionEvent event) {"
        errorLine2="                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="476"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int findPointerIndex(MotionEvent event, int pointerId) {"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="487"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getPointerId(MotionEvent event, int pointerIndex) {"
        errorLine2="                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="498"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getX(MotionEvent event, int pointerIndex) {"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="509"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getY(MotionEvent event, int pointerIndex) {"
        errorLine2="                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="520"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getPointerCount(MotionEvent event) {"
        errorLine2="                                      ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="531"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getSource(MotionEvent event) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="543"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isFromSource(MotionEvent event, int source) {"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="552"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getAxisValue(MotionEvent event, int axis) {"
        errorLine2="                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="569"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getAxisValue(MotionEvent event, int axis, int pointerIndex) {"
        errorLine2="                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="589"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getButtonState(MotionEvent event) {"
        errorLine2="                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/MotionEventCompat.java"
            line="598"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        void onScrollChange(NestedScrollView v, int scrollX, int scrollY,"
        errorLine2="                            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="96"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int dyUnconsumed, int[] offsetInWindow, int type) {"
        errorLine2="                              ~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="246"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow,"
        errorLine2="                                                           ~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="252"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow,"
        errorLine2="                                                                           ~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="252"
            column="76"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int dyUnconsumed, int[] offsetInWindow) {"
        errorLine2="                              ~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="286"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow) {"
        errorLine2="                                                           ~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="292"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchNestedPreScroll(int dx, int dy, int[] consumed, int[] offsetInWindow) {"
        errorLine2="                                                                           ~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="292"
            column="76"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addView(View child) {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="471"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addView(View child, int index) {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="480"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addView(View child, ViewGroup.LayoutParams params) {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="489"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addView(View child, ViewGroup.LayoutParams params) {"
        errorLine2="                                    ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="489"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addView(View child, int index, ViewGroup.LayoutParams params) {"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="498"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void addView(View child, int index, ViewGroup.LayoutParams params) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="498"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean dispatchKeyEvent(KeyEvent event) {"
        errorLine2="                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="619"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onInterceptTouchEvent(MotionEvent ev) {"
        errorLine2="                                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="716"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onTouchEvent(MotionEvent ev) {"
        errorLine2="                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="827"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean onGenericMotionEvent(MotionEvent event) {"
        errorLine2="                                        ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1010"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void measureChild(View child, int parentWidthMeasureSpec,"
        errorLine2="                                ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1573"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void measureChildWithMargins(View child, int parentWidthMeasureSpec, int widthUsed,"
        errorLine2="                                           ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1589"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected int computeScrollDeltaToGetChildRectOnScreen(Rect rect) {"
        errorLine2="                                                           ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1724"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void requestChildFocus(View child, View focused) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1790"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void requestChildFocus(View child, View focused) {"
        errorLine2="                                              ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1790"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Rect previouslyFocusedRect) {"
        errorLine2="            ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1810"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean requestChildRectangleOnScreen(View child, Rect rectangle,"
        errorLine2="                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1837"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public boolean requestChildRectangleOnScreen(View child, Rect rectangle,"
        errorLine2="                                                             ~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1837"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void draw(Canvas canvas) {"
        errorLine2="                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="1997"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onRestoreInstanceState(Parcelable state) {"
        errorLine2="                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="2078"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Parcelable onSaveInstanceState() {"
        errorLine2="              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/NestedScrollView.java"
            line="2091"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    Notification.Builder getBuilder();"
        errorLine2="    ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationBuilderWithBuilderAccessor.java"
            line="34"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Context mContext;"
        errorLine2="               ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="813"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public ArrayList&lt;Action> mActions = new ArrayList&lt;>();"
        errorLine2="               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="817"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public ArrayList&lt;String> mPeople;"
        errorLine2="               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="878"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews getContentView() {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2342"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews getBigContentView() {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2350"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews getHeadsUpContentView() {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2358"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        protected Builder mBuilder;"
        errorLine2="                  ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2416"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void apply(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2453"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2469"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2469"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeBigContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2477"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeBigContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2477"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeHeadsUpContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2485"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeHeadsUpContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2485"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void addCompatExtras(Bundle extras) {"
        errorLine2="                                    ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2493"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Bitmap createColoredBitmap(int iconId, int color) {"
        errorLine2="               ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2773"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void buildIntoRemoteViews(RemoteViews outerView,"
        errorLine2="                                         ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2823"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="                RemoteViews innerView) {"
        errorLine2="                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2824"
            column="17"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void apply(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2935"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void addCompatExtras(Bundle extras) {"
        errorLine2="                                    ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="2955"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void apply(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3055"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void addCompatExtras(Bundle extras) {"
        errorLine2="                                    ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3072"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void apply(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3381"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void apply(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3928"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void addCompatExtras(Bundle extras) {"
        errorLine2="                                    ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="3947"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void apply(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                          ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4028"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4039"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4039"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeBigContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4056"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeBigContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4056"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeHeadsUpContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4077"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public RemoteViews makeHeadsUpContentView(NotificationBuilderWithBuilderAccessor builder) {"
        errorLine2="                                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4077"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public CharSequence title;"
        errorLine2="               ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4261"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public PendingIntent actionIntent;"
        errorLine2="               ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompat.java"
            line="4266"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IBinder onBind(Intent intent) {"
        errorLine2="           ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatSideChannelService.java"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IBinder onBind(Intent intent) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatSideChannelService.java"
            line="47"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void notify(String packageName, int id, String tag, Notification notification);"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatSideChannelService.java"
            line="62"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void notify(String packageName, int id, String tag, Notification notification);"
        errorLine2="                                                            ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatSideChannelService.java"
            line="62"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void notify(String packageName, int id, String tag, Notification notification);"
        errorLine2="                                                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatSideChannelService.java"
            line="62"
            column="73"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void cancel(String packageName, int id, String tag);"
        errorLine2="                                ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatSideChannelService.java"
            line="67"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void cancel(String packageName, int id, String tag);"
        errorLine2="                                                            ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatSideChannelService.java"
            line="67"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract void cancelAll(String packageName);"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/NotificationCompatSideChannelService.java"
            line="72"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    WindowInsetsCompat onApplyWindowInsets(View v, WindowInsetsCompat insets);"
        errorLine2="    ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/OnApplyWindowInsetsListener.java"
            line="42"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    WindowInsetsCompat onApplyWindowInsets(View v, WindowInsetsCompat insets);"
        errorLine2="                                           ~~~~">
        <location
            file="src/main/java/androidx/core/view/OnApplyWindowInsetsListener.java"
            line="42"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    WindowInsetsCompat onApplyWindowInsets(View v, WindowInsetsCompat insets);"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/OnApplyWindowInsetsListener.java"
            line="42"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onViewAttachedToWindow(View v) {"
        errorLine2="                                       ~~~~">
        <location
            file="src/main/java/androidx/core/view/OneShotPreDrawListener.java"
            line="89"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onViewDetachedFromWindow(View v) {"
        errorLine2="                                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/OneShotPreDrawListener.java"
            line="94"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static &lt;T> Parcelable.Creator&lt;T> newCreator("
        errorLine2="                      ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/ParcelableCompat.java"
            line="39"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            ParcelableCompatCreatorCallbacks&lt;T> callbacks) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/ParcelableCompat.java"
            line="40"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    T createFromParcel(Parcel in, ClassLoader loader);"
        errorLine2="    ~">
        <location
            file="src/main/java/androidx/core/os/ParcelableCompatCreatorCallbacks.java"
            line="40"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    T createFromParcel(Parcel in, ClassLoader loader);"
        errorLine2="                       ~~~~~~">
        <location
            file="src/main/java/androidx/core/os/ParcelableCompatCreatorCallbacks.java"
            line="40"
            column="24"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    T createFromParcel(Parcel in, ClassLoader loader);"
        errorLine2="                                  ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/os/ParcelableCompatCreatorCallbacks.java"
            line="40"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    T[] newArray(int size);"
        errorLine2="    ~~~">
        <location
            file="src/main/java/androidx/core/os/ParcelableCompatCreatorCallbacks.java"
            line="49"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Interpolator create(Path path) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/animation/PathInterpolatorCompat.java"
            line="47"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Interpolator create(Path path) {"
        errorLine2="                                      ~~~~">
        <location
            file="src/main/java/androidx/core/view/animation/PathInterpolatorCompat.java"
            line="47"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Interpolator create(float controlX, float controlY) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/animation/PathInterpolatorCompat.java"
            line="62"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Interpolator create(float controlX1, float controlY1,"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/animation/PathInterpolatorCompat.java"
            line="79"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Path createPathFromPathData(String pathData) {"
        errorLine2="                  ~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="72"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Path createPathFromPathData(String pathData) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="72"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PathDataNode[] createNodesFromPathData(String pathData) {"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="90"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PathDataNode[] createNodesFromPathData(String pathData) {"
        errorLine2="                                                         ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="90"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PathDataNode[] deepCopyNodes(PathDataNode[] source) {"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="119"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PathDataNode[] deepCopyNodes(PathDataNode[] source) {"
        errorLine2="                                               ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="119"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void updateNodes(PathDataNode[] target, PathDataNode[] source) {"
        errorLine2="                                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="162"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void updateNodes(PathDataNode[] target, PathDataNode[] source) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="162"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean interpolatePathDataNodes(PathDataNode[] target, PathDataNode[] from,"
        errorLine2="                                                   ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="313"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean interpolatePathDataNodes(PathDataNode[] target, PathDataNode[] from,"
        errorLine2="                                                                          ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="313"
            column="75"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            PathDataNode[] to, float fraction) {"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="314"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public float[] mParams;"
        errorLine2="               ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="350"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static void nodesToPath(PathDataNode[] node, Path path) {"
        errorLine2="                                       ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="368"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static void nodesToPath(PathDataNode[] node, Path path) {"
        errorLine2="                                                            ~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="368"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void interpolatePathDataNode(PathDataNode nodeFrom, PathDataNode nodeTo,"
        errorLine2="                                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="386"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public void interpolatePathDataNode(PathDataNode nodeFrom, PathDataNode nodeTo,"
        errorLine2="                                                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/PathParser.java"
            line="386"
            column="68"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Object getPointerIcon() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="115"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PointerIconCompat getSystemIcon(Context context, int style) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="129"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PointerIconCompat getSystemIcon(Context context, int style) {"
        errorLine2="                                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="129"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PointerIconCompat create(Bitmap bitmap, float hotSpotX, float hotSpotY) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="150"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PointerIconCompat create(Bitmap bitmap, float hotSpotX, float hotSpotY) {"
        errorLine2="                                           ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="150"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PointerIconCompat load(Resources resources, int resourceId) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="179"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PointerIconCompat load(Resources resources, int resourceId) {"
        errorLine2="                                         ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/PointerIconCompat.java"
            line="179"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public T acquire() {"
        errorLine2="               ~">
        <location
            file="src/main/java/androidx/core/util/Pools.java"
            line="103"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public T acquire() {"
        errorLine2="               ~">
        <location
            file="src/main/java/androidx/core/util/Pools.java"
            line="157"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            public Builder setBreakStrategy(int strategy) {"
        errorLine2="                   ~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="144"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            public Builder setHyphenationFrequency(int frequency) {"
        errorLine2="                   ~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="162"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            public Builder setTextDirection(@NonNull TextDirectionHeuristic textDir) {"
        errorLine2="                   ~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="180"
            column="20"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PrecomputedTextCompat create(@NonNull CharSequence text, @NonNull Params params) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="431"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Future&lt;PrecomputedTextCompat> getTextFuture("
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="650"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setSpan(Object what, int start, int end, int flags) {"
        errorLine2="                        ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="677"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void removeSpan(Object what) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="694"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public &lt;T> T[] getSpans(int start, int end, Class&lt;T> type) {"
        errorLine2="               ~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="713"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public &lt;T> T[] getSpans(int start, int end, Class&lt;T> type) {"
        errorLine2="                                                ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="713"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getSpanStart(Object tag) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="723"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getSpanEnd(Object tag) {"
        errorLine2="                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="728"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int getSpanFlags(Object tag) {"
        errorLine2="                            ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="733"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public int nextSpanTransition(int start, int limit, Class type) {"
        errorLine2="                                                        ~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="738"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence subSequence(int start, int end) {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/PrecomputedTextCompat.java"
            line="758"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IconCompat mIcon;"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence mTitle;"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="53"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence mContentDescription;"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="59"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public PendingIntent mActionIntent;"
        errorLine2="           ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteActionCompat.java"
            line="65"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public String getResultKey() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="115"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence getLabel() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="122"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public CharSequence[] getChoices() {"
        errorLine2="           ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="129"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Set&lt;String> getAllowedDataTypes() {"
        errorLine2="           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="133"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Bundle getExtras() {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="170"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Map&lt;String, Uri> getDataResultsFromIntent("
        errorLine2="                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="336"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Intent intent, String remoteInputResultKey) {"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="337"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Intent intent, String remoteInputResultKey) {"
        errorLine2="                           ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="337"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Bundle getResultsFromIntent(Intent intent) {"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="375"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Bundle getResultsFromIntent(Intent intent) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="375"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void addResultsToIntent(RemoteInput[] remoteInputs, Intent intent,"
        errorLine2="                                          ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="400"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void addResultsToIntent(RemoteInput[] remoteInputs, Intent intent,"
        errorLine2="                                                                      ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="400"
            column="71"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Bundle results) {"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="401"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void addDataResultToIntent(RemoteInput remoteInput, Intent intent,"
        errorLine2="                                             ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="464"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void addDataResultToIntent(RemoteInput remoteInput, Intent intent,"
        errorLine2="                                                                      ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="464"
            column="71"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Map&lt;String, Uri> results) {"
        errorLine2="            ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/RemoteInput.java"
            line="465"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public final void callbackSuccessAsync(final Typeface typeface, @Nullable Handler handler) {"
        errorLine2="                                                     ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ResourcesCompat.java"
            line="277"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Typeface getFont(@NonNull Context context, @FontRes int id, TypedValue value,"
        errorLine2="                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ResourcesCompat.java"
            line="345"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Typeface getFont(@NonNull Context context, @FontRes int id, TypedValue value,"
        errorLine2="                                                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/ResourcesCompat.java"
            line="345"
            column="79"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ResultReceiver(Handler handler) {"
        errorLine2="                          ~~~~~~~">
        <location
            file="src/main/java/android/support/v4/os/ResultReceiver.java"
            line="83"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void send(int resultCode, Bundle resultData) {"
        errorLine2="                                     ~~~~~~">
        <location
            file="src/main/java/android/support/v4/os/ResultReceiver.java"
            line="95"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onReceiveResult(int resultCode, Bundle resultData) {"
        errorLine2="                                                   ~~~~~~">
        <location
            file="src/main/java/android/support/v4/os/ResultReceiver.java"
            line="120"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void writeToParcel(Parcel out, int flags) {"
        errorLine2="                              ~~~~~~">
        <location
            file="src/main/java/android/support/v4/os/ResultReceiver.java"
            line="129"
            column="31"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void setColorFilter(ColorFilter cf) {"
        errorLine2="                               ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/RoundedBitmapDrawable.java"
            line="288"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ColorFilter getColorFilter() {"
        errorLine2="           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/RoundedBitmapDrawable.java"
            line="294"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected void onBoundsChange(Rect bounds) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/RoundedBitmapDrawable.java"
            line="344"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setQuickScaleEnabled(Object scaleGestureDetector, boolean enabled) {"
        errorLine2="                                            ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ScaleGestureDetectorCompat.java"
            line="39"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            ScaleGestureDetector scaleGestureDetector, boolean enabled) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ScaleGestureDetectorCompat.java"
            line="52"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isQuickScaleEnabled(Object scaleGestureDetector) {"
        errorLine2="                                              ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ScaleGestureDetectorCompat.java"
            line="67"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isQuickScaleEnabled(ScaleGestureDetector scaleGestureDetector) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ScaleGestureDetectorCompat.java"
            line="77"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ScrollerCompat create(Context context) {"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ScrollerCompat.java"
            line="40"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ScrollerCompat create(Context context) {"
        errorLine2="                                        ~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ScrollerCompat.java"
            line="40"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ScrollerCompat create(Context context, Interpolator interpolator) {"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ScrollerCompat.java"
            line="48"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ScrollerCompat create(Context context, Interpolator interpolator) {"
        errorLine2="                                        ~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ScrollerCompat.java"
            line="48"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ScrollerCompat create(Context context, Interpolator interpolator) {"
        errorLine2="                                                         ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/widget/ScrollerCompat.java"
            line="48"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            String threadName, int priority, int destructAfterMillisec) {"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/SelfDestructiveThread.java"
            line="79"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        void onReply(T value);"
        errorLine2="                     ~">
        <location
            file="src/main/java/androidx/core/provider/SelfDestructiveThread.java"
            line="128"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public &lt;T> void postAndReply(final Callable&lt;T> callable, final ReplyCallback&lt;T> reply) {"
        errorLine2="                                       ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/SelfDestructiveThread.java"
            line="136"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public &lt;T> void postAndReply(final Callable&lt;T> callable, final ReplyCallback&lt;T> reply) {"
        errorLine2="                                                                   ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/SelfDestructiveThread.java"
            line="136"
            column="68"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public &lt;T> T postAndWait(final Callable&lt;T> callable, int timeoutMillis)"
        errorLine2="               ~">
        <location
            file="src/main/java/androidx/core/provider/SelfDestructiveThread.java"
            line="165"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public &lt;T> T postAndWait(final Callable&lt;T> callable, int timeoutMillis)"
        errorLine2="                                   ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/provider/SelfDestructiveThread.java"
            line="165"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onSharedElementStart(List&lt;String> sharedElementNames,"
        errorLine2="                                     ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="77"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            List&lt;View> sharedElements, List&lt;View> sharedElementSnapshots) {}"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="78"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            List&lt;View> sharedElements, List&lt;View> sharedElementSnapshots) {}"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="78"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onSharedElementEnd(List&lt;String> sharedElementNames,"
        errorLine2="                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="108"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            List&lt;View> sharedElements, List&lt;View> sharedElementSnapshots) {}"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="109"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            List&lt;View> sharedElements, List&lt;View> sharedElementSnapshots) {}"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="109"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onRejectSharedElements(List&lt;View> rejectedSharedElements) {}"
        errorLine2="                                       ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="133"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onMapSharedElements(List&lt;String> names, Map&lt;String, View> sharedElements) {}"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="144"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onMapSharedElements(List&lt;String> names, Map&lt;String, View> sharedElements) {}"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="144"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Parcelable onCaptureSharedElementSnapshot(View sharedElement, Matrix viewToGlobalMatrix,"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="166"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Parcelable onCaptureSharedElementSnapshot(View sharedElement, Matrix viewToGlobalMatrix,"
        errorLine2="                                                     ~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="166"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Parcelable onCaptureSharedElementSnapshot(View sharedElement, Matrix viewToGlobalMatrix,"
        errorLine2="                                                                         ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="166"
            column="74"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            RectF screenBounds) {"
        errorLine2="            ~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="167"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onCreateSnapshotView(Context context, Parcelable snapshot) {"
        errorLine2="           ~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="256"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onCreateSnapshotView(Context context, Parcelable snapshot) {"
        errorLine2="                                     ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="256"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public View onCreateSnapshotView(Context context, Parcelable snapshot) {"
        errorLine2="                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="256"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onSharedElementsArrived(List&lt;String> sharedElementNames,"
        errorLine2="                                        ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="299"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            List&lt;View> sharedElements, OnSharedElementsReadyListener listener) {"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="300"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            List&lt;View> sharedElements, OnSharedElementsReadyListener listener) {"
        errorLine2="                                       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/SharedElementCallback.java"
            line="300"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public static EditorCompat getInstance() {"
        errorLine2="                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/SharedPreferencesCompat.java"
            line="65"
            column="23"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ShortcutInfo toShortcutInfo() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="100"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public IconCompat getIcon() {"
        errorLine2="           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="318"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Builder setIcon(IconCompat icon) {"
        errorLine2="                               ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompat.java"
            line="652"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract T addShortcuts(List&lt;ShortcutInfoCompat> shortcuts);"
        errorLine2="                    ~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="38"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract T addShortcuts(List&lt;ShortcutInfoCompat> shortcuts);"
        errorLine2="                                   ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="38"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract T removeShortcuts(List&lt;String> shortcutIds);"
        errorLine2="                    ~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="41"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract T removeShortcuts(List&lt;String> shortcutIds);"
        errorLine2="                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="41"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public abstract T removeAllShortcuts();"
        errorLine2="                    ~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="44"
            column="21"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public List&lt;ShortcutInfoCompat> getShortcuts() throws Exception {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="47"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Void addShortcuts(List&lt;ShortcutInfoCompat> shortcuts) {"
        errorLine2="               ~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="59"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Void addShortcuts(List&lt;ShortcutInfoCompat> shortcuts) {"
        errorLine2="                                 ~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="59"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Void removeShortcuts(List&lt;String> shortcutIds) {"
        errorLine2="               ~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="64"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Void removeShortcuts(List&lt;String> shortcutIds) {"
        errorLine2="                                    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="64"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        public Void removeAllShortcuts() {"
        errorLine2="               ~~~~">
        <location
            file="src/main/java/androidx/core/content/pm/ShortcutInfoCompatSaver.java"
            line="69"
            column="16"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    T get();"
        errorLine2="    ~">
        <location
            file="src/main/java/androidx/core/util/Supplier.java"
            line="30"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setShowAsActionFlags(int actionEnum);"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="107"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setActionView(View view);"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="122"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setActionView(View view);"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="122"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setActionView(int resId);"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="137"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    View getActionView();"
        errorLine2="    ~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="147"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    SupportMenuItem setSupportActionProvider(ActionProvider actionProvider);"
        errorLine2="    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="162"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    SupportMenuItem setSupportActionProvider(ActionProvider actionProvider);"
        errorLine2="                                             ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="162"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    ActionProvider getSupportActionProvider();"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="171"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    SupportMenuItem setContentDescription(CharSequence contentDescription);"
        errorLine2="    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="220"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    SupportMenuItem setContentDescription(CharSequence contentDescription);"
        errorLine2="                                          ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="220"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    CharSequence getContentDescription();"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="228"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    SupportMenuItem setTooltipText(CharSequence tooltipText);"
        errorLine2="    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="237"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    SupportMenuItem setTooltipText(CharSequence tooltipText);"
        errorLine2="                                   ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="237"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    CharSequence getTooltipText();"
        errorLine2="    ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="245"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setShortcut(char numericChar, char alphaChar, int numericModifiers,"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="271"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setNumericShortcut(char numericChar, int numericModifiers);"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="288"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setAlphabeticShortcut(char alphaChar, int alphaModifiers);"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="322"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setIconTintList(ColorStateList tint);"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="350"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setIconTintList(ColorStateList tint);"
        errorLine2="                             ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="350"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    ColorStateList getIconTintList();"
        errorLine2="    ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="357"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setIconTintMode(PorterDuff.Mode tintMode);"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="369"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    MenuItem setIconTintMode(PorterDuff.Mode tintMode);"
        errorLine2="                             ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="369"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    PorterDuff.Mode getIconTintMode();"
        errorLine2="    ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/internal/view/SupportMenuItem.java"
            line="378"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static TaskStackBuilder from(Context context) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/TaskStackBuilder.java"
            line="108"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static TaskStackBuilder from(Context context) {"
        errorLine2="                                        ~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/TaskStackBuilder.java"
            line="108"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public TaskStackBuilder addParentStack(ComponentName sourceActivityName) {"
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/TaskStackBuilder.java"
            line="200"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public TaskStackBuilder addParentStack(ComponentName sourceActivityName) {"
        errorLine2="                                           ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/TaskStackBuilder.java"
            line="200"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Intent getIntent(int index) {"
        errorLine2="           ~~~~~~">
        <location
            file="src/main/java/androidx/core/app/TaskStackBuilder.java"
            line="233"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Iterator&lt;Intent> iterator() {"
        errorLine2="           ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/app/TaskStackBuilder.java"
            line="255"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    boolean isRtl(char[] array, int start, int count);"
        errorLine2="                  ~~~~~~">
        <location
            file="src/main/java/androidx/core/text/TextDirectionHeuristicCompat.java"
            line="33"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    boolean isRtl(CharSequence cs, int start, int count);"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/text/TextDirectionHeuristicCompat.java"
            line="45"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void formatDuration(long duration, StringBuilder builder) {"
        errorLine2="                                                     ~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/util/TimeUtils.java"
            line="153"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void formatDuration(long duration, PrintWriter pw, int fieldLen) {"
        errorLine2="                                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/util/TimeUtils.java"
            line="162"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void formatDuration(long duration, PrintWriter pw) {"
        errorLine2="                                                     ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/util/TimeUtils.java"
            line="171"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void formatDuration(long time, long now, PrintWriter pw) {"
        errorLine2="                                                           ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/util/TimeUtils.java"
            line="177"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void setTintList(ColorStateList tint);"
        errorLine2="                     ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/TintAwareDrawable.java"
            line="36"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void setTintMode(PorterDuff.Mode tintMode);"
        errorLine2="                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/TintAwareDrawable.java"
            line="37"
            column="22"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void tagSocket(Socket socket) throws SocketException {"
        errorLine2="                                 ~~~~~~">
        <location
            file="src/main/java/androidx/core/net/TrafficStatsCompat.java"
            line="113"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void untagSocket(Socket socket) throws SocketException {"
        errorLine2="                                   ~~~~~~">
        <location
            file="src/main/java/androidx/core/net/TrafficStatsCompat.java"
            line="123"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ComplexColorCompat getNamedComplexColor(@NonNull TypedArray a,"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/content/res/TypedArrayUtils.java"
            line="137"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            @NonNull Context context, @NonNull Resources resources, int id, String path,"
        errorLine2="                                                                            ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompat.java"
            line="145"
            column="77"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Typeface createFromFamiliesWithDefault(Object family) {"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="167"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Typeface createFromFontFamilyFilesResourceEntry(Context context,"
        errorLine2="                                                           ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="200"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            FontResourcesParserCompat.FontFamilyFilesResourceEntry entry, Resources resources,"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="201"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            FontResourcesParserCompat.FontFamilyFilesResourceEntry entry, Resources resources,"
        errorLine2="                                                                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="201"
            column="75"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Typeface createFromFontInfo(Context context,"
        errorLine2="                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="226"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Context context, Resources resources, int id, String path, int style) {"
        errorLine2="            ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="290"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Context context, Resources resources, int id, String path, int style) {"
        errorLine2="                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="290"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Context context, Resources resources, int id, String path, int style) {"
        errorLine2="                                                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="290"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Class&lt;?> obtainFontFamily() throws ClassNotFoundException {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="315"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Constructor&lt;?> obtainFontFamilyCtor(Class&lt;?> fontFamily)"
        errorLine2="              ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="319"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Constructor&lt;?> obtainFontFamilyCtor(Class&lt;?> fontFamily)"
        errorLine2="                                                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="319"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainAddFontFromAssetManagerMethod(Class&lt;?> fontFamily)"
        errorLine2="              ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="324"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainAddFontFromAssetManagerMethod(Class&lt;?> fontFamily)"
        errorLine2="                                                         ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="324"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainAddFontFromBufferMethod(Class&lt;?> fontFamily)"
        errorLine2="              ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="331"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainAddFontFromBufferMethod(Class&lt;?> fontFamily)"
        errorLine2="                                                   ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="331"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainFreezeMethod(Class&lt;?> fontFamily) throws NoSuchMethodException {"
        errorLine2="              ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="338"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainFreezeMethod(Class&lt;?> fontFamily) throws NoSuchMethodException {"
        errorLine2="                                        ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="338"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainAbortCreationMethod(Class&lt;?> fontFamily) throws NoSuchMethodException {"
        errorLine2="              ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="342"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainAbortCreationMethod(Class&lt;?> fontFamily) throws NoSuchMethodException {"
        errorLine2="                                               ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="342"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainCreateFromFamiliesWithDefaultMethod(Class&lt;?> fontFamily)"
        errorLine2="              ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="346"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainCreateFromFamiliesWithDefaultMethod(Class&lt;?> fontFamily)"
        errorLine2="                                                               ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi26Impl.java"
            line="346"
            column="64"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Typeface createFromFamiliesWithDefault(Object family) {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi28Impl.java"
            line="47"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Typeface createFromFamiliesWithDefault(Object family) {"
        errorLine2="                                                     ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi28Impl.java"
            line="47"
            column="54"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainCreateFromFamiliesWithDefaultMethod(Class&lt;?> fontFamily)"
        errorLine2="              ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi28Impl.java"
            line="59"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Method obtainCreateFromFamiliesWithDefaultMethod(Class&lt;?> fontFamily)"
        errorLine2="                                                               ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi28Impl.java"
            line="59"
            column="64"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected FontsContractCompat.FontInfo findBestInfo(FontsContractCompat.FontInfo[] fonts,"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="46"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected FontsContractCompat.FontInfo findBestInfo(FontsContractCompat.FontInfo[] fonts,"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="46"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Typeface createFromInputStream(Context context, InputStream is) {"
        errorLine2="              ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="53"
            column="15"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Typeface createFromInputStream(Context context, InputStream is) {"
        errorLine2="                                             ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="53"
            column="46"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    protected Typeface createFromInputStream(Context context, InputStream is) {"
        errorLine2="                                                              ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="53"
            column="63"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Typeface createFromFontInfo(Context context,"
        errorLine2="                                       ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="59"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Typeface createFromFontFamilyFilesResourceEntry(Context context,"
        errorLine2="                                                           ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="105"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            FontResourcesParserCompat.FontFamilyFilesResourceEntry familyEntry, Resources resources,"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="106"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            FontResourcesParserCompat.FontFamilyFilesResourceEntry familyEntry, Resources resources,"
        errorLine2="                                                                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="106"
            column="81"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Context context, Resources resources, int id, String path, int style) {"
        errorLine2="            ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="151"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Context context, Resources resources, int id, String path, int style) {"
        errorLine2="                             ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="151"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Context context, Resources resources, int id, String path, int style) {"
        errorLine2="                                                          ~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatApi29Impl.java"
            line="151"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static File getTempFile(Context context) {"
        errorLine2="                                   ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="62"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ByteBuffer mmap(Context context, CancellationSignal cancellationSignal, Uri uri) {"
        errorLine2="                                  ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="102"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ByteBuffer mmap(Context context, CancellationSignal cancellationSignal, Uri uri) {"
        errorLine2="                                                   ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="102"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ByteBuffer mmap(Context context, CancellationSignal cancellationSignal, Uri uri) {"
        errorLine2="                                                                                          ~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="102"
            column="91"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ByteBuffer copyToDirectBuffer(Context context, Resources res, int id) {"
        errorLine2="                                                ~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="123"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ByteBuffer copyToDirectBuffer(Context context, Resources res, int id) {"
        errorLine2="                                                                 ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="123"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean copyToFile(File file, InputStream is) {"
        errorLine2="                                     ~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="141"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean copyToFile(File file, InputStream is) {"
        errorLine2="                                                ~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="141"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean copyToFile(File file, Resources res, int id) {"
        errorLine2="                                     ~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="164"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean copyToFile(File file, Resources res, int id) {"
        errorLine2="                                                ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="164"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void closeQuietly(Closeable c) {"
        errorLine2="                                    ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/TypefaceCompatUtil.java"
            line="174"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getXVelocity(VelocityTracker tracker, int pointerId) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/VelocityTrackerCompat.java"
            line="36"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getYVelocity(VelocityTracker tracker, int pointerId) {"
        errorLine2="                                     ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/VelocityTrackerCompat.java"
            line="48"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean canScrollHorizontally(View view, int direction) {"
        errorLine2="                                                ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="529"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean canScrollVertically(View view, int direction) {"
        errorLine2="                                              ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="543"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getOverScrollMode(View v) {"
        errorLine2="                                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="560"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setOverScrollMode(View v, @OverScroll int overScrollMode) {"
        errorLine2="                                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="580"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onPopulateAccessibilityEvent(View v, AccessibilityEvent event) {"
        errorLine2="                                                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="620"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onPopulateAccessibilityEvent(View v, AccessibilityEvent event) {"
        errorLine2="                                                            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="620"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onInitializeAccessibilityEvent(View v, AccessibilityEvent event) {"
        errorLine2="                                                      ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="652"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onInitializeAccessibilityEvent(View v, AccessibilityEvent event) {"
        errorLine2="                                                              ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="652"
            column="63"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            AccessibilityNodeInfoCompat info) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="684"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            @NonNull View v, AccessibilityDelegateCompat delegate) {"
        errorLine2="                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="714"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void postOnAnimation(@NonNull View view, Runnable action) {"
        errorLine2="                                                           ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1047"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void postOnAnimationDelayed(@NonNull View view, Runnable action,"
        errorLine2="                                                                  ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1068"
            column="67"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            Bundle arguments) {"
        errorLine2="            ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1191"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void enableAccessibleClickableSpanSupport(View view) {"
        errorLine2="                                                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1397"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static AccessibilityNodeProviderCompat getAccessibilityNodeProvider(@NonNull View view) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1426"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getAlpha(View view) {"
        errorLine2="                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1446"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setLayerType(View view, @LayerType int layerType, Paint paint) {"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1485"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setLayerType(View view, @LayerType int layerType, Paint paint) {"
        errorLine2="                                                                         ~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1485"
            column="74"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getLayerType(View view) {"
        errorLine2="                                   ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1509"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setLayerPaint(@NonNull View view, Paint paint) {"
        errorLine2="                                                         ~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1571"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ViewParent getParentForAccessibility(@NonNull View view) {"
        errorLine2="                  ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1632"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isOpaque(View view) {"
        errorLine2="                                   ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1676"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getMeasuredWidthAndState(View view) {"
        errorLine2="                                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1713"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getMeasuredHeightAndState(View view) {"
        errorLine2="                                                ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1730"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getMeasuredState(View view) {"
        errorLine2="                                       ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1744"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getTranslationX(View view) {"
        errorLine2="                                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1936"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getTranslationY(View view) {"
        errorLine2="                                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1950"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static Matrix getMatrix(View view) {"
        errorLine2="                                   ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="1972"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setTranslationX(View view, float value) {"
        errorLine2="                                       ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2074"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setTranslationY(View view, float value) {"
        errorLine2="                                       ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2091"
            column="40"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setAlpha(View view, @FloatRange(from=0.0, to=1.0) float value) {"
        errorLine2="                                ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2108"
            column="33"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setX(View view, float value) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2123"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setY(View view, float value) {"
        errorLine2="                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2138"
            column="29"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setRotation(View view, float value) {"
        errorLine2="                                   ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2151"
            column="36"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setRotationX(View view, float value) {"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2165"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setRotationY(View view, float value) {"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2179"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setScaleX(View view, float value) {"
        errorLine2="                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2192"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setScaleY(View view, float value) {"
        errorLine2="                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2205"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getPivotX(View view) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2216"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setPivotX(View view, float value) {"
        errorLine2="                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2232"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getPivotY(View view) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2245"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setPivotY(View view, float value) {"
        errorLine2="                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2261"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getRotation(View view) {"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2269"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getRotationX(View view) {"
        errorLine2="                                     ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2277"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getRotationY(View view) {"
        errorLine2="                                     ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2285"
            column="38"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getScaleX(View view) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2293"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getScaleY(View view) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2301"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getX(View view) {"
        errorLine2="                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2309"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static float getY(View view) {"
        errorLine2="                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2317"
            column="30"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setTransitionName(@NonNull View view, String transitionName) {"
        errorLine2="                                                             ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2370"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setChildrenDrawingOrderEnabled(ViewGroup viewGroup, boolean enabled) {"
        errorLine2="                                                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2436"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setFitsSystemWindows(View view, boolean fitSystemWindows) {"
        errorLine2="                                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2477"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void jumpDrawablesToCurrentState(View v) {"
        errorLine2="                                                   ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2491"
            column="52"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setSaveFromParentEnabled(View v, boolean enabled) {"
        errorLine2="                                                ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2655"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setActivated(View view, boolean activated) {"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2671"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static ColorStateList getBackgroundTintList(@NonNull View view) {"
        errorLine2="                  ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2729"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setBackgroundTintList(@NonNull View view, ColorStateList tintList) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2745"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static PorterDuff.Mode getBackgroundTintMode(@NonNull View view) {"
        errorLine2="                  ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2774"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setBackgroundTintMode(@NonNull View view, PorterDuff.Mode mode) {"
        errorLine2="                                                                 ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="2792"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setClipBounds(@NonNull View view, Rect clipBounds) {"
        errorLine2="                                                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3440"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setPointerIcon(@NonNull View view, PointerIconCompat pointerIcon) {"
        errorLine2="                                                          ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3558"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean startDragAndDrop(@NonNull View v, ClipData data,"
        errorLine2="                                                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3606"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            View.DragShadowBuilder shadowBuilder, Object localState, int flags) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3607"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            View.DragShadowBuilder shadowBuilder, Object localState, int flags) {"
        errorLine2="                                                  ~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3607"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void updateDragShadow(@NonNull View v, View.DragShadowBuilder shadowBuilder) {"
        errorLine2="                                                         ~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3627"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static View keyboardNavigationClusterSearch(@NonNull View view, View currentCluster,"
        errorLine2="                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3730"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static View keyboardNavigationClusterSearch(@NonNull View view, View currentCluster,"
        errorLine2="                                                                           ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3730"
            column="76"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean onUnhandledKeyEvent(View v, KeyEvent event);"
        errorLine2="                                    ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3923"
            column="37"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="        boolean onUnhandledKeyEvent(View v, KeyEvent event);"
        errorLine2="                                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3923"
            column="45"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setScreenReaderFocusable(View view, boolean screenReaderFocusable) {"
        errorLine2="                                                ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3959"
            column="49"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isScreenReaderFocusable(View view) {"
        errorLine2="                                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="3978"
            column="51"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setAccessibilityPaneTitle(View view, CharSequence accessibilityPaneTitle) {"
        errorLine2="                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4025"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setAccessibilityPaneTitle(View view, CharSequence accessibilityPaneTitle) {"
        errorLine2="                                                            ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4025"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CharSequence getAccessibilityPaneTitle(View view) {"
        errorLine2="                  ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4051"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static CharSequence getAccessibilityPaneTitle(View view) {"
        errorLine2="                                                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4051"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean isAccessibilityHeading(View view) {"
        errorLine2="                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4114"
            column="50"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setAccessibilityHeading(View view, boolean isHeading) {"
        errorLine2="                                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewCompat.java"
            line="4131"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getScaledPagingTouchSlop(ViewConfiguration config) {"
        errorLine2="                                               ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewConfigurationCompat.java"
            line="56"
            column="48"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean hasPermanentMenuKey(ViewConfiguration config) {"
        errorLine2="                                              ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewConfigurationCompat.java"
            line="67"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static int getScaledHoverSlop(ViewConfiguration config) {"
        errorLine2="                                         ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewConfigurationCompat.java"
            line="127"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean shouldShowMenuShortcutsWhenKeyboardPresent(ViewConfiguration config,"
        errorLine2="                                                                     ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewConfigurationCompat.java"
            line="139"
            column="70"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onRequestSendAccessibilityEvent(ViewGroup group, View child,"
        errorLine2="                                                          ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="73"
            column="59"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onRequestSendAccessibilityEvent(ViewGroup group, View child,"
        errorLine2="                                                                           ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="73"
            column="76"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            AccessibilityEvent event) {"
        errorLine2="            ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="74"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void setMotionEventSplittingEnabled(ViewGroup group, boolean split) {"
        errorLine2="                                                      ~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewGroupCompat.java"
            line="97"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            ViewParent parent, View child, AccessibilityEvent event) {"
        errorLine2="            ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="65"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            ViewParent parent, View child, AccessibilityEvent event) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="65"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            ViewParent parent, View child, AccessibilityEvent event) {"
        errorLine2="                                           ~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="65"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onStartNestedScroll(ViewParent parent, View child, View target,"
        errorLine2="                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="83"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onStartNestedScroll(ViewParent parent, View child, View target,"
        errorLine2="                                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="83"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onStartNestedScroll(ViewParent parent, View child, View target,"
        errorLine2="                                                                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="83"
            column="78"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScrollAccepted(ViewParent parent, View child, View target,"
        errorLine2="                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="100"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScrollAccepted(ViewParent parent, View child, View target,"
        errorLine2="                                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="100"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScrollAccepted(ViewParent parent, View child, View target,"
        errorLine2="                                                                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="100"
            column="78"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onStopNestedScroll(ViewParent parent, View target) {"
        errorLine2="                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="113"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onStopNestedScroll(ViewParent parent, View target) {"
        errorLine2="                                                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="113"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScroll(ViewParent parent, View target, int dxConsumed,"
        errorLine2="                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="130"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScroll(ViewParent parent, View target, int dxConsumed,"
        errorLine2="                                                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="130"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScroll(ViewParent parent, View target, int dxConsumed,"
        errorLine2="                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="158"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScroll(ViewParent parent, View target, int dxConsumed,"
        errorLine2="                                                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="158"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedPreScroll(ViewParent parent, View target, int dx, int dy,"
        errorLine2="                                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="176"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedPreScroll(ViewParent parent, View target, int dx, int dy,"
        errorLine2="                                                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="176"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int[] consumed) {"
        errorLine2="            ~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="177"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onStartNestedScroll(ViewParent parent, View child, View target,"
        errorLine2="                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="205"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onStartNestedScroll(ViewParent parent, View child, View target,"
        errorLine2="                                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="205"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onStartNestedScroll(ViewParent parent, View child, View target,"
        errorLine2="                                                                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="205"
            column="78"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScrollAccepted(ViewParent parent, View child, View target,"
        errorLine2="                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="246"
            column="47"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScrollAccepted(ViewParent parent, View child, View target,"
        errorLine2="                                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="246"
            column="66"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScrollAccepted(ViewParent parent, View child, View target,"
        errorLine2="                                                                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="246"
            column="78"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onStopNestedScroll(ViewParent parent, View target, int type) {"
        errorLine2="                                          ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="281"
            column="43"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onStopNestedScroll(ViewParent parent, View target, int type) {"
        errorLine2="                                                             ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="281"
            column="62"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScroll(ViewParent parent, View target, int dxConsumed,"
        errorLine2="                                      ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="325"
            column="39"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedScroll(ViewParent parent, View target, int dxConsumed,"
        errorLine2="                                                         ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="325"
            column="58"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedPreScroll(ViewParent parent, View target, int dx, int dy,"
        errorLine2="                                         ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="382"
            column="42"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void onNestedPreScroll(ViewParent parent, View target, int dx, int dy,"
        errorLine2="                                                            ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="382"
            column="61"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            int[] consumed, int type) {"
        errorLine2="            ~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="383"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onNestedFling(ViewParent parent, View target, float velocityX,"
        errorLine2="                                        ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="422"
            column="41"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onNestedFling(ViewParent parent, View target, float velocityX,"
        errorLine2="                                                           ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="422"
            column="60"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onNestedPreFling(ViewParent parent, View target, float velocityX,"
        errorLine2="                                           ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="459"
            column="44"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static boolean onNestedPreFling(ViewParent parent, View target, float velocityX,"
        errorLine2="                                                              ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="459"
            column="63"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void notifySubtreeAccessibilityStateChanged(ViewParent parent, View child,"
        errorLine2="                                                              ~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="490"
            column="63"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public static void notifySubtreeAccessibilityStateChanged(ViewParent parent, View child,"
        errorLine2="                                                                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="490"
            column="82"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            View source, int changeType) {"
        errorLine2="            ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewParentCompat.java"
            line="491"
            column="13"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat setDuration(long value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="121"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat alpha(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="136"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat alphaBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="151"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat translationX(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="166"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat translationY(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="181"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat withEndAction(Runnable runnable) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="214"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat withEndAction(Runnable runnable) {"
        errorLine2="                                                    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="214"
            column="53"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat setInterpolator(Interpolator value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="252"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat setInterpolator(Interpolator value) {"
        errorLine2="                                                      ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="252"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public Interpolator getInterpolator() {"
        errorLine2="           ~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="265"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat setStartDelay(long value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="284"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat rotation(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="316"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat rotationBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="331"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat rotationX(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="346"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat rotationXBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="361"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat rotationY(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="376"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat rotationYBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="391"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat scaleX(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="406"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat scaleXBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="421"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat scaleY(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="436"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat scaleYBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="451"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat x(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="476"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat xBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="491"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat y(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="506"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat yBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="521"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat translationXBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="536"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat translationYBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="551"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat translationZBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="568"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat translationZ(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="587"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat z(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="606"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat zBy(float value) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="625"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat withLayer() {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="678"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat withStartAction(Runnable runnable) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="706"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat withStartAction(Runnable runnable) {"
        errorLine2="                                                      ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="706"
            column="55"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat setListener(final ViewPropertyAnimatorListener listener) {"
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="727"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat setListener(final ViewPropertyAnimatorListener listener) {"
        errorLine2="                                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="727"
            column="57"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public ViewPropertyAnimatorCompat setUpdateListener("
        errorLine2="           ~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="773"
            column="12"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="            final ViewPropertyAnimatorUpdateListener listener) {"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorCompat.java"
            line="774"
            column="19"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onAnimationStart(View view);"
        errorLine2="                          ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorListener.java"
            line="32"
            column="27"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onAnimationEnd(View view);"
        errorLine2="                        ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorListener.java"
            line="40"
            column="25"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onAnimationCancel(View view);"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorListener.java"
            line="48"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onAnimationStart(View view) {"
        errorLine2="                                 ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorListenerAdapter.java"
            line="33"
            column="34"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onAnimationEnd(View view) {"
        errorLine2="                               ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorListenerAdapter.java"
            line="40"
            column="32"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    public void onAnimationCancel(View view) {"
        errorLine2="                                  ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorListenerAdapter.java"
            line="47"
            column="35"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void onAnimationUpdate(View view);"
        errorLine2="                           ~~~~">
        <location
            file="src/main/java/androidx/core/view/ViewPropertyAnimatorUpdateListener.java"
            line="34"
            column="28"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    Drawable getWrappedDrawable();"
        errorLine2="    ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/WrappedDrawable.java"
            line="33"
            column="5"/>
    </issue>

    <issue
        id="UnknownNullness"
        message="Unknown nullability; explicitly declare as `@Nullable` or `@NonNull` to improve Kotlin interoperability; see https://android.github.io/kotlin-guides/interop.html#nullability-annotations"
        errorLine1="    void setWrappedDrawable(Drawable drawable);"
        errorLine2="                            ~~~~~~~~">
        <location
            file="src/main/java/androidx/core/graphics/drawable/WrappedDrawable.java"
            line="34"
            column="29"/>
    </issue>

</issues>
