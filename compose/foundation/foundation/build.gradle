/*
 * Copyright 2019 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.LibraryGroups
import androidx.build.LibraryVersions
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static androidx.build.dependencies.DependenciesKt.*

plugins {
    id("AndroidXPlugin")
    id("com.android.library")
    id("AndroidXUiPlugin")
    id("kotlin-multiplatform")
}

dependencies {
    kotlinPlugin project(path: ":compose:compose-compiler")
}

kotlin {
    android()
    jvm("desktop")

    sourceSets {
        commonMain.dependencies {
            implementation(KOTLIN_STDLIB_COMMON)
            api project(':compose:runtime:runtime')
            api project(':compose:ui:ui')
            api project(':compose:animation:animation')
            implementation project(':compose:foundation:foundation-layout')
            api project(':compose:runtime:runtime-saved-instance-state')
            implementation project(':compose:ui:ui-text')
            implementation project(':compose:foundation:foundation-text')
            implementation project(':compose:ui:ui-util')
        }
        androidMain.dependencies {
            api "androidx.annotation:annotation:1.1.0"
        }

        desktopMain.dependencies {
            implementation(KOTLIN_STDLIB)
            implementation(SKIKO)
        }

        androidTest.dependencies {
            implementation(ANDROIDX_TEST_RULES)
            implementation(ANDROIDX_TEST_RUNNER)
            implementation(JUNIT)
        }

        androidAndroidTest.dependencies {
            implementation project(':ui:ui-test')

            implementation(ANDROIDX_TEST_UIAUTOMATOR)
            implementation(ANDROIDX_TEST_RULES)
            implementation(ANDROIDX_TEST_RUNNER)
            implementation(ESPRESSO_CORE)
            implementation(JUNIT)
            implementation(TRUTH)
            implementation(DEXMAKER_MOCKITO, libs.exclude_bytebuddy) // DexMaker has it"s own
            // MockMaker
            implementation(MOCKITO_CORE, libs.exclude_bytebuddy) // DexMaker has it"s own MockMaker
            implementation MOCKITO_KOTLIN, {
                exclude group: 'org.mockito' // to keep control on the mockito version
            }
        }
    }
}

androidx {
    name = "Compose Foundation"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenVersion = LibraryVersions.UI
    mavenGroup = LibraryGroups.Compose.FOUNDATION
    inceptionYear = "2018"
    description = "Higher level abstractions of the Compose UI primitives. This library is design system agnostic, providing the high-level building blocks for both application and design-system developers"
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        useIR = true
        freeCompilerArgs += ["-XXLanguage:+InlineClasses"]
    }
}
