// Signature format: 3.0
package androidx.compose.foundation.text {

  public final class CoreTextFieldKt {
    method @androidx.compose.runtime.Composable public static void CoreTextField(androidx.compose.ui.text.input.TextFieldValue value, androidx.compose.ui.Modifier modifier = Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.TextFieldValue,kotlin.Unit> onValueChange, androidx.compose.ui.text.TextStyle textStyle = TextStyle.Default, androidx.compose.ui.text.input.KeyboardType keyboardType = KeyboardType.Text, androidx.compose.ui.text.input.ImeAction imeAction = ImeAction.Unspecified, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.ImeAction,kotlin.Unit> onImeActionPerformed = {}, androidx.compose.ui.text.input.VisualTransformation visualTransformation = VisualTransformation.None, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout = {}, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.SoftwareKeyboardController,kotlin.Unit> onTextInputStarted = {});
  }

  public final class CoreTextKt {
    method @androidx.compose.runtime.Composable public static void CoreText(androidx.compose.ui.text.AnnotatedString text, androidx.compose.ui.Modifier modifier = Modifier, androidx.compose.ui.text.TextStyle style, boolean softWrap, androidx.compose.ui.text.style.TextOverflow overflow, int maxLines, java.util.Map<java.lang.String,androidx.compose.foundation.text.InlineTextContent> inlineContent, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.TextLayoutResult,kotlin.Unit> onTextLayout);
    method public static androidx.compose.ui.HorizontalAlignmentLine getFirstBaseline();
    method public static androidx.compose.ui.HorizontalAlignmentLine getLastBaseline();
  }

  @androidx.compose.runtime.Immutable public final class InlineTextContent {
    ctor public InlineTextContent(androidx.compose.ui.text.Placeholder placeholder, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> children);
    method public androidx.compose.ui.text.Placeholder component1();
    method public kotlin.jvm.functions.Function1<java.lang.String,kotlin.Unit> component2();
    method @androidx.compose.runtime.Immutable public androidx.compose.foundation.text.InlineTextContent copy(androidx.compose.ui.text.Placeholder placeholder, kotlin.jvm.functions.Function1<? super java.lang.String,kotlin.Unit> children);
    method public kotlin.jvm.functions.Function1<java.lang.String,kotlin.Unit> getChildren();
    method public androidx.compose.ui.text.Placeholder getPlaceholder();
  }

  public final class InlineTextContentKt {
    method public static void appendInlineContent(androidx.compose.ui.text.AnnotatedString.Builder, String id, String alternateText = "\ufffd");
  }

  public final class TextFieldDelegateKt {
  }

  public final class TextSemanticsProperties {
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.input.ImeAction> getImeAction();
    method public androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> getSupportsInputMethods();
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<androidx.compose.ui.text.input.ImeAction> ImeAction;
    property public final androidx.compose.ui.semantics.SemanticsPropertyKey<kotlin.Unit> SupportsInputMethods;
    field public static final androidx.compose.foundation.text.TextSemanticsProperties INSTANCE;
  }

  public final class TextSemanticsPropertiesKt {
    method public static androidx.compose.ui.text.input.ImeAction getImeAction(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
    method public static void setImeAction(androidx.compose.ui.semantics.SemanticsPropertyReceiver, androidx.compose.ui.text.input.ImeAction p);
    method public static void supportsInputMethods(androidx.compose.ui.semantics.SemanticsPropertyReceiver);
  }

}

package androidx.compose.foundation.text.selection {

  public final class MultiWidgetSelectionDelegateKt {
  }

  public final class TextFieldSelectionDelegateKt {
  }

  public final class TextFieldSelectionManagerKt {
  }

  public final class TextSelectionDelegateKt {
  }

}

