// Signature format: 3.0
package androidx.compose.foundation.layout {

  @androidx.compose.runtime.Immutable public final class AbsoluteArrangement {
    method public androidx.compose.foundation.layout.Arrangement.Horizontal aligned(androidx.compose.ui.Alignment.Horizontal alignment);
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getCenter();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getLeft();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getRight();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getSpaceAround();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getSpaceBetween();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getSpaceEvenly();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical spacedBy-0680j_4(float space);
    method public androidx.compose.foundation.layout.Arrangement.Vertical spacedBy-6mHxxJo(float space, androidx.compose.ui.Alignment.Vertical alignment);
    method public androidx.compose.foundation.layout.Arrangement.Horizontal spacedBy-w0p642k(float space, androidx.compose.ui.Alignment.Horizontal alignment);
    property public final androidx.compose.foundation.layout.Arrangement.Horizontal Center;
    property public final androidx.compose.foundation.layout.Arrangement.Horizontal Left;
    property public final androidx.compose.foundation.layout.Arrangement.Horizontal Right;
    property public final androidx.compose.foundation.layout.Arrangement.Horizontal SpaceAround;
    property public final androidx.compose.foundation.layout.Arrangement.Horizontal SpaceBetween;
    property public final androidx.compose.foundation.layout.Arrangement.Horizontal SpaceEvenly;
    field public static final androidx.compose.foundation.layout.AbsoluteArrangement INSTANCE;
  }

  public final class AlignmentLineKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier relativePaddingFrom-7P-br3g(androidx.compose.ui.Modifier, androidx.compose.ui.AlignmentLine alignmentLine, float before = Dp.Unspecified, float after = Dp.Unspecified);
  }

  @androidx.compose.runtime.Immutable public final class Arrangement {
    method public androidx.compose.foundation.layout.Arrangement.Horizontal aligned(androidx.compose.ui.Alignment.Horizontal alignment);
    method public androidx.compose.foundation.layout.Arrangement.Vertical aligned(androidx.compose.ui.Alignment.Vertical alignment);
    method public androidx.compose.foundation.layout.Arrangement.Vertical getBottom();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical getCenter();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getEnd();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical getSpaceAround();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical getSpaceBetween();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical getSpaceEvenly();
    method public androidx.compose.foundation.layout.Arrangement.Horizontal getStart();
    method public androidx.compose.foundation.layout.Arrangement.Vertical getTop();
    method public androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical spacedBy-0680j_4(float space);
    method public androidx.compose.foundation.layout.Arrangement.Vertical spacedBy-6mHxxJo(float space, androidx.compose.ui.Alignment.Vertical alignment);
    method public androidx.compose.foundation.layout.Arrangement.Horizontal spacedBy-w0p642k(float space, androidx.compose.ui.Alignment.Horizontal alignment);
    property public final androidx.compose.foundation.layout.Arrangement.Vertical Bottom;
    property public final androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical Center;
    property public final androidx.compose.foundation.layout.Arrangement.Horizontal End;
    property public final androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical SpaceAround;
    property public final androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical SpaceBetween;
    property public final androidx.compose.foundation.layout.Arrangement.HorizontalOrVertical SpaceEvenly;
    property public final androidx.compose.foundation.layout.Arrangement.Horizontal Start;
    property public final androidx.compose.foundation.layout.Arrangement.Vertical Top;
    field public static final androidx.compose.foundation.layout.Arrangement INSTANCE;
  }

  @androidx.compose.foundation.layout.InternalLayoutApi public static interface Arrangement.Horizontal {
    method public void arrange(int totalSize, java.util.List<java.lang.Integer> size, androidx.compose.ui.unit.LayoutDirection layoutDirection, androidx.compose.ui.unit.Density density, java.util.List<java.lang.Integer> outPosition);
    method @Deprecated public default java.util.List<java.lang.Integer> arrange(int totalSize, java.util.List<java.lang.Integer> size, androidx.compose.ui.unit.LayoutDirection layoutDirection);
    method public default float getSpacing();
    property public default float spacing;
  }

  @androidx.compose.foundation.layout.InternalLayoutApi public static interface Arrangement.HorizontalOrVertical extends androidx.compose.foundation.layout.Arrangement.Horizontal androidx.compose.foundation.layout.Arrangement.Vertical {
    property public default float spacing;
  }

  @androidx.compose.foundation.layout.InternalLayoutApi public static interface Arrangement.Vertical {
    method public void arrange(int totalSize, java.util.List<java.lang.Integer> size, androidx.compose.ui.unit.Density density, java.util.List<java.lang.Integer> outPosition);
    method @Deprecated public default java.util.List<java.lang.Integer> arrange(int totalSize, java.util.List<java.lang.Integer> size);
    method public default float getSpacing();
    property public default float spacing;
  }

  public final class ChainStyle {
    field public static final androidx.compose.foundation.layout.ChainStyle.Companion Companion;
  }

  public static final class ChainStyle.Companion {
    method public androidx.compose.foundation.layout.ChainStyle Packed(float bias);
    method public androidx.compose.foundation.layout.ChainStyle getPacked();
    method public androidx.compose.foundation.layout.ChainStyle getSpread();
    method public androidx.compose.foundation.layout.ChainStyle getSpreadInside();
    property public final androidx.compose.foundation.layout.ChainStyle Packed;
    property public final androidx.compose.foundation.layout.ChainStyle Spread;
    property public final androidx.compose.foundation.layout.ChainStyle SpreadInside;
  }

  public final class ColumnKt {
    method @androidx.compose.runtime.Composable public static inline void Column(androidx.compose.ui.Modifier modifier = Modifier, androidx.compose.foundation.layout.Arrangement.Vertical verticalArrangement = Arrangement.Top, androidx.compose.ui.Alignment.Horizontal horizontalGravity = Alignment.Start, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ColumnScope,kotlin.Unit> children);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Immutable public final class ColumnScope {
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignWithSiblings(androidx.compose.ui.Modifier, androidx.compose.ui.VerticalAlignmentLine alignmentLine);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignWithSiblings(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.layout.Measured,java.lang.Integer> alignmentLineBlock);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier gravity(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment.Horizontal align);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier weight(androidx.compose.ui.Modifier, @FloatRange(from=0.0, to=3.4E38, fromInclusive=false) float weight, boolean fill = true);
    field public static final androidx.compose.foundation.layout.ColumnScope INSTANCE;
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker public final class ConstrainScope {
    method public void centerAround(androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor anchor);
    method public void centerAround(androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor anchor);
    method public void centerHorizontallyTo(androidx.compose.foundation.layout.ConstrainedLayoutReference other);
    method public void centerTo(androidx.compose.foundation.layout.ConstrainedLayoutReference other);
    method public void centerVerticallyTo(androidx.compose.foundation.layout.ConstrainedLayoutReference other);
    method public androidx.compose.foundation.layout.ConstrainScope.VerticalAnchorable getAbsoluteLeft();
    method public androidx.compose.foundation.layout.ConstrainScope.VerticalAnchorable getAbsoluteRight();
    method public androidx.compose.foundation.layout.ConstrainScope.BaselineAnchorable getBaseline();
    method public androidx.compose.foundation.layout.ConstrainScope.HorizontalAnchorable getBottom();
    method public androidx.compose.foundation.layout.ConstrainScope.VerticalAnchorable getEnd();
    method public androidx.compose.foundation.layout.Dimension getHeight();
    method public androidx.compose.foundation.layout.ConstrainedLayoutReference getParent();
    method public androidx.compose.foundation.layout.ConstrainScope.VerticalAnchorable getStart();
    method public androidx.compose.foundation.layout.ConstrainScope.HorizontalAnchorable getTop();
    method public androidx.compose.foundation.layout.Dimension getWidth();
    method public void linkTo-6izaRyI(androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor start, androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor top, androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor end, androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor bottom, float startMargin = 0.dp, float topMargin = 0.dp, float endMargin = 0.dp, float bottomMargin = 0.dp, @FloatRange(from=0.0, to=1.0) float horizontalBias = 0.5f, @FloatRange(from=0.0, to=1.0) float verticalBias = 0.5f);
    method public void linkTo-KSLczBc(androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor top, androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor bottom, float topMargin = 0.dp, float bottomMargin = 0.dp, @FloatRange(from=0.0, to=1.0) float bias = 0.5f);
    method public void linkTo-tOGOrBo(androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor start, androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor end, float startMargin = 0.dp, float endMargin = 0.dp, @FloatRange(from=0.0, to=1.0) float bias = 0.5f);
    method public void setHeight(androidx.compose.foundation.layout.Dimension value);
    method public void setWidth(androidx.compose.foundation.layout.Dimension value);
    property public final androidx.compose.foundation.layout.ConstrainScope.VerticalAnchorable absoluteLeft;
    property public final androidx.compose.foundation.layout.ConstrainScope.VerticalAnchorable absoluteRight;
    property public final androidx.compose.foundation.layout.ConstrainScope.BaselineAnchorable baseline;
    property public final androidx.compose.foundation.layout.ConstrainScope.HorizontalAnchorable bottom;
    property public final androidx.compose.foundation.layout.ConstrainScope.VerticalAnchorable end;
    property public final androidx.compose.foundation.layout.Dimension height;
    property public final androidx.compose.foundation.layout.ConstrainedLayoutReference parent;
    property public final androidx.compose.foundation.layout.ConstrainScope.VerticalAnchorable start;
    property public final androidx.compose.foundation.layout.ConstrainScope.HorizontalAnchorable top;
    property public final androidx.compose.foundation.layout.Dimension width;
  }

  public final class ConstrainScope.BaselineAnchorable {
    method public void linkTo-CqewBRU(androidx.compose.foundation.layout.ConstraintLayoutBaseScope.BaselineAnchor anchor, float margin = 0.dp);
  }

  public final class ConstrainScope.HorizontalAnchorable {
    method public void linkTo-TilihPk(androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor anchor, float margin = 0.dp);
  }

  public final class ConstrainScope.VerticalAnchorable {
    method public void linkTo-n6KZxjU(androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor anchor, float margin = 0.dp);
  }

  public final class ConstrainedLayoutReference {
    ctor public ConstrainedLayoutReference(Object id);
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor getAbsoluteLeft();
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor getAbsoluteRight();
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.BaselineAnchor getBaseline();
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor getBottom();
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor getEnd();
    method public Object getId();
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor getStart();
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor getTop();
    property public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor absoluteLeft;
    property public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor absoluteRight;
    property public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.BaselineAnchor baseline;
    property public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor bottom;
    property public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor end;
    property public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor start;
    property public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor top;
  }

  public abstract class ConstraintLayoutBaseScope {
    ctor public ConstraintLayoutBaseScope();
    method public final void applyTo(androidx.compose.foundation.layout.State state);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createAbsoluteLeftBarrier-GB4eHDc(androidx.compose.foundation.layout.ConstrainedLayoutReference![] elements, float margin = 0.dp);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createAbsoluteRightBarrier-GB4eHDc(androidx.compose.foundation.layout.ConstrainedLayoutReference![] elements, float margin = 0.dp);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor createBottomBarrier-GB4eHDc(androidx.compose.foundation.layout.ConstrainedLayoutReference![] elements, float margin = 0.dp);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createEndBarrier-GB4eHDc(androidx.compose.foundation.layout.ConstrainedLayoutReference![] elements, float margin = 0.dp);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createGuidelineFromAbsoluteLeft(float fraction);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createGuidelineFromAbsoluteLeft-0680j_4(float offset);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createGuidelineFromAbsoluteRight(float fraction);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createGuidelineFromAbsoluteRight-0680j_4(float offset);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor createGuidelineFromBottom(float fraction);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor createGuidelineFromBottom-0680j_4(float offset);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createGuidelineFromEnd(float fraction);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createGuidelineFromEnd-0680j_4(float offset);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createGuidelineFromStart(float fraction);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createGuidelineFromStart-0680j_4(float offset);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor createGuidelineFromTop(float fraction);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor createGuidelineFromTop-0680j_4(float offset);
    method public final void createHorizontalChain(androidx.compose.foundation.layout.ConstrainedLayoutReference![] elements, androidx.compose.foundation.layout.ChainStyle chainStyle = ChainStyle.Spread);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor createStartBarrier-GB4eHDc(androidx.compose.foundation.layout.ConstrainedLayoutReference![] elements, float margin = 0.dp);
    method public final androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor createTopBarrier-GB4eHDc(androidx.compose.foundation.layout.ConstrainedLayoutReference![] elements, float margin = 0.dp);
    method public final void createVerticalChain(androidx.compose.foundation.layout.ConstrainedLayoutReference![] elements, androidx.compose.foundation.layout.ChainStyle chainStyle = ChainStyle.Spread);
    method protected final java.util.List<kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.State,kotlin.Unit>> getTasks();
    method public final void reset();
    property protected final java.util.List<kotlin.jvm.functions.Function1<androidx.compose.foundation.layout.State,kotlin.Unit>> tasks;
  }

  public static final class ConstraintLayoutBaseScope.BaselineAnchor {
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.BaselineAnchor copy(Object id);
  }

  public static final class ConstraintLayoutBaseScope.HorizontalAnchor {
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.HorizontalAnchor copy(Object id, int index);
  }

  public static final class ConstraintLayoutBaseScope.VerticalAnchor {
    method public androidx.compose.foundation.layout.ConstraintLayoutBaseScope.VerticalAnchor copy(Object id, int index);
  }

  public final class ConstraintLayoutKt {
    method @androidx.compose.runtime.Composable public static void ConstraintLayout(androidx.compose.ui.Modifier modifier = Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ConstraintLayoutScope,kotlin.Unit> children);
    method @androidx.compose.runtime.Composable public static void ConstraintLayout(androidx.compose.foundation.layout.ConstraintSet constraintSet, androidx.compose.ui.Modifier modifier = Modifier, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method public static androidx.compose.foundation.layout.ConstraintSet ConstraintSet(kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ConstraintSetScope,kotlin.Unit> description);
    method public static androidx.compose.foundation.layout.Dimension.MaxCoercible atLeast-mVwPmw8(androidx.compose.foundation.layout.Dimension.Coercible, float dp);
    method public static androidx.compose.foundation.layout.Dimension atLeastWrapContent-wkvWzeM(androidx.compose.foundation.layout.Dimension.MinCoercible, float dp);
    method public static androidx.compose.foundation.layout.Dimension atMost-abS_yDw(androidx.compose.foundation.layout.Dimension.MaxCoercible, float dp);
    method public static androidx.compose.foundation.layout.Dimension.MinCoercible atMost-mVwPmw8(androidx.compose.foundation.layout.Dimension.Coercible, float dp);
    method public static androidx.compose.foundation.layout.Dimension.MaxCoercible getAtLeastWrapContent(androidx.compose.foundation.layout.Dimension.Coercible);
    method public static androidx.compose.foundation.layout.Dimension getAtLeastWrapContent(androidx.compose.foundation.layout.Dimension.MinCoercible);
    method public static androidx.compose.foundation.layout.Dimension.MinCoercible getAtMostWrapContent(androidx.compose.foundation.layout.Dimension.Coercible);
    method public static androidx.compose.foundation.layout.Dimension getAtMostWrapContent(androidx.compose.foundation.layout.Dimension.MaxCoercible);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker public final class ConstraintLayoutScope extends androidx.compose.foundation.layout.ConstraintLayoutBaseScope {
    method public androidx.compose.ui.Modifier constrainAs(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.ConstrainedLayoutReference ref, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ConstrainScope,kotlin.Unit> constrainBlock);
    method public androidx.compose.foundation.layout.ConstrainedLayoutReference createRef();
    method public androidx.compose.foundation.layout.ConstraintLayoutScope.ConstrainedLayoutReferences createRefs();
  }

  public final class ConstraintLayoutScope.ConstrainedLayoutReferences {
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component1();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component10();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component11();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component12();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component13();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component14();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component15();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component16();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component2();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component3();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component4();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component5();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component6();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component7();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component8();
    method public operator androidx.compose.foundation.layout.ConstrainedLayoutReference component9();
  }

  @androidx.compose.runtime.Immutable public interface ConstraintSet {
    method public void applyTo(androidx.compose.foundation.layout.State state, java.util.List<? extends androidx.compose.ui.Measurable> measurables);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker public final class ConstraintSetScope extends androidx.compose.foundation.layout.ConstraintLayoutBaseScope {
    method public androidx.compose.foundation.layout.ConstrainScope constrain(androidx.compose.foundation.layout.ConstrainedLayoutReference ref, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.ConstrainScope,kotlin.Unit> constrainBlock);
    method public androidx.compose.foundation.layout.ConstrainedLayoutReference createRefFor(Object id);
  }

  @androidx.compose.runtime.Immutable public abstract sealed class CrossAxisAlignment {
    field public static final androidx.compose.foundation.layout.CrossAxisAlignment.Companion Companion;
  }

  public static final class CrossAxisAlignment.Companion {
    method public androidx.compose.foundation.layout.CrossAxisAlignment AlignmentLine(androidx.compose.ui.AlignmentLine alignmentLine);
    method public androidx.compose.foundation.layout.CrossAxisAlignment getCenter();
    method public androidx.compose.foundation.layout.CrossAxisAlignment getEnd();
    method public androidx.compose.foundation.layout.CrossAxisAlignment getStart();
    property public final androidx.compose.foundation.layout.CrossAxisAlignment Center;
    property public final androidx.compose.foundation.layout.CrossAxisAlignment End;
    property public final androidx.compose.foundation.layout.CrossAxisAlignment Start;
  }

  public interface Dimension {
    field public static final androidx.compose.foundation.layout.Dimension.Companion Companion;
  }

  public static interface Dimension.Coercible extends androidx.compose.foundation.layout.Dimension {
  }

  public static final class Dimension.Companion {
    method public androidx.compose.foundation.layout.Dimension getFillToConstraints();
    method public androidx.compose.foundation.layout.Dimension.Coercible getPreferredWrapContent();
    method public androidx.compose.foundation.layout.Dimension getWrapContent();
    method public androidx.compose.foundation.layout.Dimension percent(float percent);
    method public androidx.compose.foundation.layout.Dimension.Coercible preferredValue-0680j_4(float dp);
    method public androidx.compose.foundation.layout.Dimension value-0680j_4(float dp);
    property public final androidx.compose.foundation.layout.Dimension fillToConstraints;
    property public final androidx.compose.foundation.layout.Dimension.Coercible preferredWrapContent;
    property public final androidx.compose.foundation.layout.Dimension wrapContent;
  }

  public static interface Dimension.MaxCoercible extends androidx.compose.foundation.layout.Dimension {
  }

  public static interface Dimension.MinCoercible extends androidx.compose.foundation.layout.Dimension {
  }

  @androidx.compose.runtime.Immutable public final class DpConstraints {
    method public float component1();
    method public float component2();
    method public float component3();
    method public float component4();
    method @androidx.compose.runtime.Immutable public androidx.compose.foundation.layout.DpConstraints copy-ZmiikuI(float minWidth, float maxWidth, float minHeight, float maxHeight);
    method public float getMaxHeight();
    method public float getMaxWidth();
    method public float getMinHeight();
    method public float getMinWidth();
    field public static final androidx.compose.foundation.layout.DpConstraints.Companion Companion;
  }

  public static final class DpConstraints.Companion {
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.DpConstraints fixed-ioHfwGI(float width, float height);
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.DpConstraints fixedHeight-0680j_4(float height);
    method @androidx.compose.runtime.Stable public androidx.compose.foundation.layout.DpConstraints fixedWidth-0680j_4(float width);
  }

  public final class DpConstraintsKt {
    method @androidx.compose.runtime.Stable public static long Constraints(androidx.compose.ui.unit.Density, androidx.compose.foundation.layout.DpConstraints dpConstraints);
    method @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.DpConstraints DpConstraints-qRtEn08(androidx.compose.ui.unit.Density, long constraints);
    method @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.DpConstraints enforce(androidx.compose.foundation.layout.DpConstraints, androidx.compose.foundation.layout.DpConstraints otherConstraints);
    method public static boolean getHasBoundedHeight(androidx.compose.foundation.layout.DpConstraints);
    method public static boolean getHasBoundedWidth(androidx.compose.foundation.layout.DpConstraints);
    method public static boolean getHasFixedHeight(androidx.compose.foundation.layout.DpConstraints);
    method public static boolean getHasFixedWidth(androidx.compose.foundation.layout.DpConstraints);
    method public static boolean getSatisfiable(androidx.compose.foundation.layout.DpConstraints);
    method public static boolean isZero(androidx.compose.foundation.layout.DpConstraints);
    method @androidx.compose.runtime.Stable public static androidx.compose.foundation.layout.DpConstraints offset-Dnn0juw(androidx.compose.foundation.layout.DpConstraints, float horizontal = 0.dp, float vertical = 0.dp);
  }

  @kotlin.RequiresOptIn(message="The API of this layout is experimental and is likely to change in the future.") public @interface ExperimentalLayout {
  }

  public enum FlowCrossAxisAlignment {
    method public static androidx.compose.foundation.layout.FlowCrossAxisAlignment valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.foundation.layout.FlowCrossAxisAlignment[] values();
    enum_constant public static final androidx.compose.foundation.layout.FlowCrossAxisAlignment Center;
    enum_constant public static final androidx.compose.foundation.layout.FlowCrossAxisAlignment End;
    enum_constant public static final androidx.compose.foundation.layout.FlowCrossAxisAlignment Start;
  }

  public final class FlowKt {
    method @androidx.compose.foundation.layout.ExperimentalLayout @androidx.compose.runtime.Composable public static void FlowColumn-4CIokMg(androidx.compose.foundation.layout.SizeMode mainAxisSize = androidx.compose.foundation.layout.SizeMode.Wrap, androidx.compose.foundation.layout.MainAxisAlignment mainAxisAlignment = androidx.compose.foundation.layout.MainAxisAlignment.Start, float mainAxisSpacing = 0.dp, androidx.compose.foundation.layout.FlowCrossAxisAlignment crossAxisAlignment = androidx.compose.foundation.layout.FlowCrossAxisAlignment.Start, float crossAxisSpacing = 0.dp, androidx.compose.foundation.layout.MainAxisAlignment lastLineMainAxisAlignment = mainAxisAlignment, kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method @androidx.compose.foundation.layout.ExperimentalLayout @androidx.compose.runtime.Composable public static void FlowRow-4CIokMg(androidx.compose.foundation.layout.SizeMode mainAxisSize = androidx.compose.foundation.layout.SizeMode.Wrap, androidx.compose.foundation.layout.MainAxisAlignment mainAxisAlignment = androidx.compose.foundation.layout.MainAxisAlignment.Start, float mainAxisSpacing = 0.dp, androidx.compose.foundation.layout.FlowCrossAxisAlignment crossAxisAlignment = androidx.compose.foundation.layout.FlowCrossAxisAlignment.Start, float crossAxisSpacing = 0.dp, androidx.compose.foundation.layout.MainAxisAlignment lastLineMainAxisAlignment = mainAxisAlignment, kotlin.jvm.functions.Function0<kotlin.Unit> children);
  }

  @androidx.compose.runtime.Immutable public final class InnerPadding {
    method public float component1();
    method public float component2();
    method public float component3();
    method public float component4();
    method @androidx.compose.runtime.Immutable public androidx.compose.foundation.layout.InnerPadding copy-ZmiikuI(float start, float top, float end, float bottom);
    method public float getBottom();
    method public float getEnd();
    method public float getStart();
    method public float getTop();
  }

  @kotlin.RequiresOptIn(message="This is an internal layout API subject to change and should not be used directly.") public @interface InternalLayoutApi {
  }

  public final class IntrinsicKt {
    method @Deprecated @androidx.compose.runtime.Composable public static void MaxIntrinsicHeight(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method @Deprecated @androidx.compose.runtime.Composable public static void MaxIntrinsicWidth(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method @Deprecated @androidx.compose.runtime.Composable public static void MinIntrinsicHeight(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method @Deprecated @androidx.compose.runtime.Composable public static void MinIntrinsicWidth(kotlin.jvm.functions.Function0<kotlin.Unit> children);
    method @androidx.compose.foundation.layout.ExperimentalLayout @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredHeight(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.IntrinsicSize intrinsicSize);
    method @androidx.compose.foundation.layout.ExperimentalLayout @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredWidth(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.IntrinsicSize intrinsicSize);
  }

  public enum IntrinsicSize {
    method public static androidx.compose.foundation.layout.IntrinsicSize valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.foundation.layout.IntrinsicSize[] values();
    enum_constant public static final androidx.compose.foundation.layout.IntrinsicSize Max;
    enum_constant public static final androidx.compose.foundation.layout.IntrinsicSize Min;
  }

  public final class LayoutAspectRatioKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier aspectRatio(androidx.compose.ui.Modifier, @FloatRange(from=0.0, to=3.4E38, fromInclusive=false) float ratio);
  }

  public final class LayoutOffsetKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier absoluteOffset-S2lCeAQ(androidx.compose.ui.Modifier, float x = 0.dp, float y = 0.dp);
    method public static androidx.compose.ui.Modifier absoluteOffsetPx(androidx.compose.ui.Modifier, androidx.compose.runtime.State<java.lang.Float> x = mutableStateOf(0.0), androidx.compose.runtime.State<java.lang.Float> y = mutableStateOf(0.0));
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier offset-S2lCeAQ(androidx.compose.ui.Modifier, float x = 0.dp, float y = 0.dp);
    method public static androidx.compose.ui.Modifier offsetPx(androidx.compose.ui.Modifier, androidx.compose.runtime.State<java.lang.Float> x = mutableStateOf(0.0), androidx.compose.runtime.State<java.lang.Float> y = mutableStateOf(0.0));
  }

  public final class LayoutPaddingKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier absolutePadding-w2-DAAU(androidx.compose.ui.Modifier, float left = 0.dp, float top = 0.dp, float right = 0.dp, float bottom = 0.dp);
    method public static androidx.compose.ui.Modifier padding(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.InnerPadding padding);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding-S2lCeAQ(androidx.compose.ui.Modifier, float horizontal = 0.dp, float vertical = 0.dp);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding-w2-DAAU(androidx.compose.ui.Modifier, float start = 0.dp, float top = 0.dp, float end = 0.dp, float bottom = 0.dp);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier padding-wxomhCo(androidx.compose.ui.Modifier, float all);
  }

  @kotlin.DslMarker public @interface LayoutScopeMarker {
  }

  public final class LayoutSizeKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier defaultMinSizeConstraints-S2lCeAQ(androidx.compose.ui.Modifier, float minWidth = Dp.Unspecified, float minHeight = Dp.Unspecified);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier fillMaxHeight(androidx.compose.ui.Modifier, @FloatRange(from=0.0, to=1.0) float fraction = 1f);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier fillMaxSize(androidx.compose.ui.Modifier, @FloatRange(from=0.0, to=1.0) float fraction = 1f);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier fillMaxWidth(androidx.compose.ui.Modifier, @FloatRange(from=0.0, to=1.0) float fraction = 1f);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier height-wxomhCo(androidx.compose.ui.Modifier, float height);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier heightIn-S2lCeAQ(androidx.compose.ui.Modifier, float minHeight = Dp.Unspecified, float maxHeight = Dp.Unspecified);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredHeight-wxomhCo(androidx.compose.ui.Modifier, float height);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredHeightIn-S2lCeAQ(androidx.compose.ui.Modifier, float minHeight = Dp.Unspecified, float maxHeight = Dp.Unspecified);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredSize-S2lCeAQ(androidx.compose.ui.Modifier, float width, float height);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredSize-wxomhCo(androidx.compose.ui.Modifier, float size);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredSizeIn(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.DpConstraints constraints);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredSizeIn-w2-DAAU(androidx.compose.ui.Modifier, float minWidth = Dp.Unspecified, float minHeight = Dp.Unspecified, float maxWidth = Dp.Unspecified, float maxHeight = Dp.Unspecified);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredWidth-wxomhCo(androidx.compose.ui.Modifier, float width);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier preferredWidthIn-S2lCeAQ(androidx.compose.ui.Modifier, float minWidth = Dp.Unspecified, float maxWidth = Dp.Unspecified);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier size-S2lCeAQ(androidx.compose.ui.Modifier, float width, float height);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier size-wxomhCo(androidx.compose.ui.Modifier, float size);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier sizeIn(androidx.compose.ui.Modifier, androidx.compose.foundation.layout.DpConstraints constraints);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier sizeIn-w2-DAAU(androidx.compose.ui.Modifier, float minWidth = Dp.Unspecified, float minHeight = Dp.Unspecified, float maxWidth = Dp.Unspecified, float maxHeight = Dp.Unspecified);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier width-wxomhCo(androidx.compose.ui.Modifier, float width);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier widthIn-S2lCeAQ(androidx.compose.ui.Modifier, float minWidth = Dp.Unspecified, float maxWidth = Dp.Unspecified);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier wrapContentHeight(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment.Vertical align = Alignment.CenterVertically);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier wrapContentSize(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment align = Alignment.Center);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.Modifier wrapContentWidth(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment.Horizontal align = Alignment.CenterHorizontally);
  }

  public enum MainAxisAlignment {
    method public static androidx.compose.foundation.layout.MainAxisAlignment valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.foundation.layout.MainAxisAlignment[] values();
    enum_constant public static final androidx.compose.foundation.layout.MainAxisAlignment Center;
    enum_constant public static final androidx.compose.foundation.layout.MainAxisAlignment End;
    enum_constant public static final androidx.compose.foundation.layout.MainAxisAlignment SpaceAround;
    enum_constant public static final androidx.compose.foundation.layout.MainAxisAlignment SpaceBetween;
    enum_constant public static final androidx.compose.foundation.layout.MainAxisAlignment SpaceEvenly;
    enum_constant public static final androidx.compose.foundation.layout.MainAxisAlignment Start;
  }

  public final class RowColumnImplKt {
  }

  public final class RowKt {
    method @androidx.compose.runtime.Composable public static inline void Row(androidx.compose.ui.Modifier modifier = Modifier, androidx.compose.foundation.layout.Arrangement.Horizontal horizontalArrangement = Arrangement.Start, androidx.compose.ui.Alignment.Vertical verticalGravity = Alignment.Top, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.RowScope,kotlin.Unit> children);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Immutable public final class RowScope {
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignWithSiblings(androidx.compose.ui.Modifier, androidx.compose.ui.HorizontalAlignmentLine alignmentLine);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier alignWithSiblings(androidx.compose.ui.Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.ui.layout.Measured,java.lang.Integer> alignmentLineBlock);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier gravity(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment.Vertical align);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier weight(androidx.compose.ui.Modifier, @FloatRange(from=0.0, to=3.4E38, fromInclusive=false) float weight, boolean fill = true);
    field public static final androidx.compose.foundation.layout.RowScope INSTANCE;
  }

  public enum SizeMode {
    method public static androidx.compose.foundation.layout.SizeMode valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.foundation.layout.SizeMode[] values();
    enum_constant public static final androidx.compose.foundation.layout.SizeMode Expand;
    enum_constant public static final androidx.compose.foundation.layout.SizeMode Wrap;
  }

  public final class SpacerKt {
    method @androidx.compose.runtime.Composable public static void Spacer(androidx.compose.ui.Modifier modifier);
  }

  public final class StackKt {
    method @androidx.compose.runtime.Composable public static void Stack(androidx.compose.ui.Modifier modifier = Modifier, kotlin.jvm.functions.Function1<? super androidx.compose.foundation.layout.StackScope,kotlin.Unit> children);
  }

  @androidx.compose.foundation.layout.LayoutScopeMarker @androidx.compose.runtime.Immutable public final class StackScope {
    ctor public StackScope();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier gravity(androidx.compose.ui.Modifier, androidx.compose.ui.Alignment align);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.Modifier matchParentSize(androidx.compose.ui.Modifier);
  }

  public final class State extends androidx.constraintlayout.core.state.State {
    ctor public State(androidx.compose.ui.unit.Density density);
    method public androidx.compose.ui.unit.Density getDensity();
    method public androidx.compose.ui.unit.LayoutDirection getLayoutDirection();
    method public long getRootIncomingConstraints();
    method public void setLayoutDirection(androidx.compose.ui.unit.LayoutDirection p);
    method public void setRootIncomingConstraints-BRTryo0(long p);
    property public final androidx.compose.ui.unit.LayoutDirection layoutDirection;
    property public final long rootIncomingConstraints;
    field public androidx.compose.ui.unit.LayoutDirection layoutDirection;
  }

}

