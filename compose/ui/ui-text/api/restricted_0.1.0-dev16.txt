// Signature format: 3.0
package androidx.compose.ui.text {

  @androidx.compose.runtime.Immutable public final class AnnotatedString {
    ctor public AnnotatedString(String text, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> spanStyles, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.ParagraphStyle>> paragraphStyles);
    method public String component1();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> component2();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.ParagraphStyle>> component3();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.AnnotatedString copy(String text, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> spanStyles, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.ParagraphStyle>> paragraphStyles, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<java.lang.String>> annotations);
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.ParagraphStyle>> getParagraphStyles();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> getSpanStyles();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<java.lang.String>> getStringAnnotations(String tag, int start, int end);
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<java.lang.String>> getStringAnnotations(int start, int end);
    method public String getText();
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.AnnotatedString plus(androidx.compose.ui.text.AnnotatedString other);
  }

  public static final class AnnotatedString.Builder {
    ctor public AnnotatedString.Builder(int capacity);
    ctor public AnnotatedString.Builder();
    ctor public AnnotatedString.Builder(String text);
    ctor public AnnotatedString.Builder(androidx.compose.ui.text.AnnotatedString text);
    method public void addStringAnnotation(String scope, String annotation, int start, int end);
    method public void addStyle(androidx.compose.ui.text.SpanStyle style, int start, int end);
    method public void addStyle(androidx.compose.ui.text.ParagraphStyle style, int start, int end);
    method public void append(String text);
    method public void append(char p);
    method public void append(androidx.compose.ui.text.AnnotatedString text);
    method public int getLength();
    method public void pop();
    method public void pop(int index);
    method public int pushStringAnnotation(String tag, String annotation);
    method public int pushStyle(androidx.compose.ui.text.SpanStyle style);
    method public int pushStyle(androidx.compose.ui.text.ParagraphStyle style);
    method public androidx.compose.ui.text.AnnotatedString toAnnotatedString();
    property public final int length;
  }

  @androidx.compose.runtime.Immutable public static final class AnnotatedString.Range<T> {
    ctor public AnnotatedString.Range(T! item, int start, int end, String tag);
    ctor public AnnotatedString.Range(T! item, int start, int end);
    method public T! component1();
    method public int component2();
    method public int component3();
    method public String component4();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.AnnotatedString.Range<T> copy(T! item, int start, int end, String tag);
    method public int getEnd();
    method public T! getItem();
    method public int getStart();
    method public String getTag();
  }

  public final class AnnotatedStringKt {
    method public static androidx.compose.ui.text.AnnotatedString AnnotatedString(String text, androidx.compose.ui.text.SpanStyle spanStyle, androidx.compose.ui.text.ParagraphStyle? paragraphStyle = null);
    method public static androidx.compose.ui.text.AnnotatedString AnnotatedString(String text, androidx.compose.ui.text.ParagraphStyle paragraphStyle);
    method @Deprecated public static inline androidx.compose.ui.text.AnnotatedString AnnotatedString(kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,kotlin.Unit> builder);
    method public static inline androidx.compose.ui.text.AnnotatedString annotatedString(kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,kotlin.Unit> builder);
    method public static androidx.compose.ui.text.AnnotatedString capitalize(androidx.compose.ui.text.AnnotatedString, androidx.compose.ui.text.intl.LocaleList localeList = LocaleList.current);
    method public static androidx.compose.ui.text.AnnotatedString decapitalize(androidx.compose.ui.text.AnnotatedString, androidx.compose.ui.text.intl.LocaleList localeList = LocaleList.current);
    method public static int getLength(androidx.compose.ui.text.AnnotatedString);
    method public static androidx.compose.ui.text.AnnotatedString subSequence(androidx.compose.ui.text.AnnotatedString, int start, int end);
    method public static androidx.compose.ui.text.AnnotatedString toLowerCase(androidx.compose.ui.text.AnnotatedString, androidx.compose.ui.text.intl.LocaleList localeList = LocaleList.current);
    method public static androidx.compose.ui.text.AnnotatedString toUpperCase(androidx.compose.ui.text.AnnotatedString, androidx.compose.ui.text.intl.LocaleList localeList = LocaleList.current);
    method public static inline <R> R withStyle(androidx.compose.ui.text.AnnotatedString.Builder, androidx.compose.ui.text.SpanStyle style, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,? extends R> block);
    method public static inline <R> R withStyle(androidx.compose.ui.text.AnnotatedString.Builder, androidx.compose.ui.text.ParagraphStyle style, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.AnnotatedString.Builder,? extends R> block);
  }

  @kotlin.RequiresOptIn(level=RequiresOptIn.Level.ERROR, message="This is internal API that may change frequently and without warning.") @kotlin.annotation.Target(allowedTargets={AnnotationTarget.CLASS, AnnotationTarget.FUNCTION, AnnotationTarget.PROPERTY}) public @interface InternalTextApi {
  }

  public final class JvmAnnotatedStringKt {
  }

  public final class MultiParagraph {
    ctor public MultiParagraph(androidx.compose.ui.text.MultiParagraphIntrinsics intrinsics, int maxLines, boolean ellipsis, androidx.compose.ui.text.ParagraphConstraints constraints);
    ctor public MultiParagraph(androidx.compose.ui.text.AnnotatedString annotatedString, androidx.compose.ui.text.TextStyle style, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, int maxLines, boolean ellipsis, androidx.compose.ui.text.ParagraphConstraints constraints, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int offset);
    method public androidx.compose.ui.geometry.Rect getBoundingBox(int offset);
    method public androidx.compose.ui.geometry.Rect getCursorRect(int offset);
    method public boolean getDidExceedMaxLines();
    method public float getFirstBaseline();
    method public float getHeight();
    method public float getHorizontalPosition(int offset, boolean usePrimaryDirection);
    method public androidx.compose.ui.text.MultiParagraphIntrinsics getIntrinsics();
    method public float getLastBaseline();
    method public float getLineBottom(int lineIndex);
    method public int getLineCount();
    method public int getLineEnd(int lineIndex);
    method public int getLineForOffset(int offset);
    method public int getLineForVerticalPosition(float vertical);
    method public float getLineHeight(int lineIndex);
    method public float getLineLeft(int lineIndex);
    method public float getLineRight(int lineIndex);
    method public int getLineStart(int lineIndex);
    method public float getLineTop(int lineIndex);
    method public int getLineVisibleEnd(int lineIndex);
    method public float getLineWidth(int lineIndex);
    method public float getMaxIntrinsicWidth();
    method public int getMaxLines();
    method public float getMinIntrinsicWidth();
    method public int getOffsetForPosition(androidx.compose.ui.geometry.Offset position);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int offset);
    method public androidx.compose.ui.graphics.Path getPathForRange(int start, int end);
    method public java.util.List<androidx.compose.ui.geometry.Rect> getPlaceholderRects();
    method public float getWidth();
    method public androidx.compose.ui.text.TextRange getWordBoundary(int offset);
    method public boolean isLineEllipsized(int lineIndex);
    method public void paint(androidx.compose.ui.graphics.Canvas canvas);
    property public final boolean didExceedMaxLines;
    property public final float firstBaseline;
    property public final float height;
    property public final float lastBaseline;
    property public final int lineCount;
    property public final float maxIntrinsicWidth;
    property public final float minIntrinsicWidth;
    property public final java.util.List<androidx.compose.ui.geometry.Rect> placeholderRects;
    property public final float width;
  }

  public final class MultiParagraphIntrinsics implements androidx.compose.ui.text.ParagraphIntrinsics {
    ctor public MultiParagraphIntrinsics(androidx.compose.ui.text.AnnotatedString annotatedString, androidx.compose.ui.text.TextStyle style, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader);
    method public androidx.compose.ui.text.AnnotatedString getAnnotatedString();
    method public float getMaxIntrinsicWidth();
    method public float getMinIntrinsicWidth();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> getPlaceholders();
    property public float maxIntrinsicWidth;
    property public float minIntrinsicWidth;
  }

  public final class MultiParagraphIntrinsicsKt {
  }

  public final class MultiParagraphKt {
  }

  public interface Paragraph {
    method public androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int offset);
    method public androidx.compose.ui.geometry.Rect getBoundingBox(int offset);
    method public androidx.compose.ui.geometry.Rect getCursorRect(int offset);
    method public boolean getDidExceedMaxLines();
    method public float getFirstBaseline();
    method public float getHeight();
    method public float getHorizontalPosition(int offset, boolean usePrimaryDirection);
    method public float getLastBaseline();
    method public float getLineBottom(int lineIndex);
    method public int getLineCount();
    method public int getLineEnd(int lineIndex);
    method public int getLineForOffset(int offset);
    method public int getLineForVerticalPosition(float vertical);
    method public float getLineHeight(int lineIndex);
    method public float getLineLeft(int lineIndex);
    method public float getLineRight(int lineIndex);
    method public int getLineStart(int lineIndex);
    method public float getLineTop(int lineIndex);
    method public int getLineVisibleEnd(int lineIndex);
    method public float getLineWidth(int lineIndex);
    method public float getMaxIntrinsicWidth();
    method public float getMinIntrinsicWidth();
    method public int getOffsetForPosition(androidx.compose.ui.geometry.Offset position);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int offset);
    method public androidx.compose.ui.graphics.Path getPathForRange(int start, int end);
    method public java.util.List<androidx.compose.ui.geometry.Rect> getPlaceholderRects();
    method public float getWidth();
    method public androidx.compose.ui.text.TextRange getWordBoundary(int offset);
    method public boolean isLineEllipsized(int lineIndex);
    method public void paint(androidx.compose.ui.graphics.Canvas canvas);
    property public abstract boolean didExceedMaxLines;
    property public abstract float firstBaseline;
    property public abstract float height;
    property public abstract float lastBaseline;
    property public abstract int lineCount;
    property public abstract float maxIntrinsicWidth;
    property public abstract float minIntrinsicWidth;
    property public abstract java.util.List<androidx.compose.ui.geometry.Rect> placeholderRects;
    property public abstract float width;
  }

  public final class ParagraphConstraints {
    ctor public ParagraphConstraints(float width);
    method public float component1();
    method public androidx.compose.ui.text.ParagraphConstraints copy(float width);
    method public float getWidth();
  }

  public interface ParagraphIntrinsics {
    method public float getMaxIntrinsicWidth();
    method public float getMinIntrinsicWidth();
    property public abstract float maxIntrinsicWidth;
    property public abstract float minIntrinsicWidth;
  }

  public final class ParagraphIntrinsicsKt {
    method public static androidx.compose.ui.text.ParagraphIntrinsics ParagraphIntrinsics(String text, androidx.compose.ui.text.TextStyle style, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> spanStyles = listOf(), java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders = listOf(), androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader);
  }

  public final class ParagraphKt {
    method public static androidx.compose.ui.text.Paragraph Paragraph(String text, androidx.compose.ui.text.TextStyle style, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>> spanStyles = listOf(), java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders = listOf(), int maxLines = 2147483647, boolean ellipsis = false, androidx.compose.ui.text.ParagraphConstraints constraints, androidx.compose.ui.unit.Density density, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader);
    method public static androidx.compose.ui.text.Paragraph Paragraph(androidx.compose.ui.text.ParagraphIntrinsics paragraphIntrinsics, int maxLines = 2147483647, boolean ellipsis = false, androidx.compose.ui.text.ParagraphConstraints constraints);
  }

  @androidx.compose.runtime.Immutable public final class ParagraphStyle {
    method public androidx.compose.ui.text.style.TextAlign? component1();
    method public androidx.compose.ui.text.style.TextDirection? component2();
    method public long component3();
    method public androidx.compose.ui.text.style.TextIndent? component4();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.ParagraphStyle copy-QrGfzA0(androidx.compose.ui.text.style.TextAlign? textAlign, androidx.compose.ui.text.style.TextDirection? textDirection, long lineHeight, androidx.compose.ui.text.style.TextIndent? textIndent);
    method public long getLineHeight();
    method public androidx.compose.ui.text.style.TextAlign? getTextAlign();
    method public androidx.compose.ui.text.style.TextDirection? getTextDirection();
    method public androidx.compose.ui.text.style.TextIndent? getTextIndent();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.ParagraphStyle merge(androidx.compose.ui.text.ParagraphStyle? other = null);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.ParagraphStyle plus(androidx.compose.ui.text.ParagraphStyle other);
  }

  public final class ParagraphStyleKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.ParagraphStyle lerp(androidx.compose.ui.text.ParagraphStyle start, androidx.compose.ui.text.ParagraphStyle stop, float fraction);
  }

  @androidx.compose.runtime.Immutable public final class Placeholder {
    method public long component1();
    method public long component2();
    method public androidx.compose.ui.text.PlaceholderVerticalAlign component3();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.Placeholder copy-KJSDsNM(long width, long height, androidx.compose.ui.text.PlaceholderVerticalAlign placeholderVerticalAlign);
    method public long getHeight();
    method public androidx.compose.ui.text.PlaceholderVerticalAlign getPlaceholderVerticalAlign();
    method public long getWidth();
  }

  public enum PlaceholderVerticalAlign {
    method public static androidx.compose.ui.text.PlaceholderVerticalAlign valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.PlaceholderVerticalAlign[] values();
    enum_constant public static final androidx.compose.ui.text.PlaceholderVerticalAlign AboveBaseline;
    enum_constant public static final androidx.compose.ui.text.PlaceholderVerticalAlign Bottom;
    enum_constant public static final androidx.compose.ui.text.PlaceholderVerticalAlign Center;
    enum_constant public static final androidx.compose.ui.text.PlaceholderVerticalAlign TextBottom;
    enum_constant public static final androidx.compose.ui.text.PlaceholderVerticalAlign TextCenter;
    enum_constant public static final androidx.compose.ui.text.PlaceholderVerticalAlign TextTop;
    enum_constant public static final androidx.compose.ui.text.PlaceholderVerticalAlign Top;
  }

  public final class SoftwareKeyboardController {
    ctor public SoftwareKeyboardController(androidx.compose.ui.text.input.TextInputService textInputService, int token);
    method public void hideSoftwareKeyboard();
    method public void notifyFocusedRect(androidx.compose.ui.geometry.Rect rect);
    method public void showSoftwareKeyboard();
  }

  @androidx.compose.runtime.Immutable public final class SpanStyle {
    method public long component1();
    method public androidx.compose.ui.text.style.TextGeometricTransform? component10();
    method public androidx.compose.ui.text.intl.LocaleList? component11();
    method public long component12();
    method public androidx.compose.ui.text.style.TextDecoration? component13();
    method public androidx.compose.ui.graphics.Shadow? component14();
    method public long component2();
    method public androidx.compose.ui.text.font.FontWeight? component3();
    method public androidx.compose.ui.text.font.FontStyle? component4();
    method public androidx.compose.ui.text.font.FontSynthesis? component5();
    method public androidx.compose.ui.text.font.FontFamily? component6();
    method public String? component7();
    method public long component8();
    method public androidx.compose.ui.text.style.BaselineShift? component9();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.SpanStyle copy-D5kMcog(long color, long fontSize, androidx.compose.ui.text.font.FontWeight? fontWeight, androidx.compose.ui.text.font.FontStyle? fontStyle, androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, androidx.compose.ui.text.font.FontFamily? fontFamily, String? fontFeatureSettings, long letterSpacing, androidx.compose.ui.text.style.BaselineShift? baselineShift, androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, androidx.compose.ui.text.intl.LocaleList? localeList, long background, androidx.compose.ui.text.style.TextDecoration? textDecoration, androidx.compose.ui.graphics.Shadow? shadow);
    method public long getBackground();
    method public androidx.compose.ui.text.style.BaselineShift? getBaselineShift();
    method public long getColor();
    method public androidx.compose.ui.text.font.FontFamily? getFontFamily();
    method public String? getFontFeatureSettings();
    method public long getFontSize();
    method public androidx.compose.ui.text.font.FontStyle? getFontStyle();
    method public androidx.compose.ui.text.font.FontSynthesis? getFontSynthesis();
    method public androidx.compose.ui.text.font.FontWeight? getFontWeight();
    method public long getLetterSpacing();
    method public androidx.compose.ui.text.intl.LocaleList? getLocaleList();
    method public androidx.compose.ui.graphics.Shadow? getShadow();
    method public androidx.compose.ui.text.style.TextDecoration? getTextDecoration();
    method public androidx.compose.ui.text.style.TextGeometricTransform? getTextGeometricTransform();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.SpanStyle merge(androidx.compose.ui.text.SpanStyle? other = null);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.SpanStyle plus(androidx.compose.ui.text.SpanStyle other);
  }

  public final class SpanStyleKt {
    method public static androidx.compose.ui.text.SpanStyle lerp(androidx.compose.ui.text.SpanStyle start, androidx.compose.ui.text.SpanStyle stop, float fraction);
  }

  public final class StringKt {
    method public static String capitalize(String, androidx.compose.ui.text.intl.Locale locale);
    method public static String capitalize(String, androidx.compose.ui.text.intl.LocaleList localeList);
    method public static String decapitalize(String, androidx.compose.ui.text.intl.Locale locale);
    method public static String decapitalize(String, androidx.compose.ui.text.intl.LocaleList localeList);
    method public static String toLowerCase(String, androidx.compose.ui.text.intl.Locale locale);
    method public static String toLowerCase(String, androidx.compose.ui.text.intl.LocaleList localeList);
    method public static String toUpperCase(String, androidx.compose.ui.text.intl.Locale locale);
    method public static String toUpperCase(String, androidx.compose.ui.text.intl.LocaleList localeList);
  }

  public final class TextLayoutHelperKt {
  }

  public final class TextLayoutInput {
    ctor public TextLayoutInput(androidx.compose.ui.text.AnnotatedString text, androidx.compose.ui.text.TextStyle style, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, int maxLines, boolean softWrap, androidx.compose.ui.text.style.TextOverflow overflow, androidx.compose.ui.unit.Density density, androidx.compose.ui.unit.LayoutDirection layoutDirection, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader, androidx.compose.ui.unit.Constraints constraints);
    method public androidx.compose.ui.text.AnnotatedString component1();
    method public androidx.compose.ui.unit.Constraints component10();
    method public androidx.compose.ui.text.TextStyle component2();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> component3();
    method public int component4();
    method public boolean component5();
    method public androidx.compose.ui.text.style.TextOverflow component6();
    method public androidx.compose.ui.unit.Density component7();
    method public androidx.compose.ui.unit.LayoutDirection component8();
    method public androidx.compose.ui.text.font.Font.ResourceLoader component9();
    method public androidx.compose.ui.text.TextLayoutInput copy(androidx.compose.ui.text.AnnotatedString text, androidx.compose.ui.text.TextStyle style, java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> placeholders, int maxLines, boolean softWrap, androidx.compose.ui.text.style.TextOverflow overflow, androidx.compose.ui.unit.Density density, androidx.compose.ui.unit.LayoutDirection layoutDirection, androidx.compose.ui.text.font.Font.ResourceLoader resourceLoader, androidx.compose.ui.unit.Constraints constraints);
    method public androidx.compose.ui.unit.Constraints getConstraints();
    method public androidx.compose.ui.unit.Density getDensity();
    method public androidx.compose.ui.unit.LayoutDirection getLayoutDirection();
    method public int getMaxLines();
    method public androidx.compose.ui.text.style.TextOverflow getOverflow();
    method public java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>> getPlaceholders();
    method public androidx.compose.ui.text.font.Font.ResourceLoader getResourceLoader();
    method public boolean getSoftWrap();
    method public androidx.compose.ui.text.TextStyle getStyle();
    method public androidx.compose.ui.text.AnnotatedString getText();
  }

  public final class TextLayoutResult {
    method public androidx.compose.ui.text.TextLayoutInput component1();
    method public androidx.compose.ui.unit.IntSize component3();
    method public androidx.compose.ui.text.TextLayoutResult copy(androidx.compose.ui.text.TextLayoutInput layoutInput, androidx.compose.ui.text.MultiParagraph multiParagraph, androidx.compose.ui.unit.IntSize size);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getBidiRunDirection(int offset);
    method public androidx.compose.ui.geometry.Rect getBoundingBox(int offset);
    method public androidx.compose.ui.geometry.Rect getCursorRect(int offset);
    method public boolean getDidOverflowHeight();
    method public boolean getDidOverflowWidth();
    method public float getFirstBaseline();
    method public boolean getHasVisualOverflow();
    method public float getHorizontalPosition(int offset, boolean usePrimaryDirection);
    method public float getLastBaseline();
    method public androidx.compose.ui.text.TextLayoutInput getLayoutInput();
    method public float getLineBottom(int lineIndex);
    method public int getLineCount();
    method public int getLineEnd(int lineIndex);
    method public int getLineForOffset(int offset);
    method public int getLineForVerticalPosition(float vertical);
    method public float getLineLeft(int lineIndex);
    method public float getLineRight(int lineIndex);
    method public int getLineStart(int lineIndex);
    method public float getLineTop(int lineIndex);
    method public int getLineVisibleEnd(int lineIndex);
    method public int getOffsetForPosition(androidx.compose.ui.geometry.Offset position);
    method public androidx.compose.ui.text.style.ResolvedTextDirection getParagraphDirection(int offset);
    method public androidx.compose.ui.graphics.Path getPathForRange(int start, int end);
    method public java.util.List<androidx.compose.ui.geometry.Rect> getPlaceholderRects();
    method public androidx.compose.ui.unit.IntSize getSize();
    method public androidx.compose.ui.text.TextRange getWordBoundary(int offset);
    method public boolean isLineEllipsized(int lineIndex);
    property public final boolean didOverflowHeight;
    property public final boolean didOverflowWidth;
    property public final float firstBaseline;
    property public final boolean hasVisualOverflow;
    property public final float lastBaseline;
    property public final int lineCount;
    property public final java.util.List<androidx.compose.ui.geometry.Rect> placeholderRects;
  }

  public final class TextPainter {
    method public void paint(androidx.compose.ui.graphics.Canvas canvas, androidx.compose.ui.text.TextLayoutResult textLayoutResult);
    field public static final androidx.compose.ui.text.TextPainter INSTANCE;
  }

  @androidx.compose.runtime.Immutable public final class TextRange {
    ctor public TextRange(@IntRange(from=null) int start, @IntRange(from=null) int end);
    method public int component1();
    method public int component2();
    method public operator boolean contains(androidx.compose.ui.text.TextRange other);
    method public operator boolean contains(int offset);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.TextRange copy(int start, int end);
    method public boolean getCollapsed();
    method public int getEnd();
    method public int getLength();
    method public int getMax();
    method public int getMin();
    method public boolean getReversed();
    method public int getStart();
    method public boolean intersects(androidx.compose.ui.text.TextRange other);
    property public final boolean collapsed;
    property public final int length;
    property public final int max;
    property public final int min;
    property public final boolean reversed;
    field public static final androidx.compose.ui.text.TextRange.Companion Companion;
  }

  public static final class TextRange.Companion {
    method public androidx.compose.ui.text.TextRange getZero();
    property public final androidx.compose.ui.text.TextRange Zero;
  }

  public final class TextRangeKt {
    method public static androidx.compose.ui.text.TextRange TextRange(int index);
    method public static String substring(CharSequence, androidx.compose.ui.text.TextRange range);
  }

  @androidx.compose.runtime.Immutable public final class TextStyle {
    method public long component1();
    method public androidx.compose.ui.text.style.TextGeometricTransform? component10();
    method public androidx.compose.ui.text.intl.LocaleList? component11();
    method public long component12();
    method public androidx.compose.ui.text.style.TextDecoration? component13();
    method public androidx.compose.ui.graphics.Shadow? component14();
    method public androidx.compose.ui.text.style.TextAlign? component15();
    method public androidx.compose.ui.text.style.TextDirection? component16();
    method public long component17();
    method public androidx.compose.ui.text.style.TextIndent? component18();
    method public long component2();
    method public androidx.compose.ui.text.font.FontWeight? component3();
    method public androidx.compose.ui.text.font.FontStyle? component4();
    method public androidx.compose.ui.text.font.FontSynthesis? component5();
    method public androidx.compose.ui.text.font.FontFamily? component6();
    method public String? component7();
    method public long component8();
    method public androidx.compose.ui.text.style.BaselineShift? component9();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.TextStyle copy-4skVB9c(long color, long fontSize, androidx.compose.ui.text.font.FontWeight? fontWeight, androidx.compose.ui.text.font.FontStyle? fontStyle, androidx.compose.ui.text.font.FontSynthesis? fontSynthesis, androidx.compose.ui.text.font.FontFamily? fontFamily, String? fontFeatureSettings, long letterSpacing, androidx.compose.ui.text.style.BaselineShift? baselineShift, androidx.compose.ui.text.style.TextGeometricTransform? textGeometricTransform, androidx.compose.ui.text.intl.LocaleList? localeList, long background, androidx.compose.ui.text.style.TextDecoration? textDecoration, androidx.compose.ui.graphics.Shadow? shadow, androidx.compose.ui.text.style.TextAlign? textAlign, androidx.compose.ui.text.style.TextDirection? textDirection, long lineHeight, androidx.compose.ui.text.style.TextIndent? textIndent);
    method public long getBackground();
    method public androidx.compose.ui.text.style.BaselineShift? getBaselineShift();
    method public long getColor();
    method public androidx.compose.ui.text.font.FontFamily? getFontFamily();
    method public String? getFontFeatureSettings();
    method public long getFontSize();
    method public androidx.compose.ui.text.font.FontStyle? getFontStyle();
    method public androidx.compose.ui.text.font.FontSynthesis? getFontSynthesis();
    method public androidx.compose.ui.text.font.FontWeight? getFontWeight();
    method public long getLetterSpacing();
    method public long getLineHeight();
    method public androidx.compose.ui.text.intl.LocaleList? getLocaleList();
    method public androidx.compose.ui.graphics.Shadow? getShadow();
    method public androidx.compose.ui.text.style.TextAlign? getTextAlign();
    method public androidx.compose.ui.text.style.TextDecoration? getTextDecoration();
    method public androidx.compose.ui.text.style.TextDirection? getTextDirection();
    method public androidx.compose.ui.text.style.TextGeometricTransform? getTextGeometricTransform();
    method public androidx.compose.ui.text.style.TextIndent? getTextIndent();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.TextStyle merge(androidx.compose.ui.text.TextStyle? other = null);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.TextStyle merge(androidx.compose.ui.text.SpanStyle other);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.TextStyle merge(androidx.compose.ui.text.ParagraphStyle other);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.TextStyle plus(androidx.compose.ui.text.TextStyle other);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.TextStyle plus(androidx.compose.ui.text.ParagraphStyle other);
    method @androidx.compose.runtime.Stable public operator androidx.compose.ui.text.TextStyle plus(androidx.compose.ui.text.SpanStyle other);
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.ParagraphStyle toParagraphStyle();
    method @androidx.compose.runtime.Stable public androidx.compose.ui.text.SpanStyle toSpanStyle();
    field public static final androidx.compose.ui.text.TextStyle.Companion Companion;
  }

  public static final class TextStyle.Companion {
    method public androidx.compose.ui.text.TextStyle getDefault();
    property public final androidx.compose.ui.text.TextStyle Default;
  }

  public final class TextStyleKt {
    method public static androidx.compose.ui.text.TextStyle lerp(androidx.compose.ui.text.TextStyle start, androidx.compose.ui.text.TextStyle stop, float fraction);
    method public static androidx.compose.ui.text.TextStyle resolveDefaults(androidx.compose.ui.text.TextStyle style, androidx.compose.ui.unit.LayoutDirection direction);
  }

  public interface Typeface {
    method public androidx.compose.ui.text.font.FontFamily getFontFamily();
    property public abstract androidx.compose.ui.text.font.FontFamily fontFamily;
  }

}

package androidx.compose.ui.text.font {

  public abstract sealed class FileBasedFontFamily extends androidx.compose.ui.text.font.FontFamily {
  }

  @androidx.compose.runtime.Immutable public interface Font {
    method public androidx.compose.ui.text.font.FontStyle getStyle();
    method public androidx.compose.ui.text.font.FontWeight getWeight();
    property public abstract androidx.compose.ui.text.font.FontStyle style;
    property public abstract androidx.compose.ui.text.font.FontWeight weight;
  }

  public static interface Font.ResourceLoader {
    method public Object load(androidx.compose.ui.text.font.Font font);
  }

  @androidx.compose.runtime.Immutable public abstract sealed class FontFamily {
    method public final boolean getCanLoadSynchronously();
    field public static final androidx.compose.ui.text.font.FontFamily.Companion Companion;
  }

  public static final class FontFamily.Companion {
    method public androidx.compose.ui.text.font.GenericFontFamily getCursive();
    method public androidx.compose.ui.text.font.SystemFontFamily getDefault();
    method public androidx.compose.ui.text.font.GenericFontFamily getMonospace();
    method public androidx.compose.ui.text.font.GenericFontFamily getSansSerif();
    method public androidx.compose.ui.text.font.GenericFontFamily getSerif();
    property public final androidx.compose.ui.text.font.GenericFontFamily Cursive;
    property public final androidx.compose.ui.text.font.SystemFontFamily Default;
    property public final androidx.compose.ui.text.font.GenericFontFamily Monospace;
    property public final androidx.compose.ui.text.font.GenericFontFamily SansSerif;
    property public final androidx.compose.ui.text.font.GenericFontFamily Serif;
  }

  public final class FontFamilyKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.FontListFontFamily fontFamily(java.util.List<? extends androidx.compose.ui.text.font.Font> fonts);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.FontListFontFamily fontFamily(androidx.compose.ui.text.font.Font... fonts);
    method public static androidx.compose.ui.text.font.LoadedFontFamily fontFamily(androidx.compose.ui.text.Typeface typeface);
  }

  public final class FontKt {
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.FontListFontFamily asFontFamily(androidx.compose.ui.text.font.Font);
    method @androidx.compose.runtime.Stable public static androidx.compose.ui.text.font.Font font(int resId, androidx.compose.ui.text.font.FontWeight weight = FontWeight.Normal, androidx.compose.ui.text.font.FontStyle style = androidx.compose.ui.text.font.FontStyle.Normal);
  }

  @androidx.compose.runtime.Immutable public final class FontListFontFamily extends androidx.compose.ui.text.font.FileBasedFontFamily implements kotlin.jvm.internal.markers.KMappedMarker java.util.List<androidx.compose.ui.text.font.Font> {
    ctor public FontListFontFamily(java.util.List<? extends androidx.compose.ui.text.font.Font> fonts);
    method public java.util.List<androidx.compose.ui.text.font.Font> component1();
    method public boolean contains(androidx.compose.ui.text.font.Font element);
    method public boolean containsAll(java.util.Collection<?> elements);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.font.FontListFontFamily copy(java.util.List<? extends androidx.compose.ui.text.font.Font> fonts);
    method public androidx.compose.ui.text.font.Font get(int index);
    method public java.util.List<androidx.compose.ui.text.font.Font> getFonts();
    method public int getSize();
    method public int indexOf(androidx.compose.ui.text.font.Font element);
    method public boolean isEmpty();
    method public java.util.Iterator<androidx.compose.ui.text.font.Font> iterator();
    method public int lastIndexOf(androidx.compose.ui.text.font.Font element);
    method public java.util.ListIterator<androidx.compose.ui.text.font.Font> listIterator();
    method public java.util.ListIterator<androidx.compose.ui.text.font.Font> listIterator(int index);
    method public java.util.List<androidx.compose.ui.text.font.Font> subList(int fromIndex, int toIndex);
  }

  public enum FontStyle {
    method public static androidx.compose.ui.text.font.FontStyle valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.font.FontStyle[] values();
    enum_constant public static final androidx.compose.ui.text.font.FontStyle Italic;
    enum_constant public static final androidx.compose.ui.text.font.FontStyle Normal;
  }

  public enum FontSynthesis {
    method public static androidx.compose.ui.text.font.FontSynthesis valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.font.FontSynthesis[] values();
    enum_constant public static final androidx.compose.ui.text.font.FontSynthesis All;
    enum_constant public static final androidx.compose.ui.text.font.FontSynthesis None;
    enum_constant public static final androidx.compose.ui.text.font.FontSynthesis Style;
    enum_constant public static final androidx.compose.ui.text.font.FontSynthesis Weight;
  }

  @androidx.compose.runtime.Immutable public final class FontWeight implements java.lang.Comparable<androidx.compose.ui.text.font.FontWeight> {
    ctor public FontWeight(int weight);
    method public int compareTo(androidx.compose.ui.text.font.FontWeight other);
    method public int component1();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.font.FontWeight copy(int weight);
    method public int getWeight();
    field public static final androidx.compose.ui.text.font.FontWeight.Companion Companion;
  }

  public static final class FontWeight.Companion {
    method public androidx.compose.ui.text.font.FontWeight getBlack();
    method public androidx.compose.ui.text.font.FontWeight getBold();
    method public androidx.compose.ui.text.font.FontWeight getExtraBold();
    method public androidx.compose.ui.text.font.FontWeight getExtraLight();
    method public androidx.compose.ui.text.font.FontWeight getLight();
    method public androidx.compose.ui.text.font.FontWeight getMedium();
    method public androidx.compose.ui.text.font.FontWeight getNormal();
    method public androidx.compose.ui.text.font.FontWeight getSemiBold();
    method public androidx.compose.ui.text.font.FontWeight getThin();
    method public androidx.compose.ui.text.font.FontWeight getW100();
    method public androidx.compose.ui.text.font.FontWeight getW200();
    method public androidx.compose.ui.text.font.FontWeight getW300();
    method public androidx.compose.ui.text.font.FontWeight getW400();
    method public androidx.compose.ui.text.font.FontWeight getW500();
    method public androidx.compose.ui.text.font.FontWeight getW600();
    method public androidx.compose.ui.text.font.FontWeight getW700();
    method public androidx.compose.ui.text.font.FontWeight getW800();
    method public androidx.compose.ui.text.font.FontWeight getW900();
    property public final androidx.compose.ui.text.font.FontWeight Black;
    property public final androidx.compose.ui.text.font.FontWeight Bold;
    property public final androidx.compose.ui.text.font.FontWeight ExtraBold;
    property public final androidx.compose.ui.text.font.FontWeight ExtraLight;
    property public final androidx.compose.ui.text.font.FontWeight Light;
    property public final androidx.compose.ui.text.font.FontWeight Medium;
    property public final androidx.compose.ui.text.font.FontWeight Normal;
    property public final androidx.compose.ui.text.font.FontWeight SemiBold;
    property public final androidx.compose.ui.text.font.FontWeight Thin;
    property public final androidx.compose.ui.text.font.FontWeight W100;
    property public final androidx.compose.ui.text.font.FontWeight W200;
    property public final androidx.compose.ui.text.font.FontWeight W300;
    property public final androidx.compose.ui.text.font.FontWeight W400;
    property public final androidx.compose.ui.text.font.FontWeight W500;
    property public final androidx.compose.ui.text.font.FontWeight W600;
    property public final androidx.compose.ui.text.font.FontWeight W700;
    property public final androidx.compose.ui.text.font.FontWeight W800;
    property public final androidx.compose.ui.text.font.FontWeight W900;
  }

  public final class FontWeightKt {
    method public static androidx.compose.ui.text.font.FontWeight lerp(androidx.compose.ui.text.font.FontWeight start, androidx.compose.ui.text.font.FontWeight stop, float fraction);
  }

  @androidx.compose.runtime.Immutable public final class GenericFontFamily extends androidx.compose.ui.text.font.SystemFontFamily {
    method public String getName();
  }

  public final class LoadedFontFamily extends androidx.compose.ui.text.font.FontFamily {
    ctor public LoadedFontFamily(androidx.compose.ui.text.Typeface typeface);
    method public androidx.compose.ui.text.Typeface component1();
    method public androidx.compose.ui.text.font.LoadedFontFamily copy(androidx.compose.ui.text.Typeface typeface);
    method public androidx.compose.ui.text.Typeface getTypeface();
  }

  public final class ResourceFont implements androidx.compose.ui.text.font.Font {
    ctor public ResourceFont(int resId, androidx.compose.ui.text.font.FontWeight weight, androidx.compose.ui.text.font.FontStyle style);
    method public int component1();
    method public androidx.compose.ui.text.font.FontWeight component2();
    method public androidx.compose.ui.text.font.FontStyle component3();
    method public androidx.compose.ui.text.font.ResourceFont copy(int resId, androidx.compose.ui.text.font.FontWeight weight, androidx.compose.ui.text.font.FontStyle style);
    method public int getResId();
    method public androidx.compose.ui.text.font.FontStyle getStyle();
    method public androidx.compose.ui.text.font.FontWeight getWeight();
  }

  public abstract sealed class SystemFontFamily extends androidx.compose.ui.text.font.FontFamily {
  }

}

package androidx.compose.ui.text.input {

  public final class BackspaceKeyEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public BackspaceKeyEditOp();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class CommitTextEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public CommitTextEditOp(String text, int newCursorPosition);
    method public String component1();
    method public int component2();
    method public androidx.compose.ui.text.input.CommitTextEditOp copy(String text, int newCursorPosition);
    method public int getNewCursorPosition();
    method public String getText();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class DeleteAllEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public DeleteAllEditOp();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class DeleteSurroundingTextEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public DeleteSurroundingTextEditOp(int beforeLength, int afterLength);
    method public int component1();
    method public int component2();
    method public androidx.compose.ui.text.input.DeleteSurroundingTextEditOp copy(int beforeLength, int afterLength);
    method public int getAfterLength();
    method public int getBeforeLength();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class DeleteSurroundingTextInCodePointsEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public DeleteSurroundingTextInCodePointsEditOp(int beforeLength, int afterLength);
    method public int component1();
    method public int component2();
    method public androidx.compose.ui.text.input.DeleteSurroundingTextInCodePointsEditOp copy(int beforeLength, int afterLength);
    method public int getAfterLength();
    method public int getBeforeLength();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public interface EditOperation {
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class EditingBuffer {
    ctor public EditingBuffer(String initialText, androidx.compose.ui.text.TextRange initialSelection);
    field public static final int NOWHERE = -1; // 0xffffffff
  }

  @Deprecated @androidx.compose.runtime.Immutable public final class EditorValue {
    ctor @Deprecated public EditorValue(String text, androidx.compose.ui.text.TextRange selection, androidx.compose.ui.text.TextRange? composition);
    ctor @Deprecated public EditorValue();
    method @Deprecated public String component1();
    method @Deprecated public androidx.compose.ui.text.TextRange component2();
    method @Deprecated public androidx.compose.ui.text.TextRange? component3();
    method @Deprecated @androidx.compose.runtime.Immutable public androidx.compose.ui.text.input.EditorValue copy(String text, androidx.compose.ui.text.TextRange selection, androidx.compose.ui.text.TextRange? composition);
    method @Deprecated public androidx.compose.ui.text.TextRange? getComposition();
    method @Deprecated public String getSelectedText();
    method @Deprecated public androidx.compose.ui.text.TextRange getSelection();
    method @Deprecated public String getText();
    method @Deprecated public String getTextAfterSelection(int maxChars);
    method @Deprecated public String getTextBeforeSelection(int maxChars);
  }

  public final class FinishComposingTextEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public FinishComposingTextEditOp();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class GapBufferKt {
  }

  public enum ImeAction {
    method public static androidx.compose.ui.text.input.ImeAction valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.input.ImeAction[] values();
    enum_constant public static final androidx.compose.ui.text.input.ImeAction Done;
    enum_constant public static final androidx.compose.ui.text.input.ImeAction Go;
    enum_constant public static final androidx.compose.ui.text.input.ImeAction Next;
    enum_constant public static final androidx.compose.ui.text.input.ImeAction NoAction;
    enum_constant public static final androidx.compose.ui.text.input.ImeAction Previous;
    enum_constant public static final androidx.compose.ui.text.input.ImeAction Search;
    enum_constant public static final androidx.compose.ui.text.input.ImeAction Send;
    enum_constant public static final androidx.compose.ui.text.input.ImeAction Unspecified;
  }

  public interface InputEventListener {
    method public void onEditOperations(java.util.List<? extends androidx.compose.ui.text.input.EditOperation> editOps);
    method public void onImeAction(androidx.compose.ui.text.input.ImeAction imeAction);
  }

  public enum KeyboardType {
    method public static androidx.compose.ui.text.input.KeyboardType valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.input.KeyboardType[] values();
    enum_constant public static final androidx.compose.ui.text.input.KeyboardType Ascii;
    enum_constant public static final androidx.compose.ui.text.input.KeyboardType Email;
    enum_constant public static final androidx.compose.ui.text.input.KeyboardType Number;
    enum_constant public static final androidx.compose.ui.text.input.KeyboardType NumberPassword;
    enum_constant public static final androidx.compose.ui.text.input.KeyboardType Password;
    enum_constant public static final androidx.compose.ui.text.input.KeyboardType Phone;
    enum_constant public static final androidx.compose.ui.text.input.KeyboardType Text;
    enum_constant public static final androidx.compose.ui.text.input.KeyboardType Uri;
  }

  public final class MoveCursorEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public MoveCursorEditOp(int amount);
    method public int component1();
    method public androidx.compose.ui.text.input.MoveCursorEditOp copy(int amount);
    method public int getAmount();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public interface OffsetMap {
    method public int originalToTransformed(int offset);
    method public int transformedToOriginal(int offset);
    field public static final androidx.compose.ui.text.input.OffsetMap.Companion Companion;
  }

  public static final class OffsetMap.Companion {
    method public androidx.compose.ui.text.input.OffsetMap getIdentityOffsetMap();
    property public final androidx.compose.ui.text.input.OffsetMap identityOffsetMap;
  }

  public final class PasswordVisualTransformation implements androidx.compose.ui.text.input.VisualTransformation {
    ctor public PasswordVisualTransformation(char mask);
    ctor public PasswordVisualTransformation();
    method public char component1();
    method public androidx.compose.ui.text.input.PasswordVisualTransformation copy(char mask);
    method public androidx.compose.ui.text.input.TransformedText filter(androidx.compose.ui.text.AnnotatedString text);
    method public char getMask();
  }

  public interface PlatformTextInputService {
    method public void hideSoftwareKeyboard();
    method public void notifyFocusedRect(androidx.compose.ui.geometry.Rect rect);
    method public void onStateUpdated(androidx.compose.ui.text.input.TextFieldValue value);
    method public void showSoftwareKeyboard();
    method public void startInput(androidx.compose.ui.text.input.TextFieldValue value, androidx.compose.ui.text.input.KeyboardType keyboardType, androidx.compose.ui.text.input.ImeAction imeAction, kotlin.jvm.functions.Function1<? super java.util.List<? extends androidx.compose.ui.text.input.EditOperation>,kotlin.Unit> onEditCommand, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.ImeAction,kotlin.Unit> onImeActionPerformed);
    method public void stopInput();
  }

  public final class SetComposingRegionEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public SetComposingRegionEditOp(int start, int end);
    method public int component1();
    method public int component2();
    method public androidx.compose.ui.text.input.SetComposingRegionEditOp copy(int start, int end);
    method public int getEnd();
    method public int getStart();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class SetComposingTextEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public SetComposingTextEditOp(String text, int newCursorPosition);
    method public String component1();
    method public int component2();
    method public androidx.compose.ui.text.input.SetComposingTextEditOp copy(String text, int newCursorPosition);
    method public int getNewCursorPosition();
    method public String getText();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  public final class SetSelectionEditOp implements androidx.compose.ui.text.input.EditOperation {
    ctor public SetSelectionEditOp(int start, int end);
    method public int component1();
    method public int component2();
    method public androidx.compose.ui.text.input.SetSelectionEditOp copy(int start, int end);
    method public int getEnd();
    method public int getStart();
    method public void process(androidx.compose.ui.text.input.EditingBuffer buffer);
  }

  @androidx.compose.runtime.Immutable public final class TextFieldValue {
    ctor public TextFieldValue(String text, androidx.compose.ui.text.TextRange selection, androidx.compose.ui.text.TextRange? composition);
    ctor public TextFieldValue();
    method public String component1();
    method public androidx.compose.ui.text.TextRange component2();
    method public androidx.compose.ui.text.TextRange? component3();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.input.TextFieldValue copy(String text, androidx.compose.ui.text.TextRange selection, androidx.compose.ui.text.TextRange? composition);
    method public androidx.compose.ui.text.TextRange? getComposition();
    method public androidx.compose.ui.text.TextRange getSelection();
    method public String getText();
    field public static final androidx.compose.ui.text.input.TextFieldValue.Companion Companion;
  }

  public static final class TextFieldValue.Companion {
    method public androidx.compose.runtime.savedinstancestate.Saver<androidx.compose.ui.text.input.TextFieldValue,java.lang.Object> getSaver();
    property public final androidx.compose.runtime.savedinstancestate.Saver<androidx.compose.ui.text.input.TextFieldValue,java.lang.Object> Saver;
  }

  public final class TextFieldValueKt {
    method public static String getSelectedText(androidx.compose.ui.text.input.TextFieldValue);
    method public static String getTextAfterSelection(androidx.compose.ui.text.input.TextFieldValue, int maxChars);
    method public static String getTextBeforeSelection(androidx.compose.ui.text.input.TextFieldValue, int maxChars);
  }

  public class TextInputService {
    ctor public TextInputService(androidx.compose.ui.text.input.PlatformTextInputService platformTextInputService);
    method public void hideSoftwareKeyboard(int token);
    method public void notifyFocusedRect(int token, androidx.compose.ui.geometry.Rect rect);
    method public void onStateUpdated(int token, androidx.compose.ui.text.input.TextFieldValue value);
    method public void showSoftwareKeyboard(int token);
    method public int startInput(androidx.compose.ui.text.input.TextFieldValue value, androidx.compose.ui.text.input.KeyboardType keyboardType, androidx.compose.ui.text.input.ImeAction imeAction, kotlin.jvm.functions.Function1<? super java.util.List<? extends androidx.compose.ui.text.input.EditOperation>,kotlin.Unit> onEditCommand, kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.ImeAction,kotlin.Unit> onImeActionPerformed);
    method public void stopInput(int token);
  }

  public final class TextInputServiceKt {
    method @Deprecated public static kotlin.jvm.functions.Function1<androidx.compose.ui.text.input.PlatformTextInputService,androidx.compose.ui.text.input.TextInputService> getTextInputServiceFactory();
    method @Deprecated public static void setTextInputServiceFactory(kotlin.jvm.functions.Function1<? super androidx.compose.ui.text.input.PlatformTextInputService,? extends androidx.compose.ui.text.input.TextInputService> p);
    field public static final int INVALID_SESSION = -1; // 0xffffffff
    field public static final int NO_SESSION = 0; // 0x0
  }

  public final class TransformedText {
    ctor public TransformedText(androidx.compose.ui.text.AnnotatedString transformedText, androidx.compose.ui.text.input.OffsetMap offsetMap);
    method public androidx.compose.ui.text.AnnotatedString component1();
    method public androidx.compose.ui.text.input.OffsetMap component2();
    method public androidx.compose.ui.text.input.TransformedText copy(androidx.compose.ui.text.AnnotatedString transformedText, androidx.compose.ui.text.input.OffsetMap offsetMap);
    method public androidx.compose.ui.text.input.OffsetMap getOffsetMap();
    method public androidx.compose.ui.text.AnnotatedString getTransformedText();
  }

  @androidx.compose.runtime.Immutable public interface VisualTransformation {
    method public androidx.compose.ui.text.input.TransformedText filter(androidx.compose.ui.text.AnnotatedString text);
    field public static final androidx.compose.ui.text.input.VisualTransformation.Companion Companion;
  }

  public static final class VisualTransformation.Companion {
    method public androidx.compose.ui.text.input.VisualTransformation getNone();
    property public final androidx.compose.ui.text.input.VisualTransformation None;
  }

}

package androidx.compose.ui.text.intl {

  public final class AndroidPlatformLocaleKt {
  }

  @androidx.compose.runtime.Immutable public final class Locale {
    ctor public Locale(String languageTag);
    method public String getLanguage();
    method public String getRegion();
    method public String getScript();
    method public String toLanguageTag();
    property public final String language;
    property public final String region;
    property public final String script;
    field public static final androidx.compose.ui.text.intl.Locale.Companion Companion;
  }

  public static final class Locale.Companion {
    method public androidx.compose.ui.text.intl.Locale getCurrent();
    property public final androidx.compose.ui.text.intl.Locale current;
  }

  @androidx.compose.runtime.Immutable public final class LocaleList implements java.util.Collection<androidx.compose.ui.text.intl.Locale> kotlin.jvm.internal.markers.KMappedMarker {
    ctor public LocaleList(java.util.List<androidx.compose.ui.text.intl.Locale> localeList);
    ctor public LocaleList(String languageTags);
    ctor public LocaleList(androidx.compose.ui.text.intl.Locale... locales);
    method public java.util.List<androidx.compose.ui.text.intl.Locale> component1();
    method public operator boolean contains(androidx.compose.ui.text.intl.Locale element);
    method public boolean containsAll(java.util.Collection<?> elements);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.intl.LocaleList copy(java.util.List<androidx.compose.ui.text.intl.Locale> localeList);
    method public operator androidx.compose.ui.text.intl.Locale get(int i);
    method public java.util.List<androidx.compose.ui.text.intl.Locale> getLocaleList();
    method public int getSize();
    method public boolean isEmpty();
    method public java.util.Iterator<androidx.compose.ui.text.intl.Locale> iterator();
    property public int size;
    field public static final androidx.compose.ui.text.intl.LocaleList.Companion Companion;
  }

  public static final class LocaleList.Companion {
    method public androidx.compose.ui.text.intl.LocaleList getCurrent();
    property public final androidx.compose.ui.text.intl.LocaleList current;
  }

  public final class PlatformLocaleKt {
  }

}

package androidx.compose.ui.text.platform {

  public final class AndroidParagraphHelperKt {
  }

  public final class AndroidParagraphIntrinsicsKt {
    method @Deprecated public static kotlin.jvm.functions.Function6<java.lang.String,androidx.compose.ui.text.TextStyle,java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>>,java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>>,androidx.compose.ui.unit.Density,androidx.compose.ui.text.font.Font.ResourceLoader,androidx.compose.ui.text.ParagraphIntrinsics> getParagraphIntrinsicsActualFactory();
    method @Deprecated public static void setParagraphIntrinsicsActualFactory(kotlin.jvm.functions.Function6<? super java.lang.String,? super androidx.compose.ui.text.TextStyle,? super java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.SpanStyle>>,? super java.util.List<androidx.compose.ui.text.AnnotatedString.Range<androidx.compose.ui.text.Placeholder>>,? super androidx.compose.ui.unit.Density,? super androidx.compose.ui.text.font.Font.ResourceLoader,? extends androidx.compose.ui.text.ParagraphIntrinsics> p);
  }

  public final class AndroidParagraphKt {
    method @Deprecated public static kotlin.jvm.functions.Function4<androidx.compose.ui.text.ParagraphIntrinsics,java.lang.Integer,java.lang.Boolean,androidx.compose.ui.text.ParagraphConstraints,androidx.compose.ui.text.Paragraph> getParagraphActualFactory();
    method @Deprecated public static void setParagraphActualFactory(kotlin.jvm.functions.Function4<? super androidx.compose.ui.text.ParagraphIntrinsics,? super java.lang.Integer,? super java.lang.Boolean,? super androidx.compose.ui.text.ParagraphConstraints,? extends androidx.compose.ui.text.Paragraph> p);
  }

  public final class AndroidStringDelegateKt {
  }

  public final class TypefaceAdapterKt {
    method public static androidx.compose.ui.text.Typeface typefaceFromFontFamily(android.content.Context context, androidx.compose.ui.text.font.FontFamily fontFamily, java.util.List<? extends kotlin.Pair<androidx.compose.ui.text.font.FontWeight,? extends androidx.compose.ui.text.font.FontStyle>>? necessaryStyles = null);
  }

}

package androidx.compose.ui.text.platform.extensions {

  public final class LocaleExtensionsKt {
  }

  public final class PlaceholderExtensionsKt {
  }

  public final class SpannableExtensionsKt {
  }

  public final class TextPaintExtensionsKt {
  }

}

package androidx.compose.ui.text.style {

  @androidx.compose.runtime.Immutable public final inline class BaselineShift {
    ctor public BaselineShift();
    method public static float constructor-impl(float multiplier);
    method @androidx.compose.runtime.Immutable public static inline boolean equals-impl(float p, Object? p1);
    method public static boolean equals-impl0(float p1, float p2);
    method public float getMultiplier();
    method @androidx.compose.runtime.Immutable public static inline int hashCode-impl(float p);
    method @androidx.compose.runtime.Immutable public static inline String! toString-impl(float p);
    field public static final androidx.compose.ui.text.style.BaselineShift.Companion Companion;
  }

  public static final class BaselineShift.Companion {
    method public float getNone();
    method public float getSubscript();
    method public float getSuperscript();
    property public final float None;
    property public final float Subscript;
    property public final float Superscript;
  }

  public final class BaselineShiftKt {
    method @androidx.compose.runtime.Stable public static float lerp-ylBt8J4(float start, float stop, float fraction);
  }

  public enum ResolvedTextDirection {
    method public static androidx.compose.ui.text.style.ResolvedTextDirection valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.style.ResolvedTextDirection[] values();
    enum_constant public static final androidx.compose.ui.text.style.ResolvedTextDirection Ltr;
    enum_constant public static final androidx.compose.ui.text.style.ResolvedTextDirection Rtl;
  }

  public enum TextAlign {
    method public static androidx.compose.ui.text.style.TextAlign valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.style.TextAlign[] values();
    enum_constant public static final androidx.compose.ui.text.style.TextAlign Center;
    enum_constant public static final androidx.compose.ui.text.style.TextAlign End;
    enum_constant public static final androidx.compose.ui.text.style.TextAlign Justify;
    enum_constant public static final androidx.compose.ui.text.style.TextAlign Left;
    enum_constant public static final androidx.compose.ui.text.style.TextAlign Right;
    enum_constant public static final androidx.compose.ui.text.style.TextAlign Start;
  }

  @androidx.compose.runtime.Immutable public final class TextDecoration {
    method public int component1();
    method public operator boolean contains(androidx.compose.ui.text.style.TextDecoration other);
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.style.TextDecoration copy(int mask);
    method public int getMask();
    method public operator androidx.compose.ui.text.style.TextDecoration plus(androidx.compose.ui.text.style.TextDecoration decoration);
    field public static final androidx.compose.ui.text.style.TextDecoration.Companion Companion;
  }

  public static final class TextDecoration.Companion {
    method public androidx.compose.ui.text.style.TextDecoration combine(java.util.List<androidx.compose.ui.text.style.TextDecoration> decorations);
    method public androidx.compose.ui.text.style.TextDecoration getLineThrough();
    method public androidx.compose.ui.text.style.TextDecoration getNone();
    method public androidx.compose.ui.text.style.TextDecoration getUnderline();
    property public final androidx.compose.ui.text.style.TextDecoration LineThrough;
    property public final androidx.compose.ui.text.style.TextDecoration None;
    property public final androidx.compose.ui.text.style.TextDecoration Underline;
  }

  public enum TextDirection {
    method public static androidx.compose.ui.text.style.TextDirection valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.style.TextDirection[] values();
    enum_constant public static final androidx.compose.ui.text.style.TextDirection Content;
    enum_constant public static final androidx.compose.ui.text.style.TextDirection ContentOrLtr;
    enum_constant public static final androidx.compose.ui.text.style.TextDirection ContentOrRtl;
    enum_constant public static final androidx.compose.ui.text.style.TextDirection Ltr;
    enum_constant public static final androidx.compose.ui.text.style.TextDirection Rtl;
  }

  @androidx.compose.runtime.Immutable public final class TextGeometricTransform {
    ctor public TextGeometricTransform(float scaleX, float skewX);
    ctor public TextGeometricTransform();
    method public float component1();
    method public float component2();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.style.TextGeometricTransform copy(float scaleX, float skewX);
    method public float getScaleX();
    method public float getSkewX();
    field public static final androidx.compose.ui.text.style.TextGeometricTransform.Companion Companion;
  }

  public static final class TextGeometricTransform.Companion {
  }

  public final class TextGeometricTransformKt {
    method public static androidx.compose.ui.text.style.TextGeometricTransform lerp(androidx.compose.ui.text.style.TextGeometricTransform start, androidx.compose.ui.text.style.TextGeometricTransform stop, float fraction);
  }

  @androidx.compose.runtime.Immutable public final class TextIndent {
    method public long component1();
    method public long component2();
    method @androidx.compose.runtime.Immutable public androidx.compose.ui.text.style.TextIndent copy-8E83U4Q(long firstLine, long restLine);
    method public long getFirstLine();
    method public long getRestLine();
    field public static final androidx.compose.ui.text.style.TextIndent.Companion Companion;
  }

  public static final class TextIndent.Companion {
    method public androidx.compose.ui.text.style.TextIndent getNone();
    property public final androidx.compose.ui.text.style.TextIndent None;
  }

  public final class TextIndentKt {
    method public static androidx.compose.ui.text.style.TextIndent lerp(androidx.compose.ui.text.style.TextIndent start, androidx.compose.ui.text.style.TextIndent stop, float fraction);
  }

  public enum TextOverflow {
    method public static androidx.compose.ui.text.style.TextOverflow valueOf(String name) throws java.lang.IllegalArgumentException;
    method public static androidx.compose.ui.text.style.TextOverflow[] values();
    enum_constant public static final androidx.compose.ui.text.style.TextOverflow Clip;
    enum_constant public static final androidx.compose.ui.text.style.TextOverflow Ellipsis;
  }

}

