/*
 * Copyright 2020 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.SupportConfigKt
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

import static androidx.build.dependencies.DependenciesKt.*

plugins {
    id("AndroidXPlugin")
    id("AndroidXUiPlugin")
    id("kotlin-multiplatform")
}

dependencies {
    kotlinPlugin project(path: ":compose:compose-compiler")
}

kotlin {
    jvm()

    sourceSets {
        commonMain.dependencies {
            api(KOTLIN_STDLIB_COMMON)
            api project(":compose:foundation:foundation")
            api project(":compose:material:material")
            api project(":compose:runtime:runtime")
            api project(":compose:ui:ui")
        }

        jvmMain.dependencies {
            api(KOTLIN_STDLIB)
            api(KOTLIN_STDLIB_JDK8)
            api(KOTLIN_COROUTINES_CORE)

            api(SKIKO)
        }

        jvmTest {
            resources.srcDirs += new File(SupportConfigKt.getExternalProjectPath(project), "noto-fonts/other/")
            resources.srcDirs += "src/jvmTest/res"
            dependencies {
                implementation(KOTLIN_COROUTINES_TEST)
                implementation(SKIKO_CURRENT_OS)
                implementation project(":ui:ui-test")
                implementation(JUNIT)
                implementation(TRUTH)
            }
        }

        test.dependencies {
            implementation project(":ui:ui-test")
        }
    }
}

tasks.findByName("jvmTest").configure {
    systemProperties['GOLDEN_PATH'] = project.rootDir.absolutePath + "/../../../golden"
}

tasks.withType(KotlinCompile).configureEach {
    kotlinOptions {
        useIR = true
    }
}
project.tasks.register("jar", Jar).configure {
    baseName = "desktop"
    from { kotlin.jvm().compilations["main"].output.allOutputs }
}

rootProject.tasks.getByName("buildOnServer").configure {
    dependsOn(":compose:desktop:desktop:jar")
}
